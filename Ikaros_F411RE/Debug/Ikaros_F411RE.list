
Ikaros_F411RE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003c64  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000037c  08003e08  08003e08  00013e08  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004184  08004184  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  08004184  08004184  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004184  08004184  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004184  08004184  00014184  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004188  08004188  00014188  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  0800418c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  200001c8  08004354  000201c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000334  08004354  00020334  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000201f2  2**0
                  CONTENTS, READONLY
 13 .debug_info   000018b5  00000000  00000000  00020235  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000063e  00000000  00000000  00021aea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001b8  00000000  00000000  00022128  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000012d  00000000  00000000  000222e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002d52  00000000  00000000  0002240d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002616  00000000  00000000  0002515f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000a16a  00000000  00000000  00027775  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001538  00000000  00000000  000318e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007b  00000000  00000000  00032e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001c8 	.word	0x200001c8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003dec 	.word	0x08003dec

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001cc 	.word	0x200001cc
 80001dc:	08003dec 	.word	0x08003dec

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <GPIO_DigitalRead>:
 *      Author: Sebastian G.M.
 */

#include "gpios.h"

Gpio_State_Control_t GPIO_DigitalRead(Set_Port_t Port_define, Pin_number_t Pin_defined){
 8000bb8:	b480      	push	{r7}
 8000bba:	b085      	sub	sp, #20
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	6078      	str	r0, [r7, #4]
 8000bc0:	460b      	mov	r3, r1
 8000bc2:	70fb      	strb	r3, [r7, #3]

	uint32_t const volatile * const PORT_REG_INPUT = (uint32_t const volatile *const)(Port_define + GPIOx_IDR_OFFSET); //agregamos el 10 para decirle el offset
 8000bc4:	687b      	ldr	r3, [r7, #4]
 8000bc6:	3310      	adds	r3, #16
 8000bc8:	60fb      	str	r3, [r7, #12]

	if(((1<<Pin_defined) & (*PORT_REG_INPUT))==(1<<Pin_defined)){
 8000bca:	78fb      	ldrb	r3, [r7, #3]
 8000bcc:	2201      	movs	r2, #1
 8000bce:	fa02 f303 	lsl.w	r3, r2, r3
 8000bd2:	461a      	mov	r2, r3
 8000bd4:	68fb      	ldr	r3, [r7, #12]
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	4013      	ands	r3, r2
 8000bda:	78fa      	ldrb	r2, [r7, #3]
 8000bdc:	2101      	movs	r1, #1
 8000bde:	fa01 f202 	lsl.w	r2, r1, r2
 8000be2:	4293      	cmp	r3, r2
 8000be4:	d101      	bne.n	8000bea <GPIO_DigitalRead+0x32>
		return High;
 8000be6:	2301      	movs	r3, #1
 8000be8:	e000      	b.n	8000bec <GPIO_DigitalRead+0x34>
	}
	return Low;
 8000bea:	2300      	movs	r3, #0
}
 8000bec:	4618      	mov	r0, r3
 8000bee:	3714      	adds	r7, #20
 8000bf0:	46bd      	mov	sp, r7
 8000bf2:	bc80      	pop	{r7}
 8000bf4:	4770      	bx	lr

08000bf6 <GPIO_DigitalWrite>:


Gpio_State_Control_t GPIO_DigitalWrite(Set_Port_t Port_define, Pin_number_t Pin_defined, Gpio_State_Control_t State){
 8000bf6:	b480      	push	{r7}
 8000bf8:	b085      	sub	sp, #20
 8000bfa:	af00      	add	r7, sp, #0
 8000bfc:	6078      	str	r0, [r7, #4]
 8000bfe:	460b      	mov	r3, r1
 8000c00:	70fb      	strb	r3, [r7, #3]
 8000c02:	4613      	mov	r3, r2
 8000c04:	70bb      	strb	r3, [r7, #2]

	uint32_t volatile *PORT_REG_OUTPUT = (uint32_t volatile*)(Port_define + GPIOx_ODR_OFFSET); //agregamos el 0x14 par indicar output
 8000c06:	687b      	ldr	r3, [r7, #4]
 8000c08:	3314      	adds	r3, #20
 8000c0a:	60fb      	str	r3, [r7, #12]

	if(State){
 8000c0c:	78bb      	ldrb	r3, [r7, #2]
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d009      	beq.n	8000c26 <GPIO_DigitalWrite+0x30>
		*PORT_REG_OUTPUT |= (1<<Pin_defined);
 8000c12:	68fb      	ldr	r3, [r7, #12]
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	78fa      	ldrb	r2, [r7, #3]
 8000c18:	2101      	movs	r1, #1
 8000c1a:	fa01 f202 	lsl.w	r2, r1, r2
 8000c1e:	431a      	orrs	r2, r3
 8000c20:	68fb      	ldr	r3, [r7, #12]
 8000c22:	601a      	str	r2, [r3, #0]
 8000c24:	e009      	b.n	8000c3a <GPIO_DigitalWrite+0x44>
	}else{
		*PORT_REG_OUTPUT &= ~(1<<Pin_defined);
 8000c26:	68fb      	ldr	r3, [r7, #12]
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	78fa      	ldrb	r2, [r7, #3]
 8000c2c:	2101      	movs	r1, #1
 8000c2e:	fa01 f202 	lsl.w	r2, r1, r2
 8000c32:	43d2      	mvns	r2, r2
 8000c34:	401a      	ands	r2, r3
 8000c36:	68fb      	ldr	r3, [r7, #12]
 8000c38:	601a      	str	r2, [r3, #0]

	}

	return State;
 8000c3a:	78bb      	ldrb	r3, [r7, #2]

}
 8000c3c:	4618      	mov	r0, r3
 8000c3e:	3714      	adds	r7, #20
 8000c40:	46bd      	mov	sp, r7
 8000c42:	bc80      	pop	{r7}
 8000c44:	4770      	bx	lr
	...

08000c48 <SetPinMode>:


Status_code_t SetPinMode(Set_Port_t Port_define, Pin_number_t Pin_defined, PinMode_t Mode){
 8000c48:	b580      	push	{r7, lr}
 8000c4a:	b084      	sub	sp, #16
 8000c4c:	af00      	add	r7, sp, #0
 8000c4e:	6078      	str	r0, [r7, #4]
 8000c50:	460b      	mov	r3, r1
 8000c52:	70fb      	strb	r3, [r7, #3]
 8000c54:	4613      	mov	r3, r2
 8000c56:	70bb      	strb	r3, [r7, #2]

	uint32_t volatile *pPort_ModeReg = (uint32_t volatile *)((Port_define)+ OFFSET_PORTS);
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	60fb      	str	r3, [r7, #12]
	uint16_t volatile PositionsOfPin =0;
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	813b      	strh	r3, [r7, #8]
	Status_code_t status=Success;
 8000c60:	2300      	movs	r3, #0
 8000c62:	72fb      	strb	r3, [r7, #11]

	/*DO NOT MODIFY THIS IF STATEMENT, IMPLEMENTED TO AVOID TROUBLES WITH THE BOARD!!!*/
	if((Port_define == Port_A && (Pin_defined ==Pin_13 || Pin_defined ==Pin_14 || Pin_defined ==Pin_2|| Pin_defined ==Pin_3))
 8000c64:	687b      	ldr	r3, [r7, #4]
 8000c66:	4a3f      	ldr	r2, [pc, #252]	; (8000d64 <SetPinMode+0x11c>)
 8000c68:	4293      	cmp	r3, r2
 8000c6a:	d10b      	bne.n	8000c84 <SetPinMode+0x3c>
 8000c6c:	78fb      	ldrb	r3, [r7, #3]
 8000c6e:	2b0d      	cmp	r3, #13
 8000c70:	d023      	beq.n	8000cba <SetPinMode+0x72>
 8000c72:	78fb      	ldrb	r3, [r7, #3]
 8000c74:	2b0e      	cmp	r3, #14
 8000c76:	d020      	beq.n	8000cba <SetPinMode+0x72>
 8000c78:	78fb      	ldrb	r3, [r7, #3]
 8000c7a:	2b02      	cmp	r3, #2
 8000c7c:	d01d      	beq.n	8000cba <SetPinMode+0x72>
 8000c7e:	78fb      	ldrb	r3, [r7, #3]
 8000c80:	2b03      	cmp	r3, #3
 8000c82:	d01a      	beq.n	8000cba <SetPinMode+0x72>
	|| (Port_define == Port_C && (Pin_defined ==Pin_14 || Pin_defined == Pin_15))
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	4a38      	ldr	r2, [pc, #224]	; (8000d68 <SetPinMode+0x120>)
 8000c88:	4293      	cmp	r3, r2
 8000c8a:	d105      	bne.n	8000c98 <SetPinMode+0x50>
 8000c8c:	78fb      	ldrb	r3, [r7, #3]
 8000c8e:	2b0e      	cmp	r3, #14
 8000c90:	d013      	beq.n	8000cba <SetPinMode+0x72>
 8000c92:	78fb      	ldrb	r3, [r7, #3]
 8000c94:	2b0f      	cmp	r3, #15
 8000c96:	d010      	beq.n	8000cba <SetPinMode+0x72>
	|| (Port_define == Port_D && Pin_defined != Pin_2)
 8000c98:	687b      	ldr	r3, [r7, #4]
 8000c9a:	4a34      	ldr	r2, [pc, #208]	; (8000d6c <SetPinMode+0x124>)
 8000c9c:	4293      	cmp	r3, r2
 8000c9e:	d102      	bne.n	8000ca6 <SetPinMode+0x5e>
 8000ca0:	78fb      	ldrb	r3, [r7, #3]
 8000ca2:	2b02      	cmp	r3, #2
 8000ca4:	d109      	bne.n	8000cba <SetPinMode+0x72>
	|| (Port_define == Port_B && (Pin_defined == Pin_11 || Pin_defined == Pin_3))){
 8000ca6:	687b      	ldr	r3, [r7, #4]
 8000ca8:	4a31      	ldr	r2, [pc, #196]	; (8000d70 <SetPinMode+0x128>)
 8000caa:	4293      	cmp	r3, r2
 8000cac:	d107      	bne.n	8000cbe <SetPinMode+0x76>
 8000cae:	78fb      	ldrb	r3, [r7, #3]
 8000cb0:	2b0b      	cmp	r3, #11
 8000cb2:	d002      	beq.n	8000cba <SetPinMode+0x72>
 8000cb4:	78fb      	ldrb	r3, [r7, #3]
 8000cb6:	2b03      	cmp	r3, #3
 8000cb8:	d101      	bne.n	8000cbe <SetPinMode+0x76>

		return PinNotAvailable;
 8000cba:	2301      	movs	r3, #1
 8000cbc:	e04e      	b.n	8000d5c <SetPinMode+0x114>
	}

	status = ClockEnable(Port_define, Enabled);
 8000cbe:	2101      	movs	r1, #1
 8000cc0:	6878      	ldr	r0, [r7, #4]
 8000cc2:	f000 faf7 	bl	80012b4 <ClockEnable>
 8000cc6:	4603      	mov	r3, r0
 8000cc8:	72fb      	strb	r3, [r7, #11]

	PositionsOfPin = (uint16_t volatile)Pin_defined*2;
 8000cca:	78fb      	ldrb	r3, [r7, #3]
 8000ccc:	b29b      	uxth	r3, r3
 8000cce:	005b      	lsls	r3, r3, #1
 8000cd0:	b29b      	uxth	r3, r3
 8000cd2:	813b      	strh	r3, [r7, #8]
	*pPort_ModeReg &= ~(Clear_two_bits<<PositionsOfPin);
 8000cd4:	893b      	ldrh	r3, [r7, #8]
 8000cd6:	b29b      	uxth	r3, r3
 8000cd8:	461a      	mov	r2, r3
 8000cda:	2303      	movs	r3, #3
 8000cdc:	4093      	lsls	r3, r2
 8000cde:	43da      	mvns	r2, r3
 8000ce0:	68fb      	ldr	r3, [r7, #12]
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	401a      	ands	r2, r3
 8000ce6:	68fb      	ldr	r3, [r7, #12]
 8000ce8:	601a      	str	r2, [r3, #0]

	if(Mode == Output){
 8000cea:	78bb      	ldrb	r3, [r7, #2]
 8000cec:	2b01      	cmp	r3, #1
 8000cee:	d10b      	bne.n	8000d08 <SetPinMode+0xc0>
		*pPort_ModeReg |= (Output<<PositionsOfPin);
 8000cf0:	893b      	ldrh	r3, [r7, #8]
 8000cf2:	b29b      	uxth	r3, r3
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	2301      	movs	r3, #1
 8000cf8:	fa03 f202 	lsl.w	r2, r3, r2
 8000cfc:	68fb      	ldr	r3, [r7, #12]
 8000cfe:	681b      	ldr	r3, [r3, #0]
 8000d00:	431a      	orrs	r2, r3
 8000d02:	68fb      	ldr	r3, [r7, #12]
 8000d04:	601a      	str	r2, [r3, #0]
 8000d06:	e028      	b.n	8000d5a <SetPinMode+0x112>

	}else if(Mode==Input) {
 8000d08:	78bb      	ldrb	r3, [r7, #2]
 8000d0a:	2b00      	cmp	r3, #0
 8000d0c:	d10b      	bne.n	8000d26 <SetPinMode+0xde>
		*pPort_ModeReg &= ~(Clear_two_bits<<PositionsOfPin); //si es input simplemente limpiara esas posiciones a 00
 8000d0e:	893b      	ldrh	r3, [r7, #8]
 8000d10:	b29b      	uxth	r3, r3
 8000d12:	461a      	mov	r2, r3
 8000d14:	2303      	movs	r3, #3
 8000d16:	4093      	lsls	r3, r2
 8000d18:	43da      	mvns	r2, r3
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	401a      	ands	r2, r3
 8000d20:	68fb      	ldr	r3, [r7, #12]
 8000d22:	601a      	str	r2, [r3, #0]
 8000d24:	e019      	b.n	8000d5a <SetPinMode+0x112>

	}else if(Mode == Alt_func_mode){
 8000d26:	78bb      	ldrb	r3, [r7, #2]
 8000d28:	2b02      	cmp	r3, #2
 8000d2a:	d10b      	bne.n	8000d44 <SetPinMode+0xfc>
		*pPort_ModeReg |= (Alt_func_mode<<PositionsOfPin);
 8000d2c:	893b      	ldrh	r3, [r7, #8]
 8000d2e:	b29b      	uxth	r3, r3
 8000d30:	461a      	mov	r2, r3
 8000d32:	2302      	movs	r3, #2
 8000d34:	fa03 f202 	lsl.w	r2, r3, r2
 8000d38:	68fb      	ldr	r3, [r7, #12]
 8000d3a:	681b      	ldr	r3, [r3, #0]
 8000d3c:	431a      	orrs	r2, r3
 8000d3e:	68fb      	ldr	r3, [r7, #12]
 8000d40:	601a      	str	r2, [r3, #0]
 8000d42:	e00a      	b.n	8000d5a <SetPinMode+0x112>

	}else{
		*pPort_ModeReg |= (Analog_mode<<PositionsOfPin);
 8000d44:	893b      	ldrh	r3, [r7, #8]
 8000d46:	b29b      	uxth	r3, r3
 8000d48:	461a      	mov	r2, r3
 8000d4a:	2303      	movs	r3, #3
 8000d4c:	fa03 f202 	lsl.w	r2, r3, r2
 8000d50:	68fb      	ldr	r3, [r7, #12]
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	431a      	orrs	r2, r3
 8000d56:	68fb      	ldr	r3, [r7, #12]
 8000d58:	601a      	str	r2, [r3, #0]

	}

	return status;
 8000d5a:	7afb      	ldrb	r3, [r7, #11]
}
 8000d5c:	4618      	mov	r0, r3
 8000d5e:	3710      	adds	r7, #16
 8000d60:	46bd      	mov	sp, r7
 8000d62:	bd80      	pop	{r7, pc}
 8000d64:	40020000 	.word	0x40020000
 8000d68:	40020800 	.word	0x40020800
 8000d6c:	40020c00 	.word	0x40020c00
 8000d70:	40020400 	.word	0x40020400

08000d74 <main>:


//example for GPIOS and stepper_motor

int main(void)
{
 8000d74:	b580      	push	{r7, lr}
 8000d76:	b084      	sub	sp, #16
 8000d78:	af00      	add	r7, sp, #0

	SetPinMode(Port_B, Pin_8, Output);
 8000d7a:	2201      	movs	r2, #1
 8000d7c:	2108      	movs	r1, #8
 8000d7e:	4856      	ldr	r0, [pc, #344]	; (8000ed8 <main+0x164>)
 8000d80:	f7ff ff62 	bl	8000c48 <SetPinMode>
	SetPinMode(Port_B, Pin_9, Output);
 8000d84:	2201      	movs	r2, #1
 8000d86:	2109      	movs	r1, #9
 8000d88:	4853      	ldr	r0, [pc, #332]	; (8000ed8 <main+0x164>)
 8000d8a:	f7ff ff5d 	bl	8000c48 <SetPinMode>
	SetPinMode(Port_C, Pin_13, Input);
 8000d8e:	2200      	movs	r2, #0
 8000d90:	210d      	movs	r1, #13
 8000d92:	4852      	ldr	r0, [pc, #328]	; (8000edc <main+0x168>)
 8000d94:	f7ff ff58 	bl	8000c48 <SetPinMode>

//	Init_8bits_Stepper_Motor();
//	uint8_t sec_8bit_linea[16]={129,128,192,64,96,32,48,16,24,8,12,4,6,2,3,1};
//	int8_t start_8bit=15;

	Init_4bits_Stepper_Motor(PortA_Op1);
 8000d98:	20f0      	movs	r0, #240	; 0xf0
 8000d9a:	f000 f8a3 	bl	8000ee4 <Init_4bits_Stepper_Motor>
	Init_4bits_Stepper_Motor(PortA_Op2);
 8000d9e:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8000da2:	f000 f89f 	bl	8000ee4 <Init_4bits_Stepper_Motor>


	uint8_t sec_4bit_linea[8]={9,8,12,4,6,2,3,1};
 8000da6:	4a4e      	ldr	r2, [pc, #312]	; (8000ee0 <main+0x16c>)
 8000da8:	1d3b      	adds	r3, r7, #4
 8000daa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000dae:	e883 0003 	stmia.w	r3, {r0, r1}
	int8_t start_4bit=7;
 8000db2:	2307      	movs	r3, #7
 8000db4:	73fb      	strb	r3, [r7, #15]
	int8_t start_4bit2=7;
 8000db6:	2307      	movs	r3, #7
 8000db8:	73bb      	strb	r3, [r7, #14]

	uint8_t sentido =0;
 8000dba:	2300      	movs	r3, #0
 8000dbc:	737b      	strb	r3, [r7, #13]

	while(1){

		if(GPIO_DigitalRead(Port_C,Pin_13) == Low){
 8000dbe:	210d      	movs	r1, #13
 8000dc0:	4846      	ldr	r0, [pc, #280]	; (8000edc <main+0x168>)
 8000dc2:	f7ff fef9 	bl	8000bb8 <GPIO_DigitalRead>
 8000dc6:	4603      	mov	r3, r0
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	d11f      	bne.n	8000e0c <main+0x98>

			GPIO_DigitalWrite(Port_B, Pin_8, sentido);
 8000dcc:	7b7b      	ldrb	r3, [r7, #13]
 8000dce:	461a      	mov	r2, r3
 8000dd0:	2108      	movs	r1, #8
 8000dd2:	4841      	ldr	r0, [pc, #260]	; (8000ed8 <main+0x164>)
 8000dd4:	f7ff ff0f 	bl	8000bf6 <GPIO_DigitalWrite>
			GPIO_DigitalWrite(Port_B, Pin_9, !sentido);
 8000dd8:	7b7b      	ldrb	r3, [r7, #13]
 8000dda:	2b00      	cmp	r3, #0
 8000ddc:	bf0c      	ite	eq
 8000dde:	2301      	moveq	r3, #1
 8000de0:	2300      	movne	r3, #0
 8000de2:	b2db      	uxtb	r3, r3
 8000de4:	461a      	mov	r2, r3
 8000de6:	2109      	movs	r1, #9
 8000de8:	483b      	ldr	r0, [pc, #236]	; (8000ed8 <main+0x164>)
 8000dea:	f7ff ff04 	bl	8000bf6 <GPIO_DigitalWrite>
			sentido = !sentido;
 8000dee:	7b7b      	ldrb	r3, [r7, #13]
 8000df0:	2b00      	cmp	r3, #0
 8000df2:	bf0c      	ite	eq
 8000df4:	2301      	moveq	r3, #1
 8000df6:	2300      	movne	r3, #0
 8000df8:	b2db      	uxtb	r3, r3
 8000dfa:	737b      	strb	r3, [r7, #13]
			while(GPIO_DigitalRead(Port_C,Pin_13) == Low){
 8000dfc:	bf00      	nop
 8000dfe:	210d      	movs	r1, #13
 8000e00:	4836      	ldr	r0, [pc, #216]	; (8000edc <main+0x168>)
 8000e02:	f7ff fed9 	bl	8000bb8 <GPIO_DigitalRead>
 8000e06:	4603      	mov	r3, r0
 8000e08:	2b00      	cmp	r3, #0
 8000e0a:	d0f8      	beq.n	8000dfe <main+0x8a>

			}
		}

		if(sentido==0){
 8000e0c:	7b7b      	ldrb	r3, [r7, #13]
 8000e0e:	2b00      	cmp	r3, #0
 8000e10:	d130      	bne.n	8000e74 <main+0x100>
			Write_4bits_Stepper_Motor(PortA_Op1,sec_4bit_linea[start_4bit]);
 8000e12:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e16:	3310      	adds	r3, #16
 8000e18:	443b      	add	r3, r7
 8000e1a:	f813 3c0c 	ldrb.w	r3, [r3, #-12]
 8000e1e:	4619      	mov	r1, r3
 8000e20:	20f0      	movs	r0, #240	; 0xf0
 8000e22:	f000 f8dd 	bl	8000fe0 <Write_4bits_Stepper_Motor>
			Write_4bits_Stepper_Motor(PortA_Op2,sec_4bit_linea[start_4bit2]);
 8000e26:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000e2a:	3310      	adds	r3, #16
 8000e2c:	443b      	add	r3, r7
 8000e2e:	f813 3c0c 	ldrb.w	r3, [r3, #-12]
 8000e32:	4619      	mov	r1, r3
 8000e34:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8000e38:	f000 f8d2 	bl	8000fe0 <Write_4bits_Stepper_Motor>
			start_4bit++;
 8000e3c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e40:	b2db      	uxtb	r3, r3
 8000e42:	3301      	adds	r3, #1
 8000e44:	b2db      	uxtb	r3, r3
 8000e46:	73fb      	strb	r3, [r7, #15]
			if(start_4bit>7){
 8000e48:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e4c:	2b07      	cmp	r3, #7
 8000e4e:	dd01      	ble.n	8000e54 <main+0xe0>
				start_4bit=0;
 8000e50:	2300      	movs	r3, #0
 8000e52:	73fb      	strb	r3, [r7, #15]
			}

			start_4bit2--;
 8000e54:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000e58:	b2db      	uxtb	r3, r3
 8000e5a:	3b01      	subs	r3, #1
 8000e5c:	b2db      	uxtb	r3, r3
 8000e5e:	73bb      	strb	r3, [r7, #14]
			if(start_4bit2<0){
 8000e60:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000e64:	2b00      	cmp	r3, #0
 8000e66:	da01      	bge.n	8000e6c <main+0xf8>
				start_4bit2=7;
 8000e68:	2307      	movs	r3, #7
 8000e6a:	73bb      	strb	r3, [r7, #14]
			}
			Delay(30);
 8000e6c:	201e      	movs	r0, #30
 8000e6e:	f000 fac3 	bl	80013f8 <Delay>
 8000e72:	e7a4      	b.n	8000dbe <main+0x4a>
		}else{
			Write_4bits_Stepper_Motor(PortA_Op1,sec_4bit_linea[start_4bit]);
 8000e74:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000e78:	3310      	adds	r3, #16
 8000e7a:	443b      	add	r3, r7
 8000e7c:	f813 3c0c 	ldrb.w	r3, [r3, #-12]
 8000e80:	4619      	mov	r1, r3
 8000e82:	20f0      	movs	r0, #240	; 0xf0
 8000e84:	f000 f8ac 	bl	8000fe0 <Write_4bits_Stepper_Motor>
			Write_4bits_Stepper_Motor(PortA_Op2,sec_4bit_linea[start_4bit2]);
 8000e88:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000e8c:	3310      	adds	r3, #16
 8000e8e:	443b      	add	r3, r7
 8000e90:	f813 3c0c 	ldrb.w	r3, [r3, #-12]
 8000e94:	4619      	mov	r1, r3
 8000e96:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8000e9a:	f000 f8a1 	bl	8000fe0 <Write_4bits_Stepper_Motor>
			start_4bit--;
 8000e9e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000ea2:	b2db      	uxtb	r3, r3
 8000ea4:	3b01      	subs	r3, #1
 8000ea6:	b2db      	uxtb	r3, r3
 8000ea8:	73fb      	strb	r3, [r7, #15]
			if(start_4bit<0){
 8000eaa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	da01      	bge.n	8000eb6 <main+0x142>
				start_4bit=7;
 8000eb2:	2307      	movs	r3, #7
 8000eb4:	73fb      	strb	r3, [r7, #15]
			}

			start_4bit2++;
 8000eb6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000eba:	b2db      	uxtb	r3, r3
 8000ebc:	3301      	adds	r3, #1
 8000ebe:	b2db      	uxtb	r3, r3
 8000ec0:	73bb      	strb	r3, [r7, #14]
			if(start_4bit2>7){
 8000ec2:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000ec6:	2b07      	cmp	r3, #7
 8000ec8:	dd01      	ble.n	8000ece <main+0x15a>
				start_4bit2=0;
 8000eca:	2300      	movs	r3, #0
 8000ecc:	73bb      	strb	r3, [r7, #14]
			}
			Delay(30);
 8000ece:	201e      	movs	r0, #30
 8000ed0:	f000 fa92 	bl	80013f8 <Delay>
		if(GPIO_DigitalRead(Port_C,Pin_13) == Low){
 8000ed4:	e773      	b.n	8000dbe <main+0x4a>
 8000ed6:	bf00      	nop
 8000ed8:	40020400 	.word	0x40020400
 8000edc:	40020800 	.word	0x40020800
 8000ee0:	08003e08 	.word	0x08003e08

08000ee4 <Init_4bits_Stepper_Motor>:
	return Success;

}


Status_code_t Init_4bits_Stepper_Motor(Stepper_option_t Stepper_alternative){
 8000ee4:	b580      	push	{r7, lr}
 8000ee6:	b088      	sub	sp, #32
 8000ee8:	af00      	add	r7, sp, #0
 8000eea:	4603      	mov	r3, r0
 8000eec:	80fb      	strh	r3, [r7, #6]

	uint8_t output_count=0;
 8000eee:	2300      	movs	r3, #0
 8000ef0:	77fb      	strb	r3, [r7, #31]
	uint8_t found_bits =0;
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	73fb      	strb	r3, [r7, #15]
	uint8_t starting_gpio =0;
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	77bb      	strb	r3, [r7, #30]
	uint16_t volatile PositionsOfPin =0;
 8000efa:	2300      	movs	r3, #0
 8000efc:	81bb      	strh	r3, [r7, #12]
	Set_Port_t Port_option = Port_A; //set as a default
 8000efe:	4b35      	ldr	r3, [pc, #212]	; (8000fd4 <Init_4bits_Stepper_Motor+0xf0>)
 8000f00:	61bb      	str	r3, [r7, #24]

	switch(Stepper_alternative){
 8000f02:	88fb      	ldrh	r3, [r7, #6]
 8000f04:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 8000f08:	d016      	beq.n	8000f38 <Init_4bits_Stepper_Motor+0x54>
 8000f0a:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 8000f0e:	dc1d      	bgt.n	8000f4c <Init_4bits_Stepper_Motor+0x68>
 8000f10:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8000f14:	d00b      	beq.n	8000f2e <Init_4bits_Stepper_Motor+0x4a>
 8000f16:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8000f1a:	dc17      	bgt.n	8000f4c <Init_4bits_Stepper_Motor+0x68>
 8000f1c:	2b0f      	cmp	r3, #15
 8000f1e:	d010      	beq.n	8000f42 <Init_4bits_Stepper_Motor+0x5e>
 8000f20:	2bf0      	cmp	r3, #240	; 0xf0
 8000f22:	d113      	bne.n	8000f4c <Init_4bits_Stepper_Motor+0x68>
	case PortA_Op1:
		Port_option = Port_A;
 8000f24:	4b2b      	ldr	r3, [pc, #172]	; (8000fd4 <Init_4bits_Stepper_Motor+0xf0>)
 8000f26:	61bb      	str	r3, [r7, #24]
		starting_gpio =Pin_4;
 8000f28:	2304      	movs	r3, #4
 8000f2a:	77bb      	strb	r3, [r7, #30]
		break;
 8000f2c:	e010      	b.n	8000f50 <Init_4bits_Stepper_Motor+0x6c>
	case PortA_Op2:
		starting_gpio = Pin_8;
 8000f2e:	2308      	movs	r3, #8
 8000f30:	77bb      	strb	r3, [r7, #30]
		Port_option = Port_A;
 8000f32:	4b28      	ldr	r3, [pc, #160]	; (8000fd4 <Init_4bits_Stepper_Motor+0xf0>)
 8000f34:	61bb      	str	r3, [r7, #24]
		break;
 8000f36:	e00b      	b.n	8000f50 <Init_4bits_Stepper_Motor+0x6c>
	case PortB_Op1:
		starting_gpio =Pin_12;
 8000f38:	230c      	movs	r3, #12
 8000f3a:	77bb      	strb	r3, [r7, #30]

		Port_option = Port_B;
 8000f3c:	4b26      	ldr	r3, [pc, #152]	; (8000fd8 <Init_4bits_Stepper_Motor+0xf4>)
 8000f3e:	61bb      	str	r3, [r7, #24]
		break;
 8000f40:	e006      	b.n	8000f50 <Init_4bits_Stepper_Motor+0x6c>
	case PortC_Op1:
		starting_gpio =Pin_0;
 8000f42:	2300      	movs	r3, #0
 8000f44:	77bb      	strb	r3, [r7, #30]
		Port_option = Port_C;
 8000f46:	4b25      	ldr	r3, [pc, #148]	; (8000fdc <Init_4bits_Stepper_Motor+0xf8>)
 8000f48:	61bb      	str	r3, [r7, #24]
		break;
 8000f4a:	e001      	b.n	8000f50 <Init_4bits_Stepper_Motor+0x6c>
	default:
		return OptionNotSupported;
 8000f4c:	2304      	movs	r3, #4
 8000f4e:	e03c      	b.n	8000fca <Init_4bits_Stepper_Motor+0xe6>
	}

	uint32_t volatile *pPort_ModeReg = (uint32_t volatile *)(Port_option+ OFFSET_PORTS);
 8000f50:	69bb      	ldr	r3, [r7, #24]
 8000f52:	617b      	str	r3, [r7, #20]
	ClockEnable(Port_option, Enabled);
 8000f54:	2101      	movs	r1, #1
 8000f56:	69b8      	ldr	r0, [r7, #24]
 8000f58:	f000 f9ac 	bl	80012b4 <ClockEnable>
	uint8_t  *set_to_output = search_bits(Stepper_alternative, &found_bits);
 8000f5c:	f107 020f 	add.w	r2, r7, #15
 8000f60:	88fb      	ldrh	r3, [r7, #6]
 8000f62:	4611      	mov	r1, r2
 8000f64:	4618      	mov	r0, r3
 8000f66:	f000 f88b 	bl	8001080 <search_bits>
 8000f6a:	6138      	str	r0, [r7, #16]


	PositionsOfPin = (uint16_t volatile)starting_gpio*2;
 8000f6c:	7fbb      	ldrb	r3, [r7, #30]
 8000f6e:	b29b      	uxth	r3, r3
 8000f70:	005b      	lsls	r3, r3, #1
 8000f72:	b29b      	uxth	r3, r3
 8000f74:	81bb      	strh	r3, [r7, #12]
	*pPort_ModeReg &= ~(Clear_eight_bits<<PositionsOfPin);
 8000f76:	89bb      	ldrh	r3, [r7, #12]
 8000f78:	b29b      	uxth	r3, r3
 8000f7a:	461a      	mov	r2, r3
 8000f7c:	23ff      	movs	r3, #255	; 0xff
 8000f7e:	4093      	lsls	r3, r2
 8000f80:	43da      	mvns	r2, r3
 8000f82:	697b      	ldr	r3, [r7, #20]
 8000f84:	681b      	ldr	r3, [r3, #0]
 8000f86:	401a      	ands	r2, r3
 8000f88:	697b      	ldr	r3, [r7, #20]
 8000f8a:	601a      	str	r2, [r3, #0]

	while(output_count<=found_bits && output_count<=MAX_GPIOS){
 8000f8c:	e015      	b.n	8000fba <Init_4bits_Stepper_Motor+0xd6>
		PositionsOfPin=(set_to_output[output_count]*2);
 8000f8e:	7ffb      	ldrb	r3, [r7, #31]
 8000f90:	693a      	ldr	r2, [r7, #16]
 8000f92:	4413      	add	r3, r2
 8000f94:	781b      	ldrb	r3, [r3, #0]
 8000f96:	b29b      	uxth	r3, r3
 8000f98:	005b      	lsls	r3, r3, #1
 8000f9a:	b29b      	uxth	r3, r3
 8000f9c:	81bb      	strh	r3, [r7, #12]
		*pPort_ModeReg |= (Output<<PositionsOfPin);
 8000f9e:	89bb      	ldrh	r3, [r7, #12]
 8000fa0:	b29b      	uxth	r3, r3
 8000fa2:	461a      	mov	r2, r3
 8000fa4:	2301      	movs	r3, #1
 8000fa6:	fa03 f202 	lsl.w	r2, r3, r2
 8000faa:	697b      	ldr	r3, [r7, #20]
 8000fac:	681b      	ldr	r3, [r3, #0]
 8000fae:	431a      	orrs	r2, r3
 8000fb0:	697b      	ldr	r3, [r7, #20]
 8000fb2:	601a      	str	r2, [r3, #0]
		output_count++;
 8000fb4:	7ffb      	ldrb	r3, [r7, #31]
 8000fb6:	3301      	adds	r3, #1
 8000fb8:	77fb      	strb	r3, [r7, #31]
	while(output_count<=found_bits && output_count<=MAX_GPIOS){
 8000fba:	7bfb      	ldrb	r3, [r7, #15]
 8000fbc:	7ffa      	ldrb	r2, [r7, #31]
 8000fbe:	429a      	cmp	r2, r3
 8000fc0:	d802      	bhi.n	8000fc8 <Init_4bits_Stepper_Motor+0xe4>
 8000fc2:	7ffb      	ldrb	r3, [r7, #31]
 8000fc4:	2b0f      	cmp	r3, #15
 8000fc6:	d9e2      	bls.n	8000f8e <Init_4bits_Stepper_Motor+0xaa>
	}


	return Success;
 8000fc8:	2300      	movs	r3, #0
}
 8000fca:	4618      	mov	r0, r3
 8000fcc:	3720      	adds	r7, #32
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	bd80      	pop	{r7, pc}
 8000fd2:	bf00      	nop
 8000fd4:	40020000 	.word	0x40020000
 8000fd8:	40020400 	.word	0x40020400
 8000fdc:	40020800 	.word	0x40020800

08000fe0 <Write_4bits_Stepper_Motor>:


Status_code_t Write_4bits_Stepper_Motor(Stepper_option_t Stepper_alternative, uint32_t secuence){
 8000fe0:	b480      	push	{r7}
 8000fe2:	b087      	sub	sp, #28
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	6039      	str	r1, [r7, #0]
 8000fea:	80fb      	strh	r3, [r7, #6]

	uint8_t gpio_offset = 0;
 8000fec:	2300      	movs	r3, #0
 8000fee:	75fb      	strb	r3, [r7, #23]
	Set_Port_t Port_option = Port_A;
 8000ff0:	4b20      	ldr	r3, [pc, #128]	; (8001074 <Write_4bits_Stepper_Motor+0x94>)
 8000ff2:	613b      	str	r3, [r7, #16]

	switch(Stepper_alternative){
 8000ff4:	88fb      	ldrh	r3, [r7, #6]
 8000ff6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 8000ffa:	d016      	beq.n	800102a <Write_4bits_Stepper_Motor+0x4a>
 8000ffc:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 8001000:	dc1d      	bgt.n	800103e <Write_4bits_Stepper_Motor+0x5e>
 8001002:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8001006:	d00b      	beq.n	8001020 <Write_4bits_Stepper_Motor+0x40>
 8001008:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 800100c:	dc17      	bgt.n	800103e <Write_4bits_Stepper_Motor+0x5e>
 800100e:	2b0f      	cmp	r3, #15
 8001010:	d010      	beq.n	8001034 <Write_4bits_Stepper_Motor+0x54>
 8001012:	2bf0      	cmp	r3, #240	; 0xf0
 8001014:	d113      	bne.n	800103e <Write_4bits_Stepper_Motor+0x5e>
	case PortA_Op1:
		Port_option = Port_A;
 8001016:	4b17      	ldr	r3, [pc, #92]	; (8001074 <Write_4bits_Stepper_Motor+0x94>)
 8001018:	613b      	str	r3, [r7, #16]
		gpio_offset = Pin_4;
 800101a:	2304      	movs	r3, #4
 800101c:	75fb      	strb	r3, [r7, #23]
		break;
 800101e:	e010      	b.n	8001042 <Write_4bits_Stepper_Motor+0x62>
	case PortA_Op2:
		Port_option = Port_A;
 8001020:	4b14      	ldr	r3, [pc, #80]	; (8001074 <Write_4bits_Stepper_Motor+0x94>)
 8001022:	613b      	str	r3, [r7, #16]
		gpio_offset = Pin_8;
 8001024:	2308      	movs	r3, #8
 8001026:	75fb      	strb	r3, [r7, #23]
		break;
 8001028:	e00b      	b.n	8001042 <Write_4bits_Stepper_Motor+0x62>
	case PortB_Op1:
		Port_option = Port_B;
 800102a:	4b13      	ldr	r3, [pc, #76]	; (8001078 <Write_4bits_Stepper_Motor+0x98>)
 800102c:	613b      	str	r3, [r7, #16]
		gpio_offset = Pin_12;
 800102e:	230c      	movs	r3, #12
 8001030:	75fb      	strb	r3, [r7, #23]
		break;
 8001032:	e006      	b.n	8001042 <Write_4bits_Stepper_Motor+0x62>
	case PortC_Op1:
		Port_option = Port_C;
 8001034:	4b11      	ldr	r3, [pc, #68]	; (800107c <Write_4bits_Stepper_Motor+0x9c>)
 8001036:	613b      	str	r3, [r7, #16]
		gpio_offset = Pin_0;
 8001038:	2300      	movs	r3, #0
 800103a:	75fb      	strb	r3, [r7, #23]
		break;
 800103c:	e001      	b.n	8001042 <Write_4bits_Stepper_Motor+0x62>
	default:
		return OptionNotSupported;
 800103e:	2304      	movs	r3, #4
 8001040:	e013      	b.n	800106a <Write_4bits_Stepper_Motor+0x8a>
	}

	uint32_t volatile *PORT_REG_OUTPUT = (uint32_t volatile*)(Port_option + GPIOx_ODR_OFFSET);
 8001042:	693b      	ldr	r3, [r7, #16]
 8001044:	3314      	adds	r3, #20
 8001046:	60fb      	str	r3, [r7, #12]
	*PORT_REG_OUTPUT &= ~(Stepper_alternative); //no need to be multiplied by 2, it from 0 to 15
 8001048:	68fb      	ldr	r3, [r7, #12]
 800104a:	681b      	ldr	r3, [r3, #0]
 800104c:	88fa      	ldrh	r2, [r7, #6]
 800104e:	43d2      	mvns	r2, r2
 8001050:	401a      	ands	r2, r3
 8001052:	68fb      	ldr	r3, [r7, #12]
 8001054:	601a      	str	r2, [r3, #0]
	*PORT_REG_OUTPUT |= (secuence << gpio_offset);
 8001056:	68fb      	ldr	r3, [r7, #12]
 8001058:	681a      	ldr	r2, [r3, #0]
 800105a:	7dfb      	ldrb	r3, [r7, #23]
 800105c:	6839      	ldr	r1, [r7, #0]
 800105e:	fa01 f303 	lsl.w	r3, r1, r3
 8001062:	431a      	orrs	r2, r3
 8001064:	68fb      	ldr	r3, [r7, #12]
 8001066:	601a      	str	r2, [r3, #0]

	return Success;
 8001068:	2300      	movs	r3, #0

}
 800106a:	4618      	mov	r0, r3
 800106c:	371c      	adds	r7, #28
 800106e:	46bd      	mov	sp, r7
 8001070:	bc80      	pop	{r7}
 8001072:	4770      	bx	lr
 8001074:	40020000 	.word	0x40020000
 8001078:	40020400 	.word	0x40020400
 800107c:	40020800 	.word	0x40020800

08001080 <search_bits>:

uint8_t *search_bits(Stepper_option_t Stepper_alternative, uint8_t* found_bits){
 8001080:	b580      	push	{r7, lr}
 8001082:	b088      	sub	sp, #32
 8001084:	af00      	add	r7, sp, #0
 8001086:	4603      	mov	r3, r0
 8001088:	6039      	str	r1, [r7, #0]
 800108a:	80fb      	strh	r3, [r7, #6]

	uint8_t high_state_positions[MAX_GPIOS];
	memset(high_state_positions,'\0',MAX_GPIOS);
 800108c:	f107 0308 	add.w	r3, r7, #8
 8001090:	220f      	movs	r2, #15
 8001092:	2100      	movs	r1, #0
 8001094:	4618      	mov	r0, r3
 8001096:	f000 ff7e 	bl	8001f96 <memset>
	uint8_t* pHigh_position;
	uint8_t GPIO_position_count = 0;
 800109a:	2300      	movs	r3, #0
 800109c:	77fb      	strb	r3, [r7, #31]
	uint8_t position_high_state =0;
 800109e:	2300      	movs	r3, #0
 80010a0:	77bb      	strb	r3, [r7, #30]

	while(GPIO_position_count <= MAX_GPIOS){
 80010a2:	e013      	b.n	80010cc <search_bits+0x4c>

		if((Stepper_alternative>>GPIO_position_count) & 1){
 80010a4:	88fa      	ldrh	r2, [r7, #6]
 80010a6:	7ffb      	ldrb	r3, [r7, #31]
 80010a8:	fa42 f303 	asr.w	r3, r2, r3
 80010ac:	f003 0301 	and.w	r3, r3, #1
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d008      	beq.n	80010c6 <search_bits+0x46>
			high_state_positions[position_high_state] = GPIO_position_count;
 80010b4:	7fbb      	ldrb	r3, [r7, #30]
 80010b6:	3320      	adds	r3, #32
 80010b8:	443b      	add	r3, r7
 80010ba:	7ffa      	ldrb	r2, [r7, #31]
 80010bc:	f803 2c18 	strb.w	r2, [r3, #-24]
			position_high_state++;
 80010c0:	7fbb      	ldrb	r3, [r7, #30]
 80010c2:	3301      	adds	r3, #1
 80010c4:	77bb      	strb	r3, [r7, #30]
		}
		GPIO_position_count++;
 80010c6:	7ffb      	ldrb	r3, [r7, #31]
 80010c8:	3301      	adds	r3, #1
 80010ca:	77fb      	strb	r3, [r7, #31]
	while(GPIO_position_count <= MAX_GPIOS){
 80010cc:	7ffb      	ldrb	r3, [r7, #31]
 80010ce:	2b0f      	cmp	r3, #15
 80010d0:	d9e8      	bls.n	80010a4 <search_bits+0x24>
	}

	*found_bits = position_high_state;
 80010d2:	683b      	ldr	r3, [r7, #0]
 80010d4:	7fba      	ldrb	r2, [r7, #30]
 80010d6:	701a      	strb	r2, [r3, #0]
	pHigh_position = &high_state_positions[0];
 80010d8:	f107 0308 	add.w	r3, r7, #8
 80010dc:	61bb      	str	r3, [r7, #24]

	return pHigh_position;
 80010de:	69bb      	ldr	r3, [r7, #24]

}
 80010e0:	4618      	mov	r0, r3
 80010e2:	3720      	adds	r7, #32
 80010e4:	46bd      	mov	sp, r7
 80010e6:	bd80      	pop	{r7, pc}

080010e8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80010e8:	b480      	push	{r7}
 80010ea:	b083      	sub	sp, #12
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	4603      	mov	r3, r0
 80010f0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80010f2:	4b0e      	ldr	r3, [pc, #56]	; (800112c <ITM_SendChar+0x44>)
 80010f4:	681b      	ldr	r3, [r3, #0]
 80010f6:	4a0d      	ldr	r2, [pc, #52]	; (800112c <ITM_SendChar+0x44>)
 80010f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80010fc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80010fe:	4b0c      	ldr	r3, [pc, #48]	; (8001130 <ITM_SendChar+0x48>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	4a0b      	ldr	r2, [pc, #44]	; (8001130 <ITM_SendChar+0x48>)
 8001104:	f043 0301 	orr.w	r3, r3, #1
 8001108:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800110a:	bf00      	nop
 800110c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	f003 0301 	and.w	r3, r3, #1
 8001116:	2b00      	cmp	r3, #0
 8001118:	d0f8      	beq.n	800110c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800111a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800111e:	79fb      	ldrb	r3, [r7, #7]
 8001120:	6013      	str	r3, [r2, #0]
}
 8001122:	bf00      	nop
 8001124:	370c      	adds	r7, #12
 8001126:	46bd      	mov	sp, r7
 8001128:	bc80      	pop	{r7}
 800112a:	4770      	bx	lr
 800112c:	e000edfc 	.word	0xe000edfc
 8001130:	e0000e00 	.word	0xe0000e00

08001134 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001134:	b480      	push	{r7}
 8001136:	af00      	add	r7, sp, #0
	return 1;
 8001138:	2301      	movs	r3, #1
}
 800113a:	4618      	mov	r0, r3
 800113c:	46bd      	mov	sp, r7
 800113e:	bc80      	pop	{r7}
 8001140:	4770      	bx	lr

08001142 <_kill>:

int _kill(int pid, int sig)
{
 8001142:	b580      	push	{r7, lr}
 8001144:	b082      	sub	sp, #8
 8001146:	af00      	add	r7, sp, #0
 8001148:	6078      	str	r0, [r7, #4]
 800114a:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800114c:	f000 ff76 	bl	800203c <__errno>
 8001150:	4603      	mov	r3, r0
 8001152:	2216      	movs	r2, #22
 8001154:	601a      	str	r2, [r3, #0]
	return -1;
 8001156:	f04f 33ff 	mov.w	r3, #4294967295
}
 800115a:	4618      	mov	r0, r3
 800115c:	3708      	adds	r7, #8
 800115e:	46bd      	mov	sp, r7
 8001160:	bd80      	pop	{r7, pc}

08001162 <_exit>:

void _exit (int status)
{
 8001162:	b580      	push	{r7, lr}
 8001164:	b082      	sub	sp, #8
 8001166:	af00      	add	r7, sp, #0
 8001168:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800116a:	f04f 31ff 	mov.w	r1, #4294967295
 800116e:	6878      	ldr	r0, [r7, #4]
 8001170:	f7ff ffe7 	bl	8001142 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001174:	e7fe      	b.n	8001174 <_exit+0x12>

08001176 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001176:	b580      	push	{r7, lr}
 8001178:	b086      	sub	sp, #24
 800117a:	af00      	add	r7, sp, #0
 800117c:	60f8      	str	r0, [r7, #12]
 800117e:	60b9      	str	r1, [r7, #8]
 8001180:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001182:	2300      	movs	r3, #0
 8001184:	617b      	str	r3, [r7, #20]
 8001186:	e00a      	b.n	800119e <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001188:	f3af 8000 	nop.w
 800118c:	4601      	mov	r1, r0
 800118e:	68bb      	ldr	r3, [r7, #8]
 8001190:	1c5a      	adds	r2, r3, #1
 8001192:	60ba      	str	r2, [r7, #8]
 8001194:	b2ca      	uxtb	r2, r1
 8001196:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001198:	697b      	ldr	r3, [r7, #20]
 800119a:	3301      	adds	r3, #1
 800119c:	617b      	str	r3, [r7, #20]
 800119e:	697a      	ldr	r2, [r7, #20]
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	429a      	cmp	r2, r3
 80011a4:	dbf0      	blt.n	8001188 <_read+0x12>
	}

return len;
 80011a6:	687b      	ldr	r3, [r7, #4]
}
 80011a8:	4618      	mov	r0, r3
 80011aa:	3718      	adds	r7, #24
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bd80      	pop	{r7, pc}

080011b0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80011b0:	b580      	push	{r7, lr}
 80011b2:	b086      	sub	sp, #24
 80011b4:	af00      	add	r7, sp, #0
 80011b6:	60f8      	str	r0, [r7, #12]
 80011b8:	60b9      	str	r1, [r7, #8]
 80011ba:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011bc:	2300      	movs	r3, #0
 80011be:	617b      	str	r3, [r7, #20]
 80011c0:	e009      	b.n	80011d6 <_write+0x26>
	{
//		__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80011c2:	68bb      	ldr	r3, [r7, #8]
 80011c4:	1c5a      	adds	r2, r3, #1
 80011c6:	60ba      	str	r2, [r7, #8]
 80011c8:	781b      	ldrb	r3, [r3, #0]
 80011ca:	4618      	mov	r0, r3
 80011cc:	f7ff ff8c 	bl	80010e8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011d0:	697b      	ldr	r3, [r7, #20]
 80011d2:	3301      	adds	r3, #1
 80011d4:	617b      	str	r3, [r7, #20]
 80011d6:	697a      	ldr	r2, [r7, #20]
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	429a      	cmp	r2, r3
 80011dc:	dbf1      	blt.n	80011c2 <_write+0x12>
	}
	return len;
 80011de:	687b      	ldr	r3, [r7, #4]
}
 80011e0:	4618      	mov	r0, r3
 80011e2:	3718      	adds	r7, #24
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bd80      	pop	{r7, pc}

080011e8 <_close>:

int _close(int file)
{
 80011e8:	b480      	push	{r7}
 80011ea:	b083      	sub	sp, #12
 80011ec:	af00      	add	r7, sp, #0
 80011ee:	6078      	str	r0, [r7, #4]
	return -1;
 80011f0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011f4:	4618      	mov	r0, r3
 80011f6:	370c      	adds	r7, #12
 80011f8:	46bd      	mov	sp, r7
 80011fa:	bc80      	pop	{r7}
 80011fc:	4770      	bx	lr

080011fe <_fstat>:


int _fstat(int file, struct stat *st)
{
 80011fe:	b480      	push	{r7}
 8001200:	b083      	sub	sp, #12
 8001202:	af00      	add	r7, sp, #0
 8001204:	6078      	str	r0, [r7, #4]
 8001206:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001208:	683b      	ldr	r3, [r7, #0]
 800120a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800120e:	605a      	str	r2, [r3, #4]
	return 0;
 8001210:	2300      	movs	r3, #0
}
 8001212:	4618      	mov	r0, r3
 8001214:	370c      	adds	r7, #12
 8001216:	46bd      	mov	sp, r7
 8001218:	bc80      	pop	{r7}
 800121a:	4770      	bx	lr

0800121c <_isatty>:

int _isatty(int file)
{
 800121c:	b480      	push	{r7}
 800121e:	b083      	sub	sp, #12
 8001220:	af00      	add	r7, sp, #0
 8001222:	6078      	str	r0, [r7, #4]
	return 1;
 8001224:	2301      	movs	r3, #1
}
 8001226:	4618      	mov	r0, r3
 8001228:	370c      	adds	r7, #12
 800122a:	46bd      	mov	sp, r7
 800122c:	bc80      	pop	{r7}
 800122e:	4770      	bx	lr

08001230 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001230:	b480      	push	{r7}
 8001232:	b085      	sub	sp, #20
 8001234:	af00      	add	r7, sp, #0
 8001236:	60f8      	str	r0, [r7, #12]
 8001238:	60b9      	str	r1, [r7, #8]
 800123a:	607a      	str	r2, [r7, #4]
	return 0;
 800123c:	2300      	movs	r3, #0
}
 800123e:	4618      	mov	r0, r3
 8001240:	3714      	adds	r7, #20
 8001242:	46bd      	mov	sp, r7
 8001244:	bc80      	pop	{r7}
 8001246:	4770      	bx	lr

08001248 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001248:	b580      	push	{r7, lr}
 800124a:	b086      	sub	sp, #24
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001250:	4a14      	ldr	r2, [pc, #80]	; (80012a4 <_sbrk+0x5c>)
 8001252:	4b15      	ldr	r3, [pc, #84]	; (80012a8 <_sbrk+0x60>)
 8001254:	1ad3      	subs	r3, r2, r3
 8001256:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001258:	697b      	ldr	r3, [r7, #20]
 800125a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800125c:	4b13      	ldr	r3, [pc, #76]	; (80012ac <_sbrk+0x64>)
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	2b00      	cmp	r3, #0
 8001262:	d102      	bne.n	800126a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001264:	4b11      	ldr	r3, [pc, #68]	; (80012ac <_sbrk+0x64>)
 8001266:	4a12      	ldr	r2, [pc, #72]	; (80012b0 <_sbrk+0x68>)
 8001268:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800126a:	4b10      	ldr	r3, [pc, #64]	; (80012ac <_sbrk+0x64>)
 800126c:	681a      	ldr	r2, [r3, #0]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	4413      	add	r3, r2
 8001272:	693a      	ldr	r2, [r7, #16]
 8001274:	429a      	cmp	r2, r3
 8001276:	d207      	bcs.n	8001288 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001278:	f000 fee0 	bl	800203c <__errno>
 800127c:	4603      	mov	r3, r0
 800127e:	220c      	movs	r2, #12
 8001280:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001282:	f04f 33ff 	mov.w	r3, #4294967295
 8001286:	e009      	b.n	800129c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001288:	4b08      	ldr	r3, [pc, #32]	; (80012ac <_sbrk+0x64>)
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800128e:	4b07      	ldr	r3, [pc, #28]	; (80012ac <_sbrk+0x64>)
 8001290:	681a      	ldr	r2, [r3, #0]
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	4413      	add	r3, r2
 8001296:	4a05      	ldr	r2, [pc, #20]	; (80012ac <_sbrk+0x64>)
 8001298:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800129a:	68fb      	ldr	r3, [r7, #12]
}
 800129c:	4618      	mov	r0, r3
 800129e:	3718      	adds	r7, #24
 80012a0:	46bd      	mov	sp, r7
 80012a2:	bd80      	pop	{r7, pc}
 80012a4:	20020000 	.word	0x20020000
 80012a8:	00000400 	.word	0x00000400
 80012ac:	200001e4 	.word	0x200001e4
 80012b0:	20000338 	.word	0x20000338

080012b4 <ClockEnable>:
 *
 */

#include "system_settings.h"

Status_code_t ClockEnable(Set_Port_t Port_define, Enabled_Disabled_t Intention){
 80012b4:	b480      	push	{r7}
 80012b6:	b085      	sub	sp, #20
 80012b8:	af00      	add	r7, sp, #0
 80012ba:	6078      	str	r0, [r7, #4]
 80012bc:	460b      	mov	r3, r1
 80012be:	70fb      	strb	r3, [r7, #3]
	Status_code_t status=Success;
 80012c0:	2300      	movs	r3, #0
 80012c2:	73fb      	strb	r3, [r7, #15]
	uint32_t volatile *pClockControlReg = (uint32_t volatile *)(RCC_ADDRESS + RCC_OFFSET_AHB1ENR);
 80012c4:	4b47      	ldr	r3, [pc, #284]	; (80013e4 <ClockEnable+0x130>)
 80012c6:	60bb      	str	r3, [r7, #8]

	if(Intention){
 80012c8:	78fb      	ldrb	r3, [r7, #3]
 80012ca:	2b00      	cmp	r3, #0
 80012cc:	d03f      	beq.n	800134e <ClockEnable+0x9a>
		switch(Port_define){
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	4a45      	ldr	r2, [pc, #276]	; (80013e8 <ClockEnable+0x134>)
 80012d2:	4293      	cmp	r3, r2
 80012d4:	d02f      	beq.n	8001336 <ClockEnable+0x82>
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	4a43      	ldr	r2, [pc, #268]	; (80013e8 <ClockEnable+0x134>)
 80012da:	4293      	cmp	r3, r2
 80012dc:	d834      	bhi.n	8001348 <ClockEnable+0x94>
 80012de:	687b      	ldr	r3, [r7, #4]
 80012e0:	4a42      	ldr	r2, [pc, #264]	; (80013ec <ClockEnable+0x138>)
 80012e2:	4293      	cmp	r3, r2
 80012e4:	d01e      	beq.n	8001324 <ClockEnable+0x70>
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	4a40      	ldr	r2, [pc, #256]	; (80013ec <ClockEnable+0x138>)
 80012ea:	4293      	cmp	r3, r2
 80012ec:	d82c      	bhi.n	8001348 <ClockEnable+0x94>
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	4a3f      	ldr	r2, [pc, #252]	; (80013f0 <ClockEnable+0x13c>)
 80012f2:	4293      	cmp	r3, r2
 80012f4:	d004      	beq.n	8001300 <ClockEnable+0x4c>
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	4a3e      	ldr	r2, [pc, #248]	; (80013f4 <ClockEnable+0x140>)
 80012fa:	4293      	cmp	r3, r2
 80012fc:	d009      	beq.n	8001312 <ClockEnable+0x5e>
 80012fe:	e023      	b.n	8001348 <ClockEnable+0x94>
			case Port_A:
				*pClockControlReg |= (Enabled<<Clk_PortA);
 8001300:	68bb      	ldr	r3, [r7, #8]
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	f043 0201 	orr.w	r2, r3, #1
 8001308:	68bb      	ldr	r3, [r7, #8]
 800130a:	601a      	str	r2, [r3, #0]
				status = Success;
 800130c:	2300      	movs	r3, #0
 800130e:	73fb      	strb	r3, [r7, #15]
				break;
 8001310:	e062      	b.n	80013d8 <ClockEnable+0x124>
			case Port_B:
				*pClockControlReg |= (Enabled<<Clk_PortB);
 8001312:	68bb      	ldr	r3, [r7, #8]
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	f043 0202 	orr.w	r2, r3, #2
 800131a:	68bb      	ldr	r3, [r7, #8]
 800131c:	601a      	str	r2, [r3, #0]
				status = Success;
 800131e:	2300      	movs	r3, #0
 8001320:	73fb      	strb	r3, [r7, #15]
				break;
 8001322:	e059      	b.n	80013d8 <ClockEnable+0x124>
			case Port_C:
				*pClockControlReg |= (Enabled<<Clk_PortC);
 8001324:	68bb      	ldr	r3, [r7, #8]
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	f043 0204 	orr.w	r2, r3, #4
 800132c:	68bb      	ldr	r3, [r7, #8]
 800132e:	601a      	str	r2, [r3, #0]
				status = Success;
 8001330:	2300      	movs	r3, #0
 8001332:	73fb      	strb	r3, [r7, #15]
				break;
 8001334:	e050      	b.n	80013d8 <ClockEnable+0x124>
			case Port_D:
				*pClockControlReg |= (Enabled<<Clk_PortD);
 8001336:	68bb      	ldr	r3, [r7, #8]
 8001338:	681b      	ldr	r3, [r3, #0]
 800133a:	f043 0208 	orr.w	r2, r3, #8
 800133e:	68bb      	ldr	r3, [r7, #8]
 8001340:	601a      	str	r2, [r3, #0]
				status = Success;
 8001342:	2300      	movs	r3, #0
 8001344:	73fb      	strb	r3, [r7, #15]
				break;
 8001346:	e047      	b.n	80013d8 <ClockEnable+0x124>
			default:
				status = ClockNotSupported;
 8001348:	2303      	movs	r3, #3
 800134a:	73fb      	strb	r3, [r7, #15]
				break;
 800134c:	e044      	b.n	80013d8 <ClockEnable+0x124>

		}

	}else if (Intention == Disabled){
 800134e:	78fb      	ldrb	r3, [r7, #3]
 8001350:	2b00      	cmp	r3, #0
 8001352:	d13f      	bne.n	80013d4 <ClockEnable+0x120>

		switch(Port_define){
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	4a24      	ldr	r2, [pc, #144]	; (80013e8 <ClockEnable+0x134>)
 8001358:	4293      	cmp	r3, r2
 800135a:	d02f      	beq.n	80013bc <ClockEnable+0x108>
 800135c:	687b      	ldr	r3, [r7, #4]
 800135e:	4a22      	ldr	r2, [pc, #136]	; (80013e8 <ClockEnable+0x134>)
 8001360:	4293      	cmp	r3, r2
 8001362:	d834      	bhi.n	80013ce <ClockEnable+0x11a>
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	4a21      	ldr	r2, [pc, #132]	; (80013ec <ClockEnable+0x138>)
 8001368:	4293      	cmp	r3, r2
 800136a:	d01e      	beq.n	80013aa <ClockEnable+0xf6>
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	4a1f      	ldr	r2, [pc, #124]	; (80013ec <ClockEnable+0x138>)
 8001370:	4293      	cmp	r3, r2
 8001372:	d82c      	bhi.n	80013ce <ClockEnable+0x11a>
 8001374:	687b      	ldr	r3, [r7, #4]
 8001376:	4a1e      	ldr	r2, [pc, #120]	; (80013f0 <ClockEnable+0x13c>)
 8001378:	4293      	cmp	r3, r2
 800137a:	d004      	beq.n	8001386 <ClockEnable+0xd2>
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	4a1d      	ldr	r2, [pc, #116]	; (80013f4 <ClockEnable+0x140>)
 8001380:	4293      	cmp	r3, r2
 8001382:	d009      	beq.n	8001398 <ClockEnable+0xe4>
 8001384:	e023      	b.n	80013ce <ClockEnable+0x11a>
			case Port_A:
				*pClockControlReg &= ~(Enabled<<Clk_PortA);
 8001386:	68bb      	ldr	r3, [r7, #8]
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	f023 0201 	bic.w	r2, r3, #1
 800138e:	68bb      	ldr	r3, [r7, #8]
 8001390:	601a      	str	r2, [r3, #0]
				status = Success;
 8001392:	2300      	movs	r3, #0
 8001394:	73fb      	strb	r3, [r7, #15]
				break;
 8001396:	e01f      	b.n	80013d8 <ClockEnable+0x124>
			case Port_B:
				*pClockControlReg &= ~(Enabled<<Clk_PortB);
 8001398:	68bb      	ldr	r3, [r7, #8]
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	f023 0202 	bic.w	r2, r3, #2
 80013a0:	68bb      	ldr	r3, [r7, #8]
 80013a2:	601a      	str	r2, [r3, #0]
				status = Success;
 80013a4:	2300      	movs	r3, #0
 80013a6:	73fb      	strb	r3, [r7, #15]
				break;
 80013a8:	e016      	b.n	80013d8 <ClockEnable+0x124>
			case Port_C:
				*pClockControlReg &= ~(Enabled<<Clk_PortC);
 80013aa:	68bb      	ldr	r3, [r7, #8]
 80013ac:	681b      	ldr	r3, [r3, #0]
 80013ae:	f023 0204 	bic.w	r2, r3, #4
 80013b2:	68bb      	ldr	r3, [r7, #8]
 80013b4:	601a      	str	r2, [r3, #0]
				status = Success;
 80013b6:	2300      	movs	r3, #0
 80013b8:	73fb      	strb	r3, [r7, #15]
				break;
 80013ba:	e00d      	b.n	80013d8 <ClockEnable+0x124>
			case Port_D:
				*pClockControlReg &= ~(Enabled<<Clk_PortD);
 80013bc:	68bb      	ldr	r3, [r7, #8]
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	f023 0208 	bic.w	r2, r3, #8
 80013c4:	68bb      	ldr	r3, [r7, #8]
 80013c6:	601a      	str	r2, [r3, #0]
				status = Success;
 80013c8:	2300      	movs	r3, #0
 80013ca:	73fb      	strb	r3, [r7, #15]
				break;
 80013cc:	e004      	b.n	80013d8 <ClockEnable+0x124>
			default:
				status = ClockNotSupported;
 80013ce:	2303      	movs	r3, #3
 80013d0:	73fb      	strb	r3, [r7, #15]
				break;
 80013d2:	e001      	b.n	80013d8 <ClockEnable+0x124>
		}
	}else{
		status = WrongParameter;
 80013d4:	2305      	movs	r3, #5
 80013d6:	73fb      	strb	r3, [r7, #15]
	}

	return status;
 80013d8:	7bfb      	ldrb	r3, [r7, #15]

}
 80013da:	4618      	mov	r0, r3
 80013dc:	3714      	adds	r7, #20
 80013de:	46bd      	mov	sp, r7
 80013e0:	bc80      	pop	{r7}
 80013e2:	4770      	bx	lr
 80013e4:	40023830 	.word	0x40023830
 80013e8:	40020c00 	.word	0x40020c00
 80013ec:	40020800 	.word	0x40020800
 80013f0:	40020000 	.word	0x40020000
 80013f4:	40020400 	.word	0x40020400

080013f8 <Delay>:

Status_code_t Delay(uint32_t Miliseconds){ //do it in microseconds later
 80013f8:	e92d 03b0 	stmdb	sp!, {r4, r5, r7, r8, r9}
 80013fc:	b087      	sub	sp, #28
 80013fe:	af00      	add	r7, sp, #0
 8001400:	6078      	str	r0, [r7, #4]

	uint64_t count =0;
 8001402:	f04f 0200 	mov.w	r2, #0
 8001406:	f04f 0300 	mov.w	r3, #0
 800140a:	e9c7 2304 	strd	r2, r3, [r7, #16]
	uint64_t volatile time = 0;
 800140e:	f04f 0200 	mov.w	r2, #0
 8001412:	f04f 0300 	mov.w	r3, #0
 8001416:	e9c7 2302 	strd	r2, r3, [r7, #8]

	if(Miliseconds >= 1000000){
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	4a18      	ldr	r2, [pc, #96]	; (8001480 <Delay+0x88>)
 800141e:	4293      	cmp	r3, r2
 8001420:	d901      	bls.n	8001426 <Delay+0x2e>
		return DelayTimeNotSupported;
 8001422:	2302      	movs	r3, #2
 8001424:	e026      	b.n	8001474 <Delay+0x7c>
	}
	count= Miliseconds*2022;
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	f240 72e6 	movw	r2, #2022	; 0x7e6
 800142c:	fb02 f303 	mul.w	r3, r2, r3
 8001430:	2200      	movs	r2, #0
 8001432:	4698      	mov	r8, r3
 8001434:	4691      	mov	r9, r2
 8001436:	e9c7 8904 	strd	r8, r9, [r7, #16]

	while(time<count){
 800143a:	e006      	b.n	800144a <Delay+0x52>
		time++;
 800143c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001440:	1c54      	adds	r4, r2, #1
 8001442:	f143 0500 	adc.w	r5, r3, #0
 8001446:	e9c7 4502 	strd	r4, r5, [r7, #8]
	while(time<count){
 800144a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800144e:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001452:	4290      	cmp	r0, r2
 8001454:	eb71 0303 	sbcs.w	r3, r1, r3
 8001458:	d3f0      	bcc.n	800143c <Delay+0x44>
	}
	time =0;
 800145a:	f04f 0200 	mov.w	r2, #0
 800145e:	f04f 0300 	mov.w	r3, #0
 8001462:	e9c7 2302 	strd	r2, r3, [r7, #8]
	count =0;
 8001466:	f04f 0200 	mov.w	r2, #0
 800146a:	f04f 0300 	mov.w	r3, #0
 800146e:	e9c7 2304 	strd	r2, r3, [r7, #16]

	return Success;
 8001472:	2300      	movs	r3, #0
}
 8001474:	4618      	mov	r0, r3
 8001476:	371c      	adds	r7, #28
 8001478:	46bd      	mov	sp, r7
 800147a:	e8bd 03b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9}
 800147e:	4770      	bx	lr
 8001480:	000f423f 	.word	0x000f423f

08001484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001484:	480d      	ldr	r0, [pc, #52]	; (80014bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001486:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001488:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800148c:	480c      	ldr	r0, [pc, #48]	; (80014c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800148e:	490d      	ldr	r1, [pc, #52]	; (80014c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001490:	4a0d      	ldr	r2, [pc, #52]	; (80014c8 <LoopForever+0xe>)
  movs r3, #0
 8001492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001494:	e002      	b.n	800149c <LoopCopyDataInit>

08001496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800149a:	3304      	adds	r3, #4

0800149c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800149c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800149e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80014a0:	d3f9      	bcc.n	8001496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80014a2:	4a0a      	ldr	r2, [pc, #40]	; (80014cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80014a4:	4c0a      	ldr	r4, [pc, #40]	; (80014d0 <LoopForever+0x16>)
  movs r3, #0
 80014a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80014a8:	e001      	b.n	80014ae <LoopFillZerobss>

080014aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80014aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80014ac:	3204      	adds	r2, #4

080014ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80014ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80014b0:	d3fb      	bcc.n	80014aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80014b2:	f000 fdc9 	bl	8002048 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80014b6:	f7ff fc5d 	bl	8000d74 <main>

080014ba <LoopForever>:

LoopForever:
    b LoopForever
 80014ba:	e7fe      	b.n	80014ba <LoopForever>
  ldr   r0, =_estack
 80014bc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80014c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80014c4:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80014c8:	0800418c 	.word	0x0800418c
  ldr r2, =_sbss
 80014cc:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80014d0:	20000334 	.word	0x20000334

080014d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80014d4:	e7fe      	b.n	80014d4 <ADC_IRQHandler>

080014d6 <__cvt>:
 80014d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80014da:	b088      	sub	sp, #32
 80014dc:	2b00      	cmp	r3, #0
 80014de:	461f      	mov	r7, r3
 80014e0:	4614      	mov	r4, r2
 80014e2:	bfb8      	it	lt
 80014e4:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80014e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80014ea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80014ec:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 80014f0:	bfb6      	itet	lt
 80014f2:	461f      	movlt	r7, r3
 80014f4:	2300      	movge	r3, #0
 80014f6:	232d      	movlt	r3, #45	; 0x2d
 80014f8:	7013      	strb	r3, [r2, #0]
 80014fa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80014fc:	f023 0820 	bic.w	r8, r3, #32
 8001500:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001504:	d005      	beq.n	8001512 <__cvt+0x3c>
 8001506:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800150a:	d100      	bne.n	800150e <__cvt+0x38>
 800150c:	3501      	adds	r5, #1
 800150e:	2302      	movs	r3, #2
 8001510:	e000      	b.n	8001514 <__cvt+0x3e>
 8001512:	2303      	movs	r3, #3
 8001514:	aa07      	add	r2, sp, #28
 8001516:	9204      	str	r2, [sp, #16]
 8001518:	aa06      	add	r2, sp, #24
 800151a:	e9cd a202 	strd	sl, r2, [sp, #8]
 800151e:	e9cd 3500 	strd	r3, r5, [sp]
 8001522:	4622      	mov	r2, r4
 8001524:	463b      	mov	r3, r7
 8001526:	f000 fe3b 	bl	80021a0 <_dtoa_r>
 800152a:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800152e:	4606      	mov	r6, r0
 8001530:	d102      	bne.n	8001538 <__cvt+0x62>
 8001532:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001534:	07db      	lsls	r3, r3, #31
 8001536:	d522      	bpl.n	800157e <__cvt+0xa8>
 8001538:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800153c:	eb06 0905 	add.w	r9, r6, r5
 8001540:	d110      	bne.n	8001564 <__cvt+0x8e>
 8001542:	7833      	ldrb	r3, [r6, #0]
 8001544:	2b30      	cmp	r3, #48	; 0x30
 8001546:	d10a      	bne.n	800155e <__cvt+0x88>
 8001548:	2200      	movs	r2, #0
 800154a:	2300      	movs	r3, #0
 800154c:	4620      	mov	r0, r4
 800154e:	4639      	mov	r1, r7
 8001550:	f7ff fac2 	bl	8000ad8 <__aeabi_dcmpeq>
 8001554:	b918      	cbnz	r0, 800155e <__cvt+0x88>
 8001556:	f1c5 0501 	rsb	r5, r5, #1
 800155a:	f8ca 5000 	str.w	r5, [sl]
 800155e:	f8da 3000 	ldr.w	r3, [sl]
 8001562:	4499      	add	r9, r3
 8001564:	2200      	movs	r2, #0
 8001566:	2300      	movs	r3, #0
 8001568:	4620      	mov	r0, r4
 800156a:	4639      	mov	r1, r7
 800156c:	f7ff fab4 	bl	8000ad8 <__aeabi_dcmpeq>
 8001570:	b108      	cbz	r0, 8001576 <__cvt+0xa0>
 8001572:	f8cd 901c 	str.w	r9, [sp, #28]
 8001576:	2230      	movs	r2, #48	; 0x30
 8001578:	9b07      	ldr	r3, [sp, #28]
 800157a:	454b      	cmp	r3, r9
 800157c:	d307      	bcc.n	800158e <__cvt+0xb8>
 800157e:	9b07      	ldr	r3, [sp, #28]
 8001580:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001582:	1b9b      	subs	r3, r3, r6
 8001584:	4630      	mov	r0, r6
 8001586:	6013      	str	r3, [r2, #0]
 8001588:	b008      	add	sp, #32
 800158a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800158e:	1c59      	adds	r1, r3, #1
 8001590:	9107      	str	r1, [sp, #28]
 8001592:	701a      	strb	r2, [r3, #0]
 8001594:	e7f0      	b.n	8001578 <__cvt+0xa2>

08001596 <__exponent>:
 8001596:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001598:	4603      	mov	r3, r0
 800159a:	2900      	cmp	r1, #0
 800159c:	bfb8      	it	lt
 800159e:	4249      	neglt	r1, r1
 80015a0:	f803 2b02 	strb.w	r2, [r3], #2
 80015a4:	bfb4      	ite	lt
 80015a6:	222d      	movlt	r2, #45	; 0x2d
 80015a8:	222b      	movge	r2, #43	; 0x2b
 80015aa:	2909      	cmp	r1, #9
 80015ac:	7042      	strb	r2, [r0, #1]
 80015ae:	dd2a      	ble.n	8001606 <__exponent+0x70>
 80015b0:	f10d 0207 	add.w	r2, sp, #7
 80015b4:	4617      	mov	r7, r2
 80015b6:	260a      	movs	r6, #10
 80015b8:	4694      	mov	ip, r2
 80015ba:	fb91 f5f6 	sdiv	r5, r1, r6
 80015be:	fb06 1415 	mls	r4, r6, r5, r1
 80015c2:	3430      	adds	r4, #48	; 0x30
 80015c4:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80015c8:	460c      	mov	r4, r1
 80015ca:	2c63      	cmp	r4, #99	; 0x63
 80015cc:	f102 32ff 	add.w	r2, r2, #4294967295
 80015d0:	4629      	mov	r1, r5
 80015d2:	dcf1      	bgt.n	80015b8 <__exponent+0x22>
 80015d4:	3130      	adds	r1, #48	; 0x30
 80015d6:	f1ac 0402 	sub.w	r4, ip, #2
 80015da:	f802 1c01 	strb.w	r1, [r2, #-1]
 80015de:	1c41      	adds	r1, r0, #1
 80015e0:	4622      	mov	r2, r4
 80015e2:	42ba      	cmp	r2, r7
 80015e4:	d30a      	bcc.n	80015fc <__exponent+0x66>
 80015e6:	f10d 0209 	add.w	r2, sp, #9
 80015ea:	eba2 020c 	sub.w	r2, r2, ip
 80015ee:	42bc      	cmp	r4, r7
 80015f0:	bf88      	it	hi
 80015f2:	2200      	movhi	r2, #0
 80015f4:	4413      	add	r3, r2
 80015f6:	1a18      	subs	r0, r3, r0
 80015f8:	b003      	add	sp, #12
 80015fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015fc:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001600:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001604:	e7ed      	b.n	80015e2 <__exponent+0x4c>
 8001606:	2330      	movs	r3, #48	; 0x30
 8001608:	3130      	adds	r1, #48	; 0x30
 800160a:	7083      	strb	r3, [r0, #2]
 800160c:	70c1      	strb	r1, [r0, #3]
 800160e:	1d03      	adds	r3, r0, #4
 8001610:	e7f1      	b.n	80015f6 <__exponent+0x60>
	...

08001614 <_printf_float>:
 8001614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001618:	b091      	sub	sp, #68	; 0x44
 800161a:	460c      	mov	r4, r1
 800161c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8001620:	4616      	mov	r6, r2
 8001622:	461f      	mov	r7, r3
 8001624:	4605      	mov	r5, r0
 8001626:	f000 fcbf 	bl	8001fa8 <_localeconv_r>
 800162a:	6803      	ldr	r3, [r0, #0]
 800162c:	9309      	str	r3, [sp, #36]	; 0x24
 800162e:	4618      	mov	r0, r3
 8001630:	f7fe fe26 	bl	8000280 <strlen>
 8001634:	2300      	movs	r3, #0
 8001636:	930e      	str	r3, [sp, #56]	; 0x38
 8001638:	f8d8 3000 	ldr.w	r3, [r8]
 800163c:	900a      	str	r0, [sp, #40]	; 0x28
 800163e:	3307      	adds	r3, #7
 8001640:	f023 0307 	bic.w	r3, r3, #7
 8001644:	f103 0208 	add.w	r2, r3, #8
 8001648:	f894 9018 	ldrb.w	r9, [r4, #24]
 800164c:	f8d4 b000 	ldr.w	fp, [r4]
 8001650:	f8c8 2000 	str.w	r2, [r8]
 8001654:	e9d3 a800 	ldrd	sl, r8, [r3]
 8001658:	4652      	mov	r2, sl
 800165a:	4643      	mov	r3, r8
 800165c:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001660:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8001664:	930b      	str	r3, [sp, #44]	; 0x2c
 8001666:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001668:	4b9c      	ldr	r3, [pc, #624]	; (80018dc <_printf_float+0x2c8>)
 800166a:	f04f 32ff 	mov.w	r2, #4294967295
 800166e:	4650      	mov	r0, sl
 8001670:	f7ff fa64 	bl	8000b3c <__aeabi_dcmpun>
 8001674:	bb70      	cbnz	r0, 80016d4 <_printf_float+0xc0>
 8001676:	4b99      	ldr	r3, [pc, #612]	; (80018dc <_printf_float+0x2c8>)
 8001678:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800167a:	f04f 32ff 	mov.w	r2, #4294967295
 800167e:	4650      	mov	r0, sl
 8001680:	f7ff fa3e 	bl	8000b00 <__aeabi_dcmple>
 8001684:	bb30      	cbnz	r0, 80016d4 <_printf_float+0xc0>
 8001686:	2200      	movs	r2, #0
 8001688:	2300      	movs	r3, #0
 800168a:	4650      	mov	r0, sl
 800168c:	4641      	mov	r1, r8
 800168e:	f7ff fa2d 	bl	8000aec <__aeabi_dcmplt>
 8001692:	b110      	cbz	r0, 800169a <_printf_float+0x86>
 8001694:	232d      	movs	r3, #45	; 0x2d
 8001696:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800169a:	4a91      	ldr	r2, [pc, #580]	; (80018e0 <_printf_float+0x2cc>)
 800169c:	4b91      	ldr	r3, [pc, #580]	; (80018e4 <_printf_float+0x2d0>)
 800169e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 80016a2:	bf94      	ite	ls
 80016a4:	4690      	movls	r8, r2
 80016a6:	4698      	movhi	r8, r3
 80016a8:	2303      	movs	r3, #3
 80016aa:	6123      	str	r3, [r4, #16]
 80016ac:	f02b 0304 	bic.w	r3, fp, #4
 80016b0:	6023      	str	r3, [r4, #0]
 80016b2:	f04f 0a00 	mov.w	sl, #0
 80016b6:	9700      	str	r7, [sp, #0]
 80016b8:	4633      	mov	r3, r6
 80016ba:	aa0f      	add	r2, sp, #60	; 0x3c
 80016bc:	4621      	mov	r1, r4
 80016be:	4628      	mov	r0, r5
 80016c0:	f000 f9d4 	bl	8001a6c <_printf_common>
 80016c4:	3001      	adds	r0, #1
 80016c6:	f040 808f 	bne.w	80017e8 <_printf_float+0x1d4>
 80016ca:	f04f 30ff 	mov.w	r0, #4294967295
 80016ce:	b011      	add	sp, #68	; 0x44
 80016d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016d4:	4652      	mov	r2, sl
 80016d6:	4643      	mov	r3, r8
 80016d8:	4650      	mov	r0, sl
 80016da:	4641      	mov	r1, r8
 80016dc:	f7ff fa2e 	bl	8000b3c <__aeabi_dcmpun>
 80016e0:	b140      	cbz	r0, 80016f4 <_printf_float+0xe0>
 80016e2:	f1b8 0f00 	cmp.w	r8, #0
 80016e6:	bfbc      	itt	lt
 80016e8:	232d      	movlt	r3, #45	; 0x2d
 80016ea:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80016ee:	4a7e      	ldr	r2, [pc, #504]	; (80018e8 <_printf_float+0x2d4>)
 80016f0:	4b7e      	ldr	r3, [pc, #504]	; (80018ec <_printf_float+0x2d8>)
 80016f2:	e7d4      	b.n	800169e <_printf_float+0x8a>
 80016f4:	6863      	ldr	r3, [r4, #4]
 80016f6:	1c5a      	adds	r2, r3, #1
 80016f8:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 80016fc:	d142      	bne.n	8001784 <_printf_float+0x170>
 80016fe:	2306      	movs	r3, #6
 8001700:	6063      	str	r3, [r4, #4]
 8001702:	2200      	movs	r2, #0
 8001704:	9206      	str	r2, [sp, #24]
 8001706:	aa0e      	add	r2, sp, #56	; 0x38
 8001708:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800170c:	aa0d      	add	r2, sp, #52	; 0x34
 800170e:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8001712:	9203      	str	r2, [sp, #12]
 8001714:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8001718:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800171c:	6023      	str	r3, [r4, #0]
 800171e:	6863      	ldr	r3, [r4, #4]
 8001720:	9300      	str	r3, [sp, #0]
 8001722:	4652      	mov	r2, sl
 8001724:	4643      	mov	r3, r8
 8001726:	4628      	mov	r0, r5
 8001728:	910b      	str	r1, [sp, #44]	; 0x2c
 800172a:	f7ff fed4 	bl	80014d6 <__cvt>
 800172e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001730:	2947      	cmp	r1, #71	; 0x47
 8001732:	4680      	mov	r8, r0
 8001734:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001736:	d108      	bne.n	800174a <_printf_float+0x136>
 8001738:	1cc8      	adds	r0, r1, #3
 800173a:	db02      	blt.n	8001742 <_printf_float+0x12e>
 800173c:	6863      	ldr	r3, [r4, #4]
 800173e:	4299      	cmp	r1, r3
 8001740:	dd40      	ble.n	80017c4 <_printf_float+0x1b0>
 8001742:	f1a9 0902 	sub.w	r9, r9, #2
 8001746:	fa5f f989 	uxtb.w	r9, r9
 800174a:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800174e:	d81f      	bhi.n	8001790 <_printf_float+0x17c>
 8001750:	3901      	subs	r1, #1
 8001752:	464a      	mov	r2, r9
 8001754:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001758:	910d      	str	r1, [sp, #52]	; 0x34
 800175a:	f7ff ff1c 	bl	8001596 <__exponent>
 800175e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001760:	1813      	adds	r3, r2, r0
 8001762:	2a01      	cmp	r2, #1
 8001764:	4682      	mov	sl, r0
 8001766:	6123      	str	r3, [r4, #16]
 8001768:	dc02      	bgt.n	8001770 <_printf_float+0x15c>
 800176a:	6822      	ldr	r2, [r4, #0]
 800176c:	07d2      	lsls	r2, r2, #31
 800176e:	d501      	bpl.n	8001774 <_printf_float+0x160>
 8001770:	3301      	adds	r3, #1
 8001772:	6123      	str	r3, [r4, #16]
 8001774:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001778:	2b00      	cmp	r3, #0
 800177a:	d09c      	beq.n	80016b6 <_printf_float+0xa2>
 800177c:	232d      	movs	r3, #45	; 0x2d
 800177e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001782:	e798      	b.n	80016b6 <_printf_float+0xa2>
 8001784:	2947      	cmp	r1, #71	; 0x47
 8001786:	d1bc      	bne.n	8001702 <_printf_float+0xee>
 8001788:	2b00      	cmp	r3, #0
 800178a:	d1ba      	bne.n	8001702 <_printf_float+0xee>
 800178c:	2301      	movs	r3, #1
 800178e:	e7b7      	b.n	8001700 <_printf_float+0xec>
 8001790:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8001794:	d118      	bne.n	80017c8 <_printf_float+0x1b4>
 8001796:	2900      	cmp	r1, #0
 8001798:	6863      	ldr	r3, [r4, #4]
 800179a:	dd0b      	ble.n	80017b4 <_printf_float+0x1a0>
 800179c:	6121      	str	r1, [r4, #16]
 800179e:	b913      	cbnz	r3, 80017a6 <_printf_float+0x192>
 80017a0:	6822      	ldr	r2, [r4, #0]
 80017a2:	07d0      	lsls	r0, r2, #31
 80017a4:	d502      	bpl.n	80017ac <_printf_float+0x198>
 80017a6:	3301      	adds	r3, #1
 80017a8:	440b      	add	r3, r1
 80017aa:	6123      	str	r3, [r4, #16]
 80017ac:	65a1      	str	r1, [r4, #88]	; 0x58
 80017ae:	f04f 0a00 	mov.w	sl, #0
 80017b2:	e7df      	b.n	8001774 <_printf_float+0x160>
 80017b4:	b913      	cbnz	r3, 80017bc <_printf_float+0x1a8>
 80017b6:	6822      	ldr	r2, [r4, #0]
 80017b8:	07d2      	lsls	r2, r2, #31
 80017ba:	d501      	bpl.n	80017c0 <_printf_float+0x1ac>
 80017bc:	3302      	adds	r3, #2
 80017be:	e7f4      	b.n	80017aa <_printf_float+0x196>
 80017c0:	2301      	movs	r3, #1
 80017c2:	e7f2      	b.n	80017aa <_printf_float+0x196>
 80017c4:	f04f 0967 	mov.w	r9, #103	; 0x67
 80017c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80017ca:	4299      	cmp	r1, r3
 80017cc:	db05      	blt.n	80017da <_printf_float+0x1c6>
 80017ce:	6823      	ldr	r3, [r4, #0]
 80017d0:	6121      	str	r1, [r4, #16]
 80017d2:	07d8      	lsls	r0, r3, #31
 80017d4:	d5ea      	bpl.n	80017ac <_printf_float+0x198>
 80017d6:	1c4b      	adds	r3, r1, #1
 80017d8:	e7e7      	b.n	80017aa <_printf_float+0x196>
 80017da:	2900      	cmp	r1, #0
 80017dc:	bfd4      	ite	le
 80017de:	f1c1 0202 	rsble	r2, r1, #2
 80017e2:	2201      	movgt	r2, #1
 80017e4:	4413      	add	r3, r2
 80017e6:	e7e0      	b.n	80017aa <_printf_float+0x196>
 80017e8:	6823      	ldr	r3, [r4, #0]
 80017ea:	055a      	lsls	r2, r3, #21
 80017ec:	d407      	bmi.n	80017fe <_printf_float+0x1ea>
 80017ee:	6923      	ldr	r3, [r4, #16]
 80017f0:	4642      	mov	r2, r8
 80017f2:	4631      	mov	r1, r6
 80017f4:	4628      	mov	r0, r5
 80017f6:	47b8      	blx	r7
 80017f8:	3001      	adds	r0, #1
 80017fa:	d12b      	bne.n	8001854 <_printf_float+0x240>
 80017fc:	e765      	b.n	80016ca <_printf_float+0xb6>
 80017fe:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8001802:	f240 80dc 	bls.w	80019be <_printf_float+0x3aa>
 8001806:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800180a:	2200      	movs	r2, #0
 800180c:	2300      	movs	r3, #0
 800180e:	f7ff f963 	bl	8000ad8 <__aeabi_dcmpeq>
 8001812:	2800      	cmp	r0, #0
 8001814:	d033      	beq.n	800187e <_printf_float+0x26a>
 8001816:	4a36      	ldr	r2, [pc, #216]	; (80018f0 <_printf_float+0x2dc>)
 8001818:	2301      	movs	r3, #1
 800181a:	4631      	mov	r1, r6
 800181c:	4628      	mov	r0, r5
 800181e:	47b8      	blx	r7
 8001820:	3001      	adds	r0, #1
 8001822:	f43f af52 	beq.w	80016ca <_printf_float+0xb6>
 8001826:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800182a:	429a      	cmp	r2, r3
 800182c:	db02      	blt.n	8001834 <_printf_float+0x220>
 800182e:	6823      	ldr	r3, [r4, #0]
 8001830:	07d8      	lsls	r0, r3, #31
 8001832:	d50f      	bpl.n	8001854 <_printf_float+0x240>
 8001834:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001838:	4631      	mov	r1, r6
 800183a:	4628      	mov	r0, r5
 800183c:	47b8      	blx	r7
 800183e:	3001      	adds	r0, #1
 8001840:	f43f af43 	beq.w	80016ca <_printf_float+0xb6>
 8001844:	f04f 0800 	mov.w	r8, #0
 8001848:	f104 091a 	add.w	r9, r4, #26
 800184c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800184e:	3b01      	subs	r3, #1
 8001850:	4543      	cmp	r3, r8
 8001852:	dc09      	bgt.n	8001868 <_printf_float+0x254>
 8001854:	6823      	ldr	r3, [r4, #0]
 8001856:	079b      	lsls	r3, r3, #30
 8001858:	f100 8103 	bmi.w	8001a62 <_printf_float+0x44e>
 800185c:	68e0      	ldr	r0, [r4, #12]
 800185e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001860:	4298      	cmp	r0, r3
 8001862:	bfb8      	it	lt
 8001864:	4618      	movlt	r0, r3
 8001866:	e732      	b.n	80016ce <_printf_float+0xba>
 8001868:	2301      	movs	r3, #1
 800186a:	464a      	mov	r2, r9
 800186c:	4631      	mov	r1, r6
 800186e:	4628      	mov	r0, r5
 8001870:	47b8      	blx	r7
 8001872:	3001      	adds	r0, #1
 8001874:	f43f af29 	beq.w	80016ca <_printf_float+0xb6>
 8001878:	f108 0801 	add.w	r8, r8, #1
 800187c:	e7e6      	b.n	800184c <_printf_float+0x238>
 800187e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001880:	2b00      	cmp	r3, #0
 8001882:	dc37      	bgt.n	80018f4 <_printf_float+0x2e0>
 8001884:	4a1a      	ldr	r2, [pc, #104]	; (80018f0 <_printf_float+0x2dc>)
 8001886:	2301      	movs	r3, #1
 8001888:	4631      	mov	r1, r6
 800188a:	4628      	mov	r0, r5
 800188c:	47b8      	blx	r7
 800188e:	3001      	adds	r0, #1
 8001890:	f43f af1b 	beq.w	80016ca <_printf_float+0xb6>
 8001894:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8001898:	4313      	orrs	r3, r2
 800189a:	d102      	bne.n	80018a2 <_printf_float+0x28e>
 800189c:	6823      	ldr	r3, [r4, #0]
 800189e:	07d9      	lsls	r1, r3, #31
 80018a0:	d5d8      	bpl.n	8001854 <_printf_float+0x240>
 80018a2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80018a6:	4631      	mov	r1, r6
 80018a8:	4628      	mov	r0, r5
 80018aa:	47b8      	blx	r7
 80018ac:	3001      	adds	r0, #1
 80018ae:	f43f af0c 	beq.w	80016ca <_printf_float+0xb6>
 80018b2:	f04f 0900 	mov.w	r9, #0
 80018b6:	f104 0a1a 	add.w	sl, r4, #26
 80018ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80018bc:	425b      	negs	r3, r3
 80018be:	454b      	cmp	r3, r9
 80018c0:	dc01      	bgt.n	80018c6 <_printf_float+0x2b2>
 80018c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80018c4:	e794      	b.n	80017f0 <_printf_float+0x1dc>
 80018c6:	2301      	movs	r3, #1
 80018c8:	4652      	mov	r2, sl
 80018ca:	4631      	mov	r1, r6
 80018cc:	4628      	mov	r0, r5
 80018ce:	47b8      	blx	r7
 80018d0:	3001      	adds	r0, #1
 80018d2:	f43f aefa 	beq.w	80016ca <_printf_float+0xb6>
 80018d6:	f109 0901 	add.w	r9, r9, #1
 80018da:	e7ee      	b.n	80018ba <_printf_float+0x2a6>
 80018dc:	7fefffff 	.word	0x7fefffff
 80018e0:	08003e10 	.word	0x08003e10
 80018e4:	08003e14 	.word	0x08003e14
 80018e8:	08003e18 	.word	0x08003e18
 80018ec:	08003e1c 	.word	0x08003e1c
 80018f0:	08003e20 	.word	0x08003e20
 80018f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80018f6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80018f8:	429a      	cmp	r2, r3
 80018fa:	bfa8      	it	ge
 80018fc:	461a      	movge	r2, r3
 80018fe:	2a00      	cmp	r2, #0
 8001900:	4691      	mov	r9, r2
 8001902:	dc37      	bgt.n	8001974 <_printf_float+0x360>
 8001904:	f04f 0b00 	mov.w	fp, #0
 8001908:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800190c:	f104 021a 	add.w	r2, r4, #26
 8001910:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8001914:	ebaa 0309 	sub.w	r3, sl, r9
 8001918:	455b      	cmp	r3, fp
 800191a:	dc33      	bgt.n	8001984 <_printf_float+0x370>
 800191c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001920:	429a      	cmp	r2, r3
 8001922:	db3b      	blt.n	800199c <_printf_float+0x388>
 8001924:	6823      	ldr	r3, [r4, #0]
 8001926:	07da      	lsls	r2, r3, #31
 8001928:	d438      	bmi.n	800199c <_printf_float+0x388>
 800192a:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800192e:	eba2 0903 	sub.w	r9, r2, r3
 8001932:	eba2 020a 	sub.w	r2, r2, sl
 8001936:	4591      	cmp	r9, r2
 8001938:	bfa8      	it	ge
 800193a:	4691      	movge	r9, r2
 800193c:	f1b9 0f00 	cmp.w	r9, #0
 8001940:	dc34      	bgt.n	80019ac <_printf_float+0x398>
 8001942:	f04f 0800 	mov.w	r8, #0
 8001946:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800194a:	f104 0a1a 	add.w	sl, r4, #26
 800194e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001952:	1a9b      	subs	r3, r3, r2
 8001954:	eba3 0309 	sub.w	r3, r3, r9
 8001958:	4543      	cmp	r3, r8
 800195a:	f77f af7b 	ble.w	8001854 <_printf_float+0x240>
 800195e:	2301      	movs	r3, #1
 8001960:	4652      	mov	r2, sl
 8001962:	4631      	mov	r1, r6
 8001964:	4628      	mov	r0, r5
 8001966:	47b8      	blx	r7
 8001968:	3001      	adds	r0, #1
 800196a:	f43f aeae 	beq.w	80016ca <_printf_float+0xb6>
 800196e:	f108 0801 	add.w	r8, r8, #1
 8001972:	e7ec      	b.n	800194e <_printf_float+0x33a>
 8001974:	4613      	mov	r3, r2
 8001976:	4631      	mov	r1, r6
 8001978:	4642      	mov	r2, r8
 800197a:	4628      	mov	r0, r5
 800197c:	47b8      	blx	r7
 800197e:	3001      	adds	r0, #1
 8001980:	d1c0      	bne.n	8001904 <_printf_float+0x2f0>
 8001982:	e6a2      	b.n	80016ca <_printf_float+0xb6>
 8001984:	2301      	movs	r3, #1
 8001986:	4631      	mov	r1, r6
 8001988:	4628      	mov	r0, r5
 800198a:	920b      	str	r2, [sp, #44]	; 0x2c
 800198c:	47b8      	blx	r7
 800198e:	3001      	adds	r0, #1
 8001990:	f43f ae9b 	beq.w	80016ca <_printf_float+0xb6>
 8001994:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001996:	f10b 0b01 	add.w	fp, fp, #1
 800199a:	e7b9      	b.n	8001910 <_printf_float+0x2fc>
 800199c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80019a0:	4631      	mov	r1, r6
 80019a2:	4628      	mov	r0, r5
 80019a4:	47b8      	blx	r7
 80019a6:	3001      	adds	r0, #1
 80019a8:	d1bf      	bne.n	800192a <_printf_float+0x316>
 80019aa:	e68e      	b.n	80016ca <_printf_float+0xb6>
 80019ac:	464b      	mov	r3, r9
 80019ae:	eb08 020a 	add.w	r2, r8, sl
 80019b2:	4631      	mov	r1, r6
 80019b4:	4628      	mov	r0, r5
 80019b6:	47b8      	blx	r7
 80019b8:	3001      	adds	r0, #1
 80019ba:	d1c2      	bne.n	8001942 <_printf_float+0x32e>
 80019bc:	e685      	b.n	80016ca <_printf_float+0xb6>
 80019be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80019c0:	2a01      	cmp	r2, #1
 80019c2:	dc01      	bgt.n	80019c8 <_printf_float+0x3b4>
 80019c4:	07db      	lsls	r3, r3, #31
 80019c6:	d539      	bpl.n	8001a3c <_printf_float+0x428>
 80019c8:	2301      	movs	r3, #1
 80019ca:	4642      	mov	r2, r8
 80019cc:	4631      	mov	r1, r6
 80019ce:	4628      	mov	r0, r5
 80019d0:	47b8      	blx	r7
 80019d2:	3001      	adds	r0, #1
 80019d4:	f43f ae79 	beq.w	80016ca <_printf_float+0xb6>
 80019d8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80019dc:	4631      	mov	r1, r6
 80019de:	4628      	mov	r0, r5
 80019e0:	47b8      	blx	r7
 80019e2:	3001      	adds	r0, #1
 80019e4:	f43f ae71 	beq.w	80016ca <_printf_float+0xb6>
 80019e8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80019ec:	2200      	movs	r2, #0
 80019ee:	2300      	movs	r3, #0
 80019f0:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 80019f4:	f7ff f870 	bl	8000ad8 <__aeabi_dcmpeq>
 80019f8:	b9d8      	cbnz	r0, 8001a32 <_printf_float+0x41e>
 80019fa:	f109 33ff 	add.w	r3, r9, #4294967295
 80019fe:	f108 0201 	add.w	r2, r8, #1
 8001a02:	4631      	mov	r1, r6
 8001a04:	4628      	mov	r0, r5
 8001a06:	47b8      	blx	r7
 8001a08:	3001      	adds	r0, #1
 8001a0a:	d10e      	bne.n	8001a2a <_printf_float+0x416>
 8001a0c:	e65d      	b.n	80016ca <_printf_float+0xb6>
 8001a0e:	2301      	movs	r3, #1
 8001a10:	464a      	mov	r2, r9
 8001a12:	4631      	mov	r1, r6
 8001a14:	4628      	mov	r0, r5
 8001a16:	47b8      	blx	r7
 8001a18:	3001      	adds	r0, #1
 8001a1a:	f43f ae56 	beq.w	80016ca <_printf_float+0xb6>
 8001a1e:	f108 0801 	add.w	r8, r8, #1
 8001a22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001a24:	3b01      	subs	r3, #1
 8001a26:	4543      	cmp	r3, r8
 8001a28:	dcf1      	bgt.n	8001a0e <_printf_float+0x3fa>
 8001a2a:	4653      	mov	r3, sl
 8001a2c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001a30:	e6df      	b.n	80017f2 <_printf_float+0x1de>
 8001a32:	f04f 0800 	mov.w	r8, #0
 8001a36:	f104 091a 	add.w	r9, r4, #26
 8001a3a:	e7f2      	b.n	8001a22 <_printf_float+0x40e>
 8001a3c:	2301      	movs	r3, #1
 8001a3e:	4642      	mov	r2, r8
 8001a40:	e7df      	b.n	8001a02 <_printf_float+0x3ee>
 8001a42:	2301      	movs	r3, #1
 8001a44:	464a      	mov	r2, r9
 8001a46:	4631      	mov	r1, r6
 8001a48:	4628      	mov	r0, r5
 8001a4a:	47b8      	blx	r7
 8001a4c:	3001      	adds	r0, #1
 8001a4e:	f43f ae3c 	beq.w	80016ca <_printf_float+0xb6>
 8001a52:	f108 0801 	add.w	r8, r8, #1
 8001a56:	68e3      	ldr	r3, [r4, #12]
 8001a58:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8001a5a:	1a5b      	subs	r3, r3, r1
 8001a5c:	4543      	cmp	r3, r8
 8001a5e:	dcf0      	bgt.n	8001a42 <_printf_float+0x42e>
 8001a60:	e6fc      	b.n	800185c <_printf_float+0x248>
 8001a62:	f04f 0800 	mov.w	r8, #0
 8001a66:	f104 0919 	add.w	r9, r4, #25
 8001a6a:	e7f4      	b.n	8001a56 <_printf_float+0x442>

08001a6c <_printf_common>:
 8001a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a70:	4616      	mov	r6, r2
 8001a72:	4699      	mov	r9, r3
 8001a74:	688a      	ldr	r2, [r1, #8]
 8001a76:	690b      	ldr	r3, [r1, #16]
 8001a78:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001a7c:	4293      	cmp	r3, r2
 8001a7e:	bfb8      	it	lt
 8001a80:	4613      	movlt	r3, r2
 8001a82:	6033      	str	r3, [r6, #0]
 8001a84:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001a88:	4607      	mov	r7, r0
 8001a8a:	460c      	mov	r4, r1
 8001a8c:	b10a      	cbz	r2, 8001a92 <_printf_common+0x26>
 8001a8e:	3301      	adds	r3, #1
 8001a90:	6033      	str	r3, [r6, #0]
 8001a92:	6823      	ldr	r3, [r4, #0]
 8001a94:	0699      	lsls	r1, r3, #26
 8001a96:	bf42      	ittt	mi
 8001a98:	6833      	ldrmi	r3, [r6, #0]
 8001a9a:	3302      	addmi	r3, #2
 8001a9c:	6033      	strmi	r3, [r6, #0]
 8001a9e:	6825      	ldr	r5, [r4, #0]
 8001aa0:	f015 0506 	ands.w	r5, r5, #6
 8001aa4:	d106      	bne.n	8001ab4 <_printf_common+0x48>
 8001aa6:	f104 0a19 	add.w	sl, r4, #25
 8001aaa:	68e3      	ldr	r3, [r4, #12]
 8001aac:	6832      	ldr	r2, [r6, #0]
 8001aae:	1a9b      	subs	r3, r3, r2
 8001ab0:	42ab      	cmp	r3, r5
 8001ab2:	dc26      	bgt.n	8001b02 <_printf_common+0x96>
 8001ab4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001ab8:	1e13      	subs	r3, r2, #0
 8001aba:	6822      	ldr	r2, [r4, #0]
 8001abc:	bf18      	it	ne
 8001abe:	2301      	movne	r3, #1
 8001ac0:	0692      	lsls	r2, r2, #26
 8001ac2:	d42b      	bmi.n	8001b1c <_printf_common+0xb0>
 8001ac4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001ac8:	4649      	mov	r1, r9
 8001aca:	4638      	mov	r0, r7
 8001acc:	47c0      	blx	r8
 8001ace:	3001      	adds	r0, #1
 8001ad0:	d01e      	beq.n	8001b10 <_printf_common+0xa4>
 8001ad2:	6823      	ldr	r3, [r4, #0]
 8001ad4:	6922      	ldr	r2, [r4, #16]
 8001ad6:	f003 0306 	and.w	r3, r3, #6
 8001ada:	2b04      	cmp	r3, #4
 8001adc:	bf02      	ittt	eq
 8001ade:	68e5      	ldreq	r5, [r4, #12]
 8001ae0:	6833      	ldreq	r3, [r6, #0]
 8001ae2:	1aed      	subeq	r5, r5, r3
 8001ae4:	68a3      	ldr	r3, [r4, #8]
 8001ae6:	bf0c      	ite	eq
 8001ae8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001aec:	2500      	movne	r5, #0
 8001aee:	4293      	cmp	r3, r2
 8001af0:	bfc4      	itt	gt
 8001af2:	1a9b      	subgt	r3, r3, r2
 8001af4:	18ed      	addgt	r5, r5, r3
 8001af6:	2600      	movs	r6, #0
 8001af8:	341a      	adds	r4, #26
 8001afa:	42b5      	cmp	r5, r6
 8001afc:	d11a      	bne.n	8001b34 <_printf_common+0xc8>
 8001afe:	2000      	movs	r0, #0
 8001b00:	e008      	b.n	8001b14 <_printf_common+0xa8>
 8001b02:	2301      	movs	r3, #1
 8001b04:	4652      	mov	r2, sl
 8001b06:	4649      	mov	r1, r9
 8001b08:	4638      	mov	r0, r7
 8001b0a:	47c0      	blx	r8
 8001b0c:	3001      	adds	r0, #1
 8001b0e:	d103      	bne.n	8001b18 <_printf_common+0xac>
 8001b10:	f04f 30ff 	mov.w	r0, #4294967295
 8001b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b18:	3501      	adds	r5, #1
 8001b1a:	e7c6      	b.n	8001aaa <_printf_common+0x3e>
 8001b1c:	18e1      	adds	r1, r4, r3
 8001b1e:	1c5a      	adds	r2, r3, #1
 8001b20:	2030      	movs	r0, #48	; 0x30
 8001b22:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001b26:	4422      	add	r2, r4
 8001b28:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001b2c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001b30:	3302      	adds	r3, #2
 8001b32:	e7c7      	b.n	8001ac4 <_printf_common+0x58>
 8001b34:	2301      	movs	r3, #1
 8001b36:	4622      	mov	r2, r4
 8001b38:	4649      	mov	r1, r9
 8001b3a:	4638      	mov	r0, r7
 8001b3c:	47c0      	blx	r8
 8001b3e:	3001      	adds	r0, #1
 8001b40:	d0e6      	beq.n	8001b10 <_printf_common+0xa4>
 8001b42:	3601      	adds	r6, #1
 8001b44:	e7d9      	b.n	8001afa <_printf_common+0x8e>
	...

08001b48 <_printf_i>:
 8001b48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b4c:	7e0f      	ldrb	r7, [r1, #24]
 8001b4e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001b50:	2f78      	cmp	r7, #120	; 0x78
 8001b52:	4691      	mov	r9, r2
 8001b54:	4680      	mov	r8, r0
 8001b56:	460c      	mov	r4, r1
 8001b58:	469a      	mov	sl, r3
 8001b5a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001b5e:	d807      	bhi.n	8001b70 <_printf_i+0x28>
 8001b60:	2f62      	cmp	r7, #98	; 0x62
 8001b62:	d80a      	bhi.n	8001b7a <_printf_i+0x32>
 8001b64:	2f00      	cmp	r7, #0
 8001b66:	f000 80d4 	beq.w	8001d12 <_printf_i+0x1ca>
 8001b6a:	2f58      	cmp	r7, #88	; 0x58
 8001b6c:	f000 80c0 	beq.w	8001cf0 <_printf_i+0x1a8>
 8001b70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b74:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001b78:	e03a      	b.n	8001bf0 <_printf_i+0xa8>
 8001b7a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001b7e:	2b15      	cmp	r3, #21
 8001b80:	d8f6      	bhi.n	8001b70 <_printf_i+0x28>
 8001b82:	a101      	add	r1, pc, #4	; (adr r1, 8001b88 <_printf_i+0x40>)
 8001b84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001b88:	08001be1 	.word	0x08001be1
 8001b8c:	08001bf5 	.word	0x08001bf5
 8001b90:	08001b71 	.word	0x08001b71
 8001b94:	08001b71 	.word	0x08001b71
 8001b98:	08001b71 	.word	0x08001b71
 8001b9c:	08001b71 	.word	0x08001b71
 8001ba0:	08001bf5 	.word	0x08001bf5
 8001ba4:	08001b71 	.word	0x08001b71
 8001ba8:	08001b71 	.word	0x08001b71
 8001bac:	08001b71 	.word	0x08001b71
 8001bb0:	08001b71 	.word	0x08001b71
 8001bb4:	08001cf9 	.word	0x08001cf9
 8001bb8:	08001c21 	.word	0x08001c21
 8001bbc:	08001cb3 	.word	0x08001cb3
 8001bc0:	08001b71 	.word	0x08001b71
 8001bc4:	08001b71 	.word	0x08001b71
 8001bc8:	08001d1b 	.word	0x08001d1b
 8001bcc:	08001b71 	.word	0x08001b71
 8001bd0:	08001c21 	.word	0x08001c21
 8001bd4:	08001b71 	.word	0x08001b71
 8001bd8:	08001b71 	.word	0x08001b71
 8001bdc:	08001cbb 	.word	0x08001cbb
 8001be0:	682b      	ldr	r3, [r5, #0]
 8001be2:	1d1a      	adds	r2, r3, #4
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	602a      	str	r2, [r5, #0]
 8001be8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001bec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001bf0:	2301      	movs	r3, #1
 8001bf2:	e09f      	b.n	8001d34 <_printf_i+0x1ec>
 8001bf4:	6820      	ldr	r0, [r4, #0]
 8001bf6:	682b      	ldr	r3, [r5, #0]
 8001bf8:	0607      	lsls	r7, r0, #24
 8001bfa:	f103 0104 	add.w	r1, r3, #4
 8001bfe:	6029      	str	r1, [r5, #0]
 8001c00:	d501      	bpl.n	8001c06 <_printf_i+0xbe>
 8001c02:	681e      	ldr	r6, [r3, #0]
 8001c04:	e003      	b.n	8001c0e <_printf_i+0xc6>
 8001c06:	0646      	lsls	r6, r0, #25
 8001c08:	d5fb      	bpl.n	8001c02 <_printf_i+0xba>
 8001c0a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001c0e:	2e00      	cmp	r6, #0
 8001c10:	da03      	bge.n	8001c1a <_printf_i+0xd2>
 8001c12:	232d      	movs	r3, #45	; 0x2d
 8001c14:	4276      	negs	r6, r6
 8001c16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c1a:	485a      	ldr	r0, [pc, #360]	; (8001d84 <_printf_i+0x23c>)
 8001c1c:	230a      	movs	r3, #10
 8001c1e:	e012      	b.n	8001c46 <_printf_i+0xfe>
 8001c20:	682b      	ldr	r3, [r5, #0]
 8001c22:	6820      	ldr	r0, [r4, #0]
 8001c24:	1d19      	adds	r1, r3, #4
 8001c26:	6029      	str	r1, [r5, #0]
 8001c28:	0605      	lsls	r5, r0, #24
 8001c2a:	d501      	bpl.n	8001c30 <_printf_i+0xe8>
 8001c2c:	681e      	ldr	r6, [r3, #0]
 8001c2e:	e002      	b.n	8001c36 <_printf_i+0xee>
 8001c30:	0641      	lsls	r1, r0, #25
 8001c32:	d5fb      	bpl.n	8001c2c <_printf_i+0xe4>
 8001c34:	881e      	ldrh	r6, [r3, #0]
 8001c36:	4853      	ldr	r0, [pc, #332]	; (8001d84 <_printf_i+0x23c>)
 8001c38:	2f6f      	cmp	r7, #111	; 0x6f
 8001c3a:	bf0c      	ite	eq
 8001c3c:	2308      	moveq	r3, #8
 8001c3e:	230a      	movne	r3, #10
 8001c40:	2100      	movs	r1, #0
 8001c42:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001c46:	6865      	ldr	r5, [r4, #4]
 8001c48:	60a5      	str	r5, [r4, #8]
 8001c4a:	2d00      	cmp	r5, #0
 8001c4c:	bfa2      	ittt	ge
 8001c4e:	6821      	ldrge	r1, [r4, #0]
 8001c50:	f021 0104 	bicge.w	r1, r1, #4
 8001c54:	6021      	strge	r1, [r4, #0]
 8001c56:	b90e      	cbnz	r6, 8001c5c <_printf_i+0x114>
 8001c58:	2d00      	cmp	r5, #0
 8001c5a:	d04b      	beq.n	8001cf4 <_printf_i+0x1ac>
 8001c5c:	4615      	mov	r5, r2
 8001c5e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001c62:	fb03 6711 	mls	r7, r3, r1, r6
 8001c66:	5dc7      	ldrb	r7, [r0, r7]
 8001c68:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001c6c:	4637      	mov	r7, r6
 8001c6e:	42bb      	cmp	r3, r7
 8001c70:	460e      	mov	r6, r1
 8001c72:	d9f4      	bls.n	8001c5e <_printf_i+0x116>
 8001c74:	2b08      	cmp	r3, #8
 8001c76:	d10b      	bne.n	8001c90 <_printf_i+0x148>
 8001c78:	6823      	ldr	r3, [r4, #0]
 8001c7a:	07de      	lsls	r6, r3, #31
 8001c7c:	d508      	bpl.n	8001c90 <_printf_i+0x148>
 8001c7e:	6923      	ldr	r3, [r4, #16]
 8001c80:	6861      	ldr	r1, [r4, #4]
 8001c82:	4299      	cmp	r1, r3
 8001c84:	bfde      	ittt	le
 8001c86:	2330      	movle	r3, #48	; 0x30
 8001c88:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001c8c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001c90:	1b52      	subs	r2, r2, r5
 8001c92:	6122      	str	r2, [r4, #16]
 8001c94:	f8cd a000 	str.w	sl, [sp]
 8001c98:	464b      	mov	r3, r9
 8001c9a:	aa03      	add	r2, sp, #12
 8001c9c:	4621      	mov	r1, r4
 8001c9e:	4640      	mov	r0, r8
 8001ca0:	f7ff fee4 	bl	8001a6c <_printf_common>
 8001ca4:	3001      	adds	r0, #1
 8001ca6:	d14a      	bne.n	8001d3e <_printf_i+0x1f6>
 8001ca8:	f04f 30ff 	mov.w	r0, #4294967295
 8001cac:	b004      	add	sp, #16
 8001cae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001cb2:	6823      	ldr	r3, [r4, #0]
 8001cb4:	f043 0320 	orr.w	r3, r3, #32
 8001cb8:	6023      	str	r3, [r4, #0]
 8001cba:	4833      	ldr	r0, [pc, #204]	; (8001d88 <_printf_i+0x240>)
 8001cbc:	2778      	movs	r7, #120	; 0x78
 8001cbe:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001cc2:	6823      	ldr	r3, [r4, #0]
 8001cc4:	6829      	ldr	r1, [r5, #0]
 8001cc6:	061f      	lsls	r7, r3, #24
 8001cc8:	f851 6b04 	ldr.w	r6, [r1], #4
 8001ccc:	d402      	bmi.n	8001cd4 <_printf_i+0x18c>
 8001cce:	065f      	lsls	r7, r3, #25
 8001cd0:	bf48      	it	mi
 8001cd2:	b2b6      	uxthmi	r6, r6
 8001cd4:	07df      	lsls	r7, r3, #31
 8001cd6:	bf48      	it	mi
 8001cd8:	f043 0320 	orrmi.w	r3, r3, #32
 8001cdc:	6029      	str	r1, [r5, #0]
 8001cde:	bf48      	it	mi
 8001ce0:	6023      	strmi	r3, [r4, #0]
 8001ce2:	b91e      	cbnz	r6, 8001cec <_printf_i+0x1a4>
 8001ce4:	6823      	ldr	r3, [r4, #0]
 8001ce6:	f023 0320 	bic.w	r3, r3, #32
 8001cea:	6023      	str	r3, [r4, #0]
 8001cec:	2310      	movs	r3, #16
 8001cee:	e7a7      	b.n	8001c40 <_printf_i+0xf8>
 8001cf0:	4824      	ldr	r0, [pc, #144]	; (8001d84 <_printf_i+0x23c>)
 8001cf2:	e7e4      	b.n	8001cbe <_printf_i+0x176>
 8001cf4:	4615      	mov	r5, r2
 8001cf6:	e7bd      	b.n	8001c74 <_printf_i+0x12c>
 8001cf8:	682b      	ldr	r3, [r5, #0]
 8001cfa:	6826      	ldr	r6, [r4, #0]
 8001cfc:	6961      	ldr	r1, [r4, #20]
 8001cfe:	1d18      	adds	r0, r3, #4
 8001d00:	6028      	str	r0, [r5, #0]
 8001d02:	0635      	lsls	r5, r6, #24
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	d501      	bpl.n	8001d0c <_printf_i+0x1c4>
 8001d08:	6019      	str	r1, [r3, #0]
 8001d0a:	e002      	b.n	8001d12 <_printf_i+0x1ca>
 8001d0c:	0670      	lsls	r0, r6, #25
 8001d0e:	d5fb      	bpl.n	8001d08 <_printf_i+0x1c0>
 8001d10:	8019      	strh	r1, [r3, #0]
 8001d12:	2300      	movs	r3, #0
 8001d14:	6123      	str	r3, [r4, #16]
 8001d16:	4615      	mov	r5, r2
 8001d18:	e7bc      	b.n	8001c94 <_printf_i+0x14c>
 8001d1a:	682b      	ldr	r3, [r5, #0]
 8001d1c:	1d1a      	adds	r2, r3, #4
 8001d1e:	602a      	str	r2, [r5, #0]
 8001d20:	681d      	ldr	r5, [r3, #0]
 8001d22:	6862      	ldr	r2, [r4, #4]
 8001d24:	2100      	movs	r1, #0
 8001d26:	4628      	mov	r0, r5
 8001d28:	f7fe fa5a 	bl	80001e0 <memchr>
 8001d2c:	b108      	cbz	r0, 8001d32 <_printf_i+0x1ea>
 8001d2e:	1b40      	subs	r0, r0, r5
 8001d30:	6060      	str	r0, [r4, #4]
 8001d32:	6863      	ldr	r3, [r4, #4]
 8001d34:	6123      	str	r3, [r4, #16]
 8001d36:	2300      	movs	r3, #0
 8001d38:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d3c:	e7aa      	b.n	8001c94 <_printf_i+0x14c>
 8001d3e:	6923      	ldr	r3, [r4, #16]
 8001d40:	462a      	mov	r2, r5
 8001d42:	4649      	mov	r1, r9
 8001d44:	4640      	mov	r0, r8
 8001d46:	47d0      	blx	sl
 8001d48:	3001      	adds	r0, #1
 8001d4a:	d0ad      	beq.n	8001ca8 <_printf_i+0x160>
 8001d4c:	6823      	ldr	r3, [r4, #0]
 8001d4e:	079b      	lsls	r3, r3, #30
 8001d50:	d413      	bmi.n	8001d7a <_printf_i+0x232>
 8001d52:	68e0      	ldr	r0, [r4, #12]
 8001d54:	9b03      	ldr	r3, [sp, #12]
 8001d56:	4298      	cmp	r0, r3
 8001d58:	bfb8      	it	lt
 8001d5a:	4618      	movlt	r0, r3
 8001d5c:	e7a6      	b.n	8001cac <_printf_i+0x164>
 8001d5e:	2301      	movs	r3, #1
 8001d60:	4632      	mov	r2, r6
 8001d62:	4649      	mov	r1, r9
 8001d64:	4640      	mov	r0, r8
 8001d66:	47d0      	blx	sl
 8001d68:	3001      	adds	r0, #1
 8001d6a:	d09d      	beq.n	8001ca8 <_printf_i+0x160>
 8001d6c:	3501      	adds	r5, #1
 8001d6e:	68e3      	ldr	r3, [r4, #12]
 8001d70:	9903      	ldr	r1, [sp, #12]
 8001d72:	1a5b      	subs	r3, r3, r1
 8001d74:	42ab      	cmp	r3, r5
 8001d76:	dcf2      	bgt.n	8001d5e <_printf_i+0x216>
 8001d78:	e7eb      	b.n	8001d52 <_printf_i+0x20a>
 8001d7a:	2500      	movs	r5, #0
 8001d7c:	f104 0619 	add.w	r6, r4, #25
 8001d80:	e7f5      	b.n	8001d6e <_printf_i+0x226>
 8001d82:	bf00      	nop
 8001d84:	08003e22 	.word	0x08003e22
 8001d88:	08003e33 	.word	0x08003e33

08001d8c <std>:
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	b510      	push	{r4, lr}
 8001d90:	4604      	mov	r4, r0
 8001d92:	e9c0 3300 	strd	r3, r3, [r0]
 8001d96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001d9a:	6083      	str	r3, [r0, #8]
 8001d9c:	8181      	strh	r1, [r0, #12]
 8001d9e:	6643      	str	r3, [r0, #100]	; 0x64
 8001da0:	81c2      	strh	r2, [r0, #14]
 8001da2:	6183      	str	r3, [r0, #24]
 8001da4:	4619      	mov	r1, r3
 8001da6:	2208      	movs	r2, #8
 8001da8:	305c      	adds	r0, #92	; 0x5c
 8001daa:	f000 f8f4 	bl	8001f96 <memset>
 8001dae:	4b0d      	ldr	r3, [pc, #52]	; (8001de4 <std+0x58>)
 8001db0:	6263      	str	r3, [r4, #36]	; 0x24
 8001db2:	4b0d      	ldr	r3, [pc, #52]	; (8001de8 <std+0x5c>)
 8001db4:	62a3      	str	r3, [r4, #40]	; 0x28
 8001db6:	4b0d      	ldr	r3, [pc, #52]	; (8001dec <std+0x60>)
 8001db8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001dba:	4b0d      	ldr	r3, [pc, #52]	; (8001df0 <std+0x64>)
 8001dbc:	6323      	str	r3, [r4, #48]	; 0x30
 8001dbe:	4b0d      	ldr	r3, [pc, #52]	; (8001df4 <std+0x68>)
 8001dc0:	6224      	str	r4, [r4, #32]
 8001dc2:	429c      	cmp	r4, r3
 8001dc4:	d006      	beq.n	8001dd4 <std+0x48>
 8001dc6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001dca:	4294      	cmp	r4, r2
 8001dcc:	d002      	beq.n	8001dd4 <std+0x48>
 8001dce:	33d0      	adds	r3, #208	; 0xd0
 8001dd0:	429c      	cmp	r4, r3
 8001dd2:	d105      	bne.n	8001de0 <std+0x54>
 8001dd4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001dd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ddc:	f000 b958 	b.w	8002090 <__retarget_lock_init_recursive>
 8001de0:	bd10      	pop	{r4, pc}
 8001de2:	bf00      	nop
 8001de4:	08001f11 	.word	0x08001f11
 8001de8:	08001f33 	.word	0x08001f33
 8001dec:	08001f6b 	.word	0x08001f6b
 8001df0:	08001f8f 	.word	0x08001f8f
 8001df4:	200001e8 	.word	0x200001e8

08001df8 <stdio_exit_handler>:
 8001df8:	4a02      	ldr	r2, [pc, #8]	; (8001e04 <stdio_exit_handler+0xc>)
 8001dfa:	4903      	ldr	r1, [pc, #12]	; (8001e08 <stdio_exit_handler+0x10>)
 8001dfc:	4803      	ldr	r0, [pc, #12]	; (8001e0c <stdio_exit_handler+0x14>)
 8001dfe:	f000 b869 	b.w	8001ed4 <_fwalk_sglue>
 8001e02:	bf00      	nop
 8001e04:	20000000 	.word	0x20000000
 8001e08:	0800374d 	.word	0x0800374d
 8001e0c:	2000000c 	.word	0x2000000c

08001e10 <cleanup_stdio>:
 8001e10:	6841      	ldr	r1, [r0, #4]
 8001e12:	4b0c      	ldr	r3, [pc, #48]	; (8001e44 <cleanup_stdio+0x34>)
 8001e14:	4299      	cmp	r1, r3
 8001e16:	b510      	push	{r4, lr}
 8001e18:	4604      	mov	r4, r0
 8001e1a:	d001      	beq.n	8001e20 <cleanup_stdio+0x10>
 8001e1c:	f001 fc96 	bl	800374c <_fflush_r>
 8001e20:	68a1      	ldr	r1, [r4, #8]
 8001e22:	4b09      	ldr	r3, [pc, #36]	; (8001e48 <cleanup_stdio+0x38>)
 8001e24:	4299      	cmp	r1, r3
 8001e26:	d002      	beq.n	8001e2e <cleanup_stdio+0x1e>
 8001e28:	4620      	mov	r0, r4
 8001e2a:	f001 fc8f 	bl	800374c <_fflush_r>
 8001e2e:	68e1      	ldr	r1, [r4, #12]
 8001e30:	4b06      	ldr	r3, [pc, #24]	; (8001e4c <cleanup_stdio+0x3c>)
 8001e32:	4299      	cmp	r1, r3
 8001e34:	d004      	beq.n	8001e40 <cleanup_stdio+0x30>
 8001e36:	4620      	mov	r0, r4
 8001e38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e3c:	f001 bc86 	b.w	800374c <_fflush_r>
 8001e40:	bd10      	pop	{r4, pc}
 8001e42:	bf00      	nop
 8001e44:	200001e8 	.word	0x200001e8
 8001e48:	20000250 	.word	0x20000250
 8001e4c:	200002b8 	.word	0x200002b8

08001e50 <global_stdio_init.part.0>:
 8001e50:	b510      	push	{r4, lr}
 8001e52:	4b0b      	ldr	r3, [pc, #44]	; (8001e80 <global_stdio_init.part.0+0x30>)
 8001e54:	4c0b      	ldr	r4, [pc, #44]	; (8001e84 <global_stdio_init.part.0+0x34>)
 8001e56:	4a0c      	ldr	r2, [pc, #48]	; (8001e88 <global_stdio_init.part.0+0x38>)
 8001e58:	601a      	str	r2, [r3, #0]
 8001e5a:	4620      	mov	r0, r4
 8001e5c:	2200      	movs	r2, #0
 8001e5e:	2104      	movs	r1, #4
 8001e60:	f7ff ff94 	bl	8001d8c <std>
 8001e64:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001e68:	2201      	movs	r2, #1
 8001e6a:	2109      	movs	r1, #9
 8001e6c:	f7ff ff8e 	bl	8001d8c <std>
 8001e70:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001e74:	2202      	movs	r2, #2
 8001e76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e7a:	2112      	movs	r1, #18
 8001e7c:	f7ff bf86 	b.w	8001d8c <std>
 8001e80:	20000320 	.word	0x20000320
 8001e84:	200001e8 	.word	0x200001e8
 8001e88:	08001df9 	.word	0x08001df9

08001e8c <__sfp_lock_acquire>:
 8001e8c:	4801      	ldr	r0, [pc, #4]	; (8001e94 <__sfp_lock_acquire+0x8>)
 8001e8e:	f000 b900 	b.w	8002092 <__retarget_lock_acquire_recursive>
 8001e92:	bf00      	nop
 8001e94:	20000329 	.word	0x20000329

08001e98 <__sfp_lock_release>:
 8001e98:	4801      	ldr	r0, [pc, #4]	; (8001ea0 <__sfp_lock_release+0x8>)
 8001e9a:	f000 b8fb 	b.w	8002094 <__retarget_lock_release_recursive>
 8001e9e:	bf00      	nop
 8001ea0:	20000329 	.word	0x20000329

08001ea4 <__sinit>:
 8001ea4:	b510      	push	{r4, lr}
 8001ea6:	4604      	mov	r4, r0
 8001ea8:	f7ff fff0 	bl	8001e8c <__sfp_lock_acquire>
 8001eac:	6a23      	ldr	r3, [r4, #32]
 8001eae:	b11b      	cbz	r3, 8001eb8 <__sinit+0x14>
 8001eb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001eb4:	f7ff bff0 	b.w	8001e98 <__sfp_lock_release>
 8001eb8:	4b04      	ldr	r3, [pc, #16]	; (8001ecc <__sinit+0x28>)
 8001eba:	6223      	str	r3, [r4, #32]
 8001ebc:	4b04      	ldr	r3, [pc, #16]	; (8001ed0 <__sinit+0x2c>)
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	d1f5      	bne.n	8001eb0 <__sinit+0xc>
 8001ec4:	f7ff ffc4 	bl	8001e50 <global_stdio_init.part.0>
 8001ec8:	e7f2      	b.n	8001eb0 <__sinit+0xc>
 8001eca:	bf00      	nop
 8001ecc:	08001e11 	.word	0x08001e11
 8001ed0:	20000320 	.word	0x20000320

08001ed4 <_fwalk_sglue>:
 8001ed4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001ed8:	4607      	mov	r7, r0
 8001eda:	4688      	mov	r8, r1
 8001edc:	4614      	mov	r4, r2
 8001ede:	2600      	movs	r6, #0
 8001ee0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001ee4:	f1b9 0901 	subs.w	r9, r9, #1
 8001ee8:	d505      	bpl.n	8001ef6 <_fwalk_sglue+0x22>
 8001eea:	6824      	ldr	r4, [r4, #0]
 8001eec:	2c00      	cmp	r4, #0
 8001eee:	d1f7      	bne.n	8001ee0 <_fwalk_sglue+0xc>
 8001ef0:	4630      	mov	r0, r6
 8001ef2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001ef6:	89ab      	ldrh	r3, [r5, #12]
 8001ef8:	2b01      	cmp	r3, #1
 8001efa:	d907      	bls.n	8001f0c <_fwalk_sglue+0x38>
 8001efc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001f00:	3301      	adds	r3, #1
 8001f02:	d003      	beq.n	8001f0c <_fwalk_sglue+0x38>
 8001f04:	4629      	mov	r1, r5
 8001f06:	4638      	mov	r0, r7
 8001f08:	47c0      	blx	r8
 8001f0a:	4306      	orrs	r6, r0
 8001f0c:	3568      	adds	r5, #104	; 0x68
 8001f0e:	e7e9      	b.n	8001ee4 <_fwalk_sglue+0x10>

08001f10 <__sread>:
 8001f10:	b510      	push	{r4, lr}
 8001f12:	460c      	mov	r4, r1
 8001f14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001f18:	f000 f86c 	bl	8001ff4 <_read_r>
 8001f1c:	2800      	cmp	r0, #0
 8001f1e:	bfab      	itete	ge
 8001f20:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001f22:	89a3      	ldrhlt	r3, [r4, #12]
 8001f24:	181b      	addge	r3, r3, r0
 8001f26:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001f2a:	bfac      	ite	ge
 8001f2c:	6563      	strge	r3, [r4, #84]	; 0x54
 8001f2e:	81a3      	strhlt	r3, [r4, #12]
 8001f30:	bd10      	pop	{r4, pc}

08001f32 <__swrite>:
 8001f32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f36:	461f      	mov	r7, r3
 8001f38:	898b      	ldrh	r3, [r1, #12]
 8001f3a:	05db      	lsls	r3, r3, #23
 8001f3c:	4605      	mov	r5, r0
 8001f3e:	460c      	mov	r4, r1
 8001f40:	4616      	mov	r6, r2
 8001f42:	d505      	bpl.n	8001f50 <__swrite+0x1e>
 8001f44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001f48:	2302      	movs	r3, #2
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f000 f840 	bl	8001fd0 <_lseek_r>
 8001f50:	89a3      	ldrh	r3, [r4, #12]
 8001f52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001f56:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001f5a:	81a3      	strh	r3, [r4, #12]
 8001f5c:	4632      	mov	r2, r6
 8001f5e:	463b      	mov	r3, r7
 8001f60:	4628      	mov	r0, r5
 8001f62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001f66:	f000 b857 	b.w	8002018 <_write_r>

08001f6a <__sseek>:
 8001f6a:	b510      	push	{r4, lr}
 8001f6c:	460c      	mov	r4, r1
 8001f6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001f72:	f000 f82d 	bl	8001fd0 <_lseek_r>
 8001f76:	1c43      	adds	r3, r0, #1
 8001f78:	89a3      	ldrh	r3, [r4, #12]
 8001f7a:	bf15      	itete	ne
 8001f7c:	6560      	strne	r0, [r4, #84]	; 0x54
 8001f7e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001f82:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001f86:	81a3      	strheq	r3, [r4, #12]
 8001f88:	bf18      	it	ne
 8001f8a:	81a3      	strhne	r3, [r4, #12]
 8001f8c:	bd10      	pop	{r4, pc}

08001f8e <__sclose>:
 8001f8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001f92:	f000 b80d 	b.w	8001fb0 <_close_r>

08001f96 <memset>:
 8001f96:	4402      	add	r2, r0
 8001f98:	4603      	mov	r3, r0
 8001f9a:	4293      	cmp	r3, r2
 8001f9c:	d100      	bne.n	8001fa0 <memset+0xa>
 8001f9e:	4770      	bx	lr
 8001fa0:	f803 1b01 	strb.w	r1, [r3], #1
 8001fa4:	e7f9      	b.n	8001f9a <memset+0x4>
	...

08001fa8 <_localeconv_r>:
 8001fa8:	4800      	ldr	r0, [pc, #0]	; (8001fac <_localeconv_r+0x4>)
 8001faa:	4770      	bx	lr
 8001fac:	2000014c 	.word	0x2000014c

08001fb0 <_close_r>:
 8001fb0:	b538      	push	{r3, r4, r5, lr}
 8001fb2:	4d06      	ldr	r5, [pc, #24]	; (8001fcc <_close_r+0x1c>)
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	4604      	mov	r4, r0
 8001fb8:	4608      	mov	r0, r1
 8001fba:	602b      	str	r3, [r5, #0]
 8001fbc:	f7ff f914 	bl	80011e8 <_close>
 8001fc0:	1c43      	adds	r3, r0, #1
 8001fc2:	d102      	bne.n	8001fca <_close_r+0x1a>
 8001fc4:	682b      	ldr	r3, [r5, #0]
 8001fc6:	b103      	cbz	r3, 8001fca <_close_r+0x1a>
 8001fc8:	6023      	str	r3, [r4, #0]
 8001fca:	bd38      	pop	{r3, r4, r5, pc}
 8001fcc:	20000324 	.word	0x20000324

08001fd0 <_lseek_r>:
 8001fd0:	b538      	push	{r3, r4, r5, lr}
 8001fd2:	4d07      	ldr	r5, [pc, #28]	; (8001ff0 <_lseek_r+0x20>)
 8001fd4:	4604      	mov	r4, r0
 8001fd6:	4608      	mov	r0, r1
 8001fd8:	4611      	mov	r1, r2
 8001fda:	2200      	movs	r2, #0
 8001fdc:	602a      	str	r2, [r5, #0]
 8001fde:	461a      	mov	r2, r3
 8001fe0:	f7ff f926 	bl	8001230 <_lseek>
 8001fe4:	1c43      	adds	r3, r0, #1
 8001fe6:	d102      	bne.n	8001fee <_lseek_r+0x1e>
 8001fe8:	682b      	ldr	r3, [r5, #0]
 8001fea:	b103      	cbz	r3, 8001fee <_lseek_r+0x1e>
 8001fec:	6023      	str	r3, [r4, #0]
 8001fee:	bd38      	pop	{r3, r4, r5, pc}
 8001ff0:	20000324 	.word	0x20000324

08001ff4 <_read_r>:
 8001ff4:	b538      	push	{r3, r4, r5, lr}
 8001ff6:	4d07      	ldr	r5, [pc, #28]	; (8002014 <_read_r+0x20>)
 8001ff8:	4604      	mov	r4, r0
 8001ffa:	4608      	mov	r0, r1
 8001ffc:	4611      	mov	r1, r2
 8001ffe:	2200      	movs	r2, #0
 8002000:	602a      	str	r2, [r5, #0]
 8002002:	461a      	mov	r2, r3
 8002004:	f7ff f8b7 	bl	8001176 <_read>
 8002008:	1c43      	adds	r3, r0, #1
 800200a:	d102      	bne.n	8002012 <_read_r+0x1e>
 800200c:	682b      	ldr	r3, [r5, #0]
 800200e:	b103      	cbz	r3, 8002012 <_read_r+0x1e>
 8002010:	6023      	str	r3, [r4, #0]
 8002012:	bd38      	pop	{r3, r4, r5, pc}
 8002014:	20000324 	.word	0x20000324

08002018 <_write_r>:
 8002018:	b538      	push	{r3, r4, r5, lr}
 800201a:	4d07      	ldr	r5, [pc, #28]	; (8002038 <_write_r+0x20>)
 800201c:	4604      	mov	r4, r0
 800201e:	4608      	mov	r0, r1
 8002020:	4611      	mov	r1, r2
 8002022:	2200      	movs	r2, #0
 8002024:	602a      	str	r2, [r5, #0]
 8002026:	461a      	mov	r2, r3
 8002028:	f7ff f8c2 	bl	80011b0 <_write>
 800202c:	1c43      	adds	r3, r0, #1
 800202e:	d102      	bne.n	8002036 <_write_r+0x1e>
 8002030:	682b      	ldr	r3, [r5, #0]
 8002032:	b103      	cbz	r3, 8002036 <_write_r+0x1e>
 8002034:	6023      	str	r3, [r4, #0]
 8002036:	bd38      	pop	{r3, r4, r5, pc}
 8002038:	20000324 	.word	0x20000324

0800203c <__errno>:
 800203c:	4b01      	ldr	r3, [pc, #4]	; (8002044 <__errno+0x8>)
 800203e:	6818      	ldr	r0, [r3, #0]
 8002040:	4770      	bx	lr
 8002042:	bf00      	nop
 8002044:	20000058 	.word	0x20000058

08002048 <__libc_init_array>:
 8002048:	b570      	push	{r4, r5, r6, lr}
 800204a:	4d0d      	ldr	r5, [pc, #52]	; (8002080 <__libc_init_array+0x38>)
 800204c:	4c0d      	ldr	r4, [pc, #52]	; (8002084 <__libc_init_array+0x3c>)
 800204e:	1b64      	subs	r4, r4, r5
 8002050:	10a4      	asrs	r4, r4, #2
 8002052:	2600      	movs	r6, #0
 8002054:	42a6      	cmp	r6, r4
 8002056:	d109      	bne.n	800206c <__libc_init_array+0x24>
 8002058:	4d0b      	ldr	r5, [pc, #44]	; (8002088 <__libc_init_array+0x40>)
 800205a:	4c0c      	ldr	r4, [pc, #48]	; (800208c <__libc_init_array+0x44>)
 800205c:	f001 fec6 	bl	8003dec <_init>
 8002060:	1b64      	subs	r4, r4, r5
 8002062:	10a4      	asrs	r4, r4, #2
 8002064:	2600      	movs	r6, #0
 8002066:	42a6      	cmp	r6, r4
 8002068:	d105      	bne.n	8002076 <__libc_init_array+0x2e>
 800206a:	bd70      	pop	{r4, r5, r6, pc}
 800206c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002070:	4798      	blx	r3
 8002072:	3601      	adds	r6, #1
 8002074:	e7ee      	b.n	8002054 <__libc_init_array+0xc>
 8002076:	f855 3b04 	ldr.w	r3, [r5], #4
 800207a:	4798      	blx	r3
 800207c:	3601      	adds	r6, #1
 800207e:	e7f2      	b.n	8002066 <__libc_init_array+0x1e>
 8002080:	08004184 	.word	0x08004184
 8002084:	08004184 	.word	0x08004184
 8002088:	08004184 	.word	0x08004184
 800208c:	08004188 	.word	0x08004188

08002090 <__retarget_lock_init_recursive>:
 8002090:	4770      	bx	lr

08002092 <__retarget_lock_acquire_recursive>:
 8002092:	4770      	bx	lr

08002094 <__retarget_lock_release_recursive>:
 8002094:	4770      	bx	lr

08002096 <quorem>:
 8002096:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800209a:	6903      	ldr	r3, [r0, #16]
 800209c:	690c      	ldr	r4, [r1, #16]
 800209e:	42a3      	cmp	r3, r4
 80020a0:	4607      	mov	r7, r0
 80020a2:	db7b      	blt.n	800219c <quorem+0x106>
 80020a4:	3c01      	subs	r4, #1
 80020a6:	f101 0814 	add.w	r8, r1, #20
 80020aa:	f100 0514 	add.w	r5, r0, #20
 80020ae:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80020b2:	9301      	str	r3, [sp, #4]
 80020b4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80020b8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80020bc:	3301      	adds	r3, #1
 80020be:	429a      	cmp	r2, r3
 80020c0:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80020c4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80020c8:	fbb2 f6f3 	udiv	r6, r2, r3
 80020cc:	d32e      	bcc.n	800212c <quorem+0x96>
 80020ce:	f04f 0e00 	mov.w	lr, #0
 80020d2:	4640      	mov	r0, r8
 80020d4:	46ac      	mov	ip, r5
 80020d6:	46f2      	mov	sl, lr
 80020d8:	f850 2b04 	ldr.w	r2, [r0], #4
 80020dc:	b293      	uxth	r3, r2
 80020de:	fb06 e303 	mla	r3, r6, r3, lr
 80020e2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80020e6:	0c1a      	lsrs	r2, r3, #16
 80020e8:	b29b      	uxth	r3, r3
 80020ea:	fb06 220e 	mla	r2, r6, lr, r2
 80020ee:	ebaa 0303 	sub.w	r3, sl, r3
 80020f2:	f8dc a000 	ldr.w	sl, [ip]
 80020f6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80020fa:	b292      	uxth	r2, r2
 80020fc:	fa13 f38a 	uxtah	r3, r3, sl
 8002100:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002104:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002108:	b29b      	uxth	r3, r3
 800210a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800210e:	4581      	cmp	r9, r0
 8002110:	f84c 3b04 	str.w	r3, [ip], #4
 8002114:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002118:	d2de      	bcs.n	80020d8 <quorem+0x42>
 800211a:	f855 300b 	ldr.w	r3, [r5, fp]
 800211e:	b92b      	cbnz	r3, 800212c <quorem+0x96>
 8002120:	9b01      	ldr	r3, [sp, #4]
 8002122:	3b04      	subs	r3, #4
 8002124:	429d      	cmp	r5, r3
 8002126:	461a      	mov	r2, r3
 8002128:	d32c      	bcc.n	8002184 <quorem+0xee>
 800212a:	613c      	str	r4, [r7, #16]
 800212c:	4638      	mov	r0, r7
 800212e:	f001 f991 	bl	8003454 <__mcmp>
 8002132:	2800      	cmp	r0, #0
 8002134:	db22      	blt.n	800217c <quorem+0xe6>
 8002136:	3601      	adds	r6, #1
 8002138:	4629      	mov	r1, r5
 800213a:	2000      	movs	r0, #0
 800213c:	f858 2b04 	ldr.w	r2, [r8], #4
 8002140:	f8d1 c000 	ldr.w	ip, [r1]
 8002144:	b293      	uxth	r3, r2
 8002146:	1ac3      	subs	r3, r0, r3
 8002148:	0c12      	lsrs	r2, r2, #16
 800214a:	fa13 f38c 	uxtah	r3, r3, ip
 800214e:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002152:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002156:	b29b      	uxth	r3, r3
 8002158:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800215c:	45c1      	cmp	r9, r8
 800215e:	f841 3b04 	str.w	r3, [r1], #4
 8002162:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002166:	d2e9      	bcs.n	800213c <quorem+0xa6>
 8002168:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800216c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002170:	b922      	cbnz	r2, 800217c <quorem+0xe6>
 8002172:	3b04      	subs	r3, #4
 8002174:	429d      	cmp	r5, r3
 8002176:	461a      	mov	r2, r3
 8002178:	d30a      	bcc.n	8002190 <quorem+0xfa>
 800217a:	613c      	str	r4, [r7, #16]
 800217c:	4630      	mov	r0, r6
 800217e:	b003      	add	sp, #12
 8002180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002184:	6812      	ldr	r2, [r2, #0]
 8002186:	3b04      	subs	r3, #4
 8002188:	2a00      	cmp	r2, #0
 800218a:	d1ce      	bne.n	800212a <quorem+0x94>
 800218c:	3c01      	subs	r4, #1
 800218e:	e7c9      	b.n	8002124 <quorem+0x8e>
 8002190:	6812      	ldr	r2, [r2, #0]
 8002192:	3b04      	subs	r3, #4
 8002194:	2a00      	cmp	r2, #0
 8002196:	d1f0      	bne.n	800217a <quorem+0xe4>
 8002198:	3c01      	subs	r4, #1
 800219a:	e7eb      	b.n	8002174 <quorem+0xde>
 800219c:	2000      	movs	r0, #0
 800219e:	e7ee      	b.n	800217e <quorem+0xe8>

080021a0 <_dtoa_r>:
 80021a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021a4:	69c4      	ldr	r4, [r0, #28]
 80021a6:	b099      	sub	sp, #100	; 0x64
 80021a8:	4616      	mov	r6, r2
 80021aa:	461f      	mov	r7, r3
 80021ac:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80021b0:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80021b4:	4605      	mov	r5, r0
 80021b6:	b974      	cbnz	r4, 80021d6 <_dtoa_r+0x36>
 80021b8:	2010      	movs	r0, #16
 80021ba:	f000 fe1b 	bl	8002df4 <malloc>
 80021be:	4602      	mov	r2, r0
 80021c0:	61e8      	str	r0, [r5, #28]
 80021c2:	b920      	cbnz	r0, 80021ce <_dtoa_r+0x2e>
 80021c4:	4baa      	ldr	r3, [pc, #680]	; (8002470 <_dtoa_r+0x2d0>)
 80021c6:	21ef      	movs	r1, #239	; 0xef
 80021c8:	48aa      	ldr	r0, [pc, #680]	; (8002474 <_dtoa_r+0x2d4>)
 80021ca:	f001 fb05 	bl	80037d8 <__assert_func>
 80021ce:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80021d2:	6004      	str	r4, [r0, #0]
 80021d4:	60c4      	str	r4, [r0, #12]
 80021d6:	69eb      	ldr	r3, [r5, #28]
 80021d8:	6819      	ldr	r1, [r3, #0]
 80021da:	b151      	cbz	r1, 80021f2 <_dtoa_r+0x52>
 80021dc:	685a      	ldr	r2, [r3, #4]
 80021de:	604a      	str	r2, [r1, #4]
 80021e0:	2301      	movs	r3, #1
 80021e2:	4093      	lsls	r3, r2
 80021e4:	608b      	str	r3, [r1, #8]
 80021e6:	4628      	mov	r0, r5
 80021e8:	f000 fef8 	bl	8002fdc <_Bfree>
 80021ec:	69eb      	ldr	r3, [r5, #28]
 80021ee:	2200      	movs	r2, #0
 80021f0:	601a      	str	r2, [r3, #0]
 80021f2:	1e3b      	subs	r3, r7, #0
 80021f4:	bfb9      	ittee	lt
 80021f6:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80021fa:	9305      	strlt	r3, [sp, #20]
 80021fc:	2300      	movge	r3, #0
 80021fe:	f8c8 3000 	strge.w	r3, [r8]
 8002202:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8002206:	4b9c      	ldr	r3, [pc, #624]	; (8002478 <_dtoa_r+0x2d8>)
 8002208:	bfbc      	itt	lt
 800220a:	2201      	movlt	r2, #1
 800220c:	f8c8 2000 	strlt.w	r2, [r8]
 8002210:	ea33 0309 	bics.w	r3, r3, r9
 8002214:	d119      	bne.n	800224a <_dtoa_r+0xaa>
 8002216:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002218:	f242 730f 	movw	r3, #9999	; 0x270f
 800221c:	6013      	str	r3, [r2, #0]
 800221e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002222:	4333      	orrs	r3, r6
 8002224:	f000 8587 	beq.w	8002d36 <_dtoa_r+0xb96>
 8002228:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800222a:	b953      	cbnz	r3, 8002242 <_dtoa_r+0xa2>
 800222c:	4b93      	ldr	r3, [pc, #588]	; (800247c <_dtoa_r+0x2dc>)
 800222e:	e023      	b.n	8002278 <_dtoa_r+0xd8>
 8002230:	4b93      	ldr	r3, [pc, #588]	; (8002480 <_dtoa_r+0x2e0>)
 8002232:	9303      	str	r3, [sp, #12]
 8002234:	3308      	adds	r3, #8
 8002236:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002238:	6013      	str	r3, [r2, #0]
 800223a:	9803      	ldr	r0, [sp, #12]
 800223c:	b019      	add	sp, #100	; 0x64
 800223e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002242:	4b8e      	ldr	r3, [pc, #568]	; (800247c <_dtoa_r+0x2dc>)
 8002244:	9303      	str	r3, [sp, #12]
 8002246:	3303      	adds	r3, #3
 8002248:	e7f5      	b.n	8002236 <_dtoa_r+0x96>
 800224a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800224e:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8002252:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002256:	2200      	movs	r2, #0
 8002258:	2300      	movs	r3, #0
 800225a:	f7fe fc3d 	bl	8000ad8 <__aeabi_dcmpeq>
 800225e:	4680      	mov	r8, r0
 8002260:	b160      	cbz	r0, 800227c <_dtoa_r+0xdc>
 8002262:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002264:	2301      	movs	r3, #1
 8002266:	6013      	str	r3, [r2, #0]
 8002268:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800226a:	2b00      	cmp	r3, #0
 800226c:	f000 8560 	beq.w	8002d30 <_dtoa_r+0xb90>
 8002270:	4b84      	ldr	r3, [pc, #528]	; (8002484 <_dtoa_r+0x2e4>)
 8002272:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002274:	6013      	str	r3, [r2, #0]
 8002276:	3b01      	subs	r3, #1
 8002278:	9303      	str	r3, [sp, #12]
 800227a:	e7de      	b.n	800223a <_dtoa_r+0x9a>
 800227c:	ab16      	add	r3, sp, #88	; 0x58
 800227e:	9301      	str	r3, [sp, #4]
 8002280:	ab17      	add	r3, sp, #92	; 0x5c
 8002282:	9300      	str	r3, [sp, #0]
 8002284:	4628      	mov	r0, r5
 8002286:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800228a:	f001 f987 	bl	800359c <__d2b>
 800228e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8002292:	4682      	mov	sl, r0
 8002294:	2c00      	cmp	r4, #0
 8002296:	d07d      	beq.n	8002394 <_dtoa_r+0x1f4>
 8002298:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800229a:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800229e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80022a2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80022a6:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80022aa:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80022ae:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80022b2:	4619      	mov	r1, r3
 80022b4:	2200      	movs	r2, #0
 80022b6:	4b74      	ldr	r3, [pc, #464]	; (8002488 <_dtoa_r+0x2e8>)
 80022b8:	f7fd ffee 	bl	8000298 <__aeabi_dsub>
 80022bc:	a366      	add	r3, pc, #408	; (adr r3, 8002458 <_dtoa_r+0x2b8>)
 80022be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022c2:	f7fe f9a1 	bl	8000608 <__aeabi_dmul>
 80022c6:	a366      	add	r3, pc, #408	; (adr r3, 8002460 <_dtoa_r+0x2c0>)
 80022c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022cc:	f7fd ffe6 	bl	800029c <__adddf3>
 80022d0:	4606      	mov	r6, r0
 80022d2:	4620      	mov	r0, r4
 80022d4:	460f      	mov	r7, r1
 80022d6:	f7fe f92d 	bl	8000534 <__aeabi_i2d>
 80022da:	a363      	add	r3, pc, #396	; (adr r3, 8002468 <_dtoa_r+0x2c8>)
 80022dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022e0:	f7fe f992 	bl	8000608 <__aeabi_dmul>
 80022e4:	4602      	mov	r2, r0
 80022e6:	460b      	mov	r3, r1
 80022e8:	4630      	mov	r0, r6
 80022ea:	4639      	mov	r1, r7
 80022ec:	f7fd ffd6 	bl	800029c <__adddf3>
 80022f0:	4606      	mov	r6, r0
 80022f2:	460f      	mov	r7, r1
 80022f4:	f7fe fc38 	bl	8000b68 <__aeabi_d2iz>
 80022f8:	2200      	movs	r2, #0
 80022fa:	4683      	mov	fp, r0
 80022fc:	2300      	movs	r3, #0
 80022fe:	4630      	mov	r0, r6
 8002300:	4639      	mov	r1, r7
 8002302:	f7fe fbf3 	bl	8000aec <__aeabi_dcmplt>
 8002306:	b148      	cbz	r0, 800231c <_dtoa_r+0x17c>
 8002308:	4658      	mov	r0, fp
 800230a:	f7fe f913 	bl	8000534 <__aeabi_i2d>
 800230e:	4632      	mov	r2, r6
 8002310:	463b      	mov	r3, r7
 8002312:	f7fe fbe1 	bl	8000ad8 <__aeabi_dcmpeq>
 8002316:	b908      	cbnz	r0, 800231c <_dtoa_r+0x17c>
 8002318:	f10b 3bff 	add.w	fp, fp, #4294967295
 800231c:	f1bb 0f16 	cmp.w	fp, #22
 8002320:	d856      	bhi.n	80023d0 <_dtoa_r+0x230>
 8002322:	4b5a      	ldr	r3, [pc, #360]	; (800248c <_dtoa_r+0x2ec>)
 8002324:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002328:	e9d3 2300 	ldrd	r2, r3, [r3]
 800232c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002330:	f7fe fbdc 	bl	8000aec <__aeabi_dcmplt>
 8002334:	2800      	cmp	r0, #0
 8002336:	d04d      	beq.n	80023d4 <_dtoa_r+0x234>
 8002338:	f10b 3bff 	add.w	fp, fp, #4294967295
 800233c:	2300      	movs	r3, #0
 800233e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002340:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002342:	1b1b      	subs	r3, r3, r4
 8002344:	1e5a      	subs	r2, r3, #1
 8002346:	bf44      	itt	mi
 8002348:	f1c3 0901 	rsbmi	r9, r3, #1
 800234c:	2300      	movmi	r3, #0
 800234e:	9209      	str	r2, [sp, #36]	; 0x24
 8002350:	bf54      	ite	pl
 8002352:	f04f 0900 	movpl.w	r9, #0
 8002356:	9309      	strmi	r3, [sp, #36]	; 0x24
 8002358:	f1bb 0f00 	cmp.w	fp, #0
 800235c:	db3c      	blt.n	80023d8 <_dtoa_r+0x238>
 800235e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002360:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8002364:	445b      	add	r3, fp
 8002366:	9309      	str	r3, [sp, #36]	; 0x24
 8002368:	2300      	movs	r3, #0
 800236a:	930a      	str	r3, [sp, #40]	; 0x28
 800236c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800236e:	2b09      	cmp	r3, #9
 8002370:	d866      	bhi.n	8002440 <_dtoa_r+0x2a0>
 8002372:	2b05      	cmp	r3, #5
 8002374:	bfc4      	itt	gt
 8002376:	3b04      	subgt	r3, #4
 8002378:	9322      	strgt	r3, [sp, #136]	; 0x88
 800237a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800237c:	f1a3 0302 	sub.w	r3, r3, #2
 8002380:	bfcc      	ite	gt
 8002382:	2400      	movgt	r4, #0
 8002384:	2401      	movle	r4, #1
 8002386:	2b03      	cmp	r3, #3
 8002388:	f200 8084 	bhi.w	8002494 <_dtoa_r+0x2f4>
 800238c:	e8df f003 	tbb	[pc, r3]
 8002390:	5637392c 	.word	0x5637392c
 8002394:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8002398:	441c      	add	r4, r3
 800239a:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800239e:	2b20      	cmp	r3, #32
 80023a0:	bfc1      	itttt	gt
 80023a2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80023a6:	fa09 f903 	lslgt.w	r9, r9, r3
 80023aa:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 80023ae:	fa26 f303 	lsrgt.w	r3, r6, r3
 80023b2:	bfd6      	itet	le
 80023b4:	f1c3 0320 	rsble	r3, r3, #32
 80023b8:	ea49 0003 	orrgt.w	r0, r9, r3
 80023bc:	fa06 f003 	lslle.w	r0, r6, r3
 80023c0:	f7fe f8a8 	bl	8000514 <__aeabi_ui2d>
 80023c4:	2201      	movs	r2, #1
 80023c6:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80023ca:	3c01      	subs	r4, #1
 80023cc:	9213      	str	r2, [sp, #76]	; 0x4c
 80023ce:	e770      	b.n	80022b2 <_dtoa_r+0x112>
 80023d0:	2301      	movs	r3, #1
 80023d2:	e7b4      	b.n	800233e <_dtoa_r+0x19e>
 80023d4:	900f      	str	r0, [sp, #60]	; 0x3c
 80023d6:	e7b3      	b.n	8002340 <_dtoa_r+0x1a0>
 80023d8:	f1cb 0300 	rsb	r3, fp, #0
 80023dc:	930a      	str	r3, [sp, #40]	; 0x28
 80023de:	2300      	movs	r3, #0
 80023e0:	eba9 090b 	sub.w	r9, r9, fp
 80023e4:	930e      	str	r3, [sp, #56]	; 0x38
 80023e6:	e7c1      	b.n	800236c <_dtoa_r+0x1cc>
 80023e8:	2300      	movs	r3, #0
 80023ea:	930b      	str	r3, [sp, #44]	; 0x2c
 80023ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	dc53      	bgt.n	800249a <_dtoa_r+0x2fa>
 80023f2:	2301      	movs	r3, #1
 80023f4:	9306      	str	r3, [sp, #24]
 80023f6:	9308      	str	r3, [sp, #32]
 80023f8:	461a      	mov	r2, r3
 80023fa:	9223      	str	r2, [sp, #140]	; 0x8c
 80023fc:	e00b      	b.n	8002416 <_dtoa_r+0x276>
 80023fe:	2301      	movs	r3, #1
 8002400:	e7f3      	b.n	80023ea <_dtoa_r+0x24a>
 8002402:	2300      	movs	r3, #0
 8002404:	930b      	str	r3, [sp, #44]	; 0x2c
 8002406:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002408:	445b      	add	r3, fp
 800240a:	9306      	str	r3, [sp, #24]
 800240c:	3301      	adds	r3, #1
 800240e:	2b01      	cmp	r3, #1
 8002410:	9308      	str	r3, [sp, #32]
 8002412:	bfb8      	it	lt
 8002414:	2301      	movlt	r3, #1
 8002416:	69e8      	ldr	r0, [r5, #28]
 8002418:	2100      	movs	r1, #0
 800241a:	2204      	movs	r2, #4
 800241c:	f102 0614 	add.w	r6, r2, #20
 8002420:	429e      	cmp	r6, r3
 8002422:	d93e      	bls.n	80024a2 <_dtoa_r+0x302>
 8002424:	6041      	str	r1, [r0, #4]
 8002426:	4628      	mov	r0, r5
 8002428:	f000 fd98 	bl	8002f5c <_Balloc>
 800242c:	9003      	str	r0, [sp, #12]
 800242e:	2800      	cmp	r0, #0
 8002430:	d13a      	bne.n	80024a8 <_dtoa_r+0x308>
 8002432:	4b17      	ldr	r3, [pc, #92]	; (8002490 <_dtoa_r+0x2f0>)
 8002434:	4602      	mov	r2, r0
 8002436:	f240 11af 	movw	r1, #431	; 0x1af
 800243a:	e6c5      	b.n	80021c8 <_dtoa_r+0x28>
 800243c:	2301      	movs	r3, #1
 800243e:	e7e1      	b.n	8002404 <_dtoa_r+0x264>
 8002440:	2401      	movs	r4, #1
 8002442:	2300      	movs	r3, #0
 8002444:	9322      	str	r3, [sp, #136]	; 0x88
 8002446:	940b      	str	r4, [sp, #44]	; 0x2c
 8002448:	f04f 33ff 	mov.w	r3, #4294967295
 800244c:	9306      	str	r3, [sp, #24]
 800244e:	9308      	str	r3, [sp, #32]
 8002450:	2200      	movs	r2, #0
 8002452:	2312      	movs	r3, #18
 8002454:	e7d1      	b.n	80023fa <_dtoa_r+0x25a>
 8002456:	bf00      	nop
 8002458:	636f4361 	.word	0x636f4361
 800245c:	3fd287a7 	.word	0x3fd287a7
 8002460:	8b60c8b3 	.word	0x8b60c8b3
 8002464:	3fc68a28 	.word	0x3fc68a28
 8002468:	509f79fb 	.word	0x509f79fb
 800246c:	3fd34413 	.word	0x3fd34413
 8002470:	08003e51 	.word	0x08003e51
 8002474:	08003e68 	.word	0x08003e68
 8002478:	7ff00000 	.word	0x7ff00000
 800247c:	08003e4d 	.word	0x08003e4d
 8002480:	08003e44 	.word	0x08003e44
 8002484:	08003e21 	.word	0x08003e21
 8002488:	3ff80000 	.word	0x3ff80000
 800248c:	08003f58 	.word	0x08003f58
 8002490:	08003ec0 	.word	0x08003ec0
 8002494:	2301      	movs	r3, #1
 8002496:	930b      	str	r3, [sp, #44]	; 0x2c
 8002498:	e7d6      	b.n	8002448 <_dtoa_r+0x2a8>
 800249a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800249c:	9306      	str	r3, [sp, #24]
 800249e:	9308      	str	r3, [sp, #32]
 80024a0:	e7b9      	b.n	8002416 <_dtoa_r+0x276>
 80024a2:	3101      	adds	r1, #1
 80024a4:	0052      	lsls	r2, r2, #1
 80024a6:	e7b9      	b.n	800241c <_dtoa_r+0x27c>
 80024a8:	69eb      	ldr	r3, [r5, #28]
 80024aa:	9a03      	ldr	r2, [sp, #12]
 80024ac:	601a      	str	r2, [r3, #0]
 80024ae:	9b08      	ldr	r3, [sp, #32]
 80024b0:	2b0e      	cmp	r3, #14
 80024b2:	f200 80a8 	bhi.w	8002606 <_dtoa_r+0x466>
 80024b6:	2c00      	cmp	r4, #0
 80024b8:	f000 80a5 	beq.w	8002606 <_dtoa_r+0x466>
 80024bc:	f1bb 0f00 	cmp.w	fp, #0
 80024c0:	dd34      	ble.n	800252c <_dtoa_r+0x38c>
 80024c2:	4b9a      	ldr	r3, [pc, #616]	; (800272c <_dtoa_r+0x58c>)
 80024c4:	f00b 020f 	and.w	r2, fp, #15
 80024c8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80024cc:	e9d3 3400 	ldrd	r3, r4, [r3]
 80024d0:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80024d4:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80024d8:	ea4f 142b 	mov.w	r4, fp, asr #4
 80024dc:	d016      	beq.n	800250c <_dtoa_r+0x36c>
 80024de:	4b94      	ldr	r3, [pc, #592]	; (8002730 <_dtoa_r+0x590>)
 80024e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80024e4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80024e8:	f7fe f9b8 	bl	800085c <__aeabi_ddiv>
 80024ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80024f0:	f004 040f 	and.w	r4, r4, #15
 80024f4:	2703      	movs	r7, #3
 80024f6:	4e8e      	ldr	r6, [pc, #568]	; (8002730 <_dtoa_r+0x590>)
 80024f8:	b954      	cbnz	r4, 8002510 <_dtoa_r+0x370>
 80024fa:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80024fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002502:	f7fe f9ab 	bl	800085c <__aeabi_ddiv>
 8002506:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800250a:	e029      	b.n	8002560 <_dtoa_r+0x3c0>
 800250c:	2702      	movs	r7, #2
 800250e:	e7f2      	b.n	80024f6 <_dtoa_r+0x356>
 8002510:	07e1      	lsls	r1, r4, #31
 8002512:	d508      	bpl.n	8002526 <_dtoa_r+0x386>
 8002514:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002518:	e9d6 2300 	ldrd	r2, r3, [r6]
 800251c:	f7fe f874 	bl	8000608 <__aeabi_dmul>
 8002520:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002524:	3701      	adds	r7, #1
 8002526:	1064      	asrs	r4, r4, #1
 8002528:	3608      	adds	r6, #8
 800252a:	e7e5      	b.n	80024f8 <_dtoa_r+0x358>
 800252c:	f000 80a5 	beq.w	800267a <_dtoa_r+0x4da>
 8002530:	f1cb 0400 	rsb	r4, fp, #0
 8002534:	4b7d      	ldr	r3, [pc, #500]	; (800272c <_dtoa_r+0x58c>)
 8002536:	4e7e      	ldr	r6, [pc, #504]	; (8002730 <_dtoa_r+0x590>)
 8002538:	f004 020f 	and.w	r2, r4, #15
 800253c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002540:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002544:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002548:	f7fe f85e 	bl	8000608 <__aeabi_dmul>
 800254c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002550:	1124      	asrs	r4, r4, #4
 8002552:	2300      	movs	r3, #0
 8002554:	2702      	movs	r7, #2
 8002556:	2c00      	cmp	r4, #0
 8002558:	f040 8084 	bne.w	8002664 <_dtoa_r+0x4c4>
 800255c:	2b00      	cmp	r3, #0
 800255e:	d1d2      	bne.n	8002506 <_dtoa_r+0x366>
 8002560:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8002564:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8002568:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800256a:	2b00      	cmp	r3, #0
 800256c:	f000 8087 	beq.w	800267e <_dtoa_r+0x4de>
 8002570:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002574:	4b6f      	ldr	r3, [pc, #444]	; (8002734 <_dtoa_r+0x594>)
 8002576:	2200      	movs	r2, #0
 8002578:	f7fe fab8 	bl	8000aec <__aeabi_dcmplt>
 800257c:	2800      	cmp	r0, #0
 800257e:	d07e      	beq.n	800267e <_dtoa_r+0x4de>
 8002580:	9b08      	ldr	r3, [sp, #32]
 8002582:	2b00      	cmp	r3, #0
 8002584:	d07b      	beq.n	800267e <_dtoa_r+0x4de>
 8002586:	9b06      	ldr	r3, [sp, #24]
 8002588:	2b00      	cmp	r3, #0
 800258a:	dd38      	ble.n	80025fe <_dtoa_r+0x45e>
 800258c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002590:	4b69      	ldr	r3, [pc, #420]	; (8002738 <_dtoa_r+0x598>)
 8002592:	2200      	movs	r2, #0
 8002594:	f7fe f838 	bl	8000608 <__aeabi_dmul>
 8002598:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800259c:	9c06      	ldr	r4, [sp, #24]
 800259e:	f10b 38ff 	add.w	r8, fp, #4294967295
 80025a2:	3701      	adds	r7, #1
 80025a4:	4638      	mov	r0, r7
 80025a6:	f7fd ffc5 	bl	8000534 <__aeabi_i2d>
 80025aa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80025ae:	f7fe f82b 	bl	8000608 <__aeabi_dmul>
 80025b2:	4b62      	ldr	r3, [pc, #392]	; (800273c <_dtoa_r+0x59c>)
 80025b4:	2200      	movs	r2, #0
 80025b6:	f7fd fe71 	bl	800029c <__adddf3>
 80025ba:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 80025be:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80025c2:	9611      	str	r6, [sp, #68]	; 0x44
 80025c4:	2c00      	cmp	r4, #0
 80025c6:	d15d      	bne.n	8002684 <_dtoa_r+0x4e4>
 80025c8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025cc:	4b5c      	ldr	r3, [pc, #368]	; (8002740 <_dtoa_r+0x5a0>)
 80025ce:	2200      	movs	r2, #0
 80025d0:	f7fd fe62 	bl	8000298 <__aeabi_dsub>
 80025d4:	4602      	mov	r2, r0
 80025d6:	460b      	mov	r3, r1
 80025d8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80025dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80025de:	4633      	mov	r3, r6
 80025e0:	f7fe faa2 	bl	8000b28 <__aeabi_dcmpgt>
 80025e4:	2800      	cmp	r0, #0
 80025e6:	f040 8295 	bne.w	8002b14 <_dtoa_r+0x974>
 80025ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80025ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80025f0:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 80025f4:	f7fe fa7a 	bl	8000aec <__aeabi_dcmplt>
 80025f8:	2800      	cmp	r0, #0
 80025fa:	f040 8289 	bne.w	8002b10 <_dtoa_r+0x970>
 80025fe:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8002602:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002606:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002608:	2b00      	cmp	r3, #0
 800260a:	f2c0 8151 	blt.w	80028b0 <_dtoa_r+0x710>
 800260e:	f1bb 0f0e 	cmp.w	fp, #14
 8002612:	f300 814d 	bgt.w	80028b0 <_dtoa_r+0x710>
 8002616:	4b45      	ldr	r3, [pc, #276]	; (800272c <_dtoa_r+0x58c>)
 8002618:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800261c:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002620:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8002624:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002626:	2b00      	cmp	r3, #0
 8002628:	f280 80da 	bge.w	80027e0 <_dtoa_r+0x640>
 800262c:	9b08      	ldr	r3, [sp, #32]
 800262e:	2b00      	cmp	r3, #0
 8002630:	f300 80d6 	bgt.w	80027e0 <_dtoa_r+0x640>
 8002634:	f040 826b 	bne.w	8002b0e <_dtoa_r+0x96e>
 8002638:	4b41      	ldr	r3, [pc, #260]	; (8002740 <_dtoa_r+0x5a0>)
 800263a:	2200      	movs	r2, #0
 800263c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002640:	f7fd ffe2 	bl	8000608 <__aeabi_dmul>
 8002644:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002648:	f7fe fa64 	bl	8000b14 <__aeabi_dcmpge>
 800264c:	9c08      	ldr	r4, [sp, #32]
 800264e:	4626      	mov	r6, r4
 8002650:	2800      	cmp	r0, #0
 8002652:	f040 8241 	bne.w	8002ad8 <_dtoa_r+0x938>
 8002656:	9f03      	ldr	r7, [sp, #12]
 8002658:	2331      	movs	r3, #49	; 0x31
 800265a:	f807 3b01 	strb.w	r3, [r7], #1
 800265e:	f10b 0b01 	add.w	fp, fp, #1
 8002662:	e23d      	b.n	8002ae0 <_dtoa_r+0x940>
 8002664:	07e2      	lsls	r2, r4, #31
 8002666:	d505      	bpl.n	8002674 <_dtoa_r+0x4d4>
 8002668:	e9d6 2300 	ldrd	r2, r3, [r6]
 800266c:	f7fd ffcc 	bl	8000608 <__aeabi_dmul>
 8002670:	3701      	adds	r7, #1
 8002672:	2301      	movs	r3, #1
 8002674:	1064      	asrs	r4, r4, #1
 8002676:	3608      	adds	r6, #8
 8002678:	e76d      	b.n	8002556 <_dtoa_r+0x3b6>
 800267a:	2702      	movs	r7, #2
 800267c:	e770      	b.n	8002560 <_dtoa_r+0x3c0>
 800267e:	9c08      	ldr	r4, [sp, #32]
 8002680:	46d8      	mov	r8, fp
 8002682:	e78f      	b.n	80025a4 <_dtoa_r+0x404>
 8002684:	9903      	ldr	r1, [sp, #12]
 8002686:	4b29      	ldr	r3, [pc, #164]	; (800272c <_dtoa_r+0x58c>)
 8002688:	4421      	add	r1, r4
 800268a:	9112      	str	r1, [sp, #72]	; 0x48
 800268c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800268e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002692:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8002696:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800269a:	2900      	cmp	r1, #0
 800269c:	d054      	beq.n	8002748 <_dtoa_r+0x5a8>
 800269e:	4929      	ldr	r1, [pc, #164]	; (8002744 <_dtoa_r+0x5a4>)
 80026a0:	2000      	movs	r0, #0
 80026a2:	f7fe f8db 	bl	800085c <__aeabi_ddiv>
 80026a6:	463b      	mov	r3, r7
 80026a8:	4632      	mov	r2, r6
 80026aa:	f7fd fdf5 	bl	8000298 <__aeabi_dsub>
 80026ae:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80026b2:	9f03      	ldr	r7, [sp, #12]
 80026b4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026b8:	f7fe fa56 	bl	8000b68 <__aeabi_d2iz>
 80026bc:	4604      	mov	r4, r0
 80026be:	f7fd ff39 	bl	8000534 <__aeabi_i2d>
 80026c2:	4602      	mov	r2, r0
 80026c4:	460b      	mov	r3, r1
 80026c6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026ca:	f7fd fde5 	bl	8000298 <__aeabi_dsub>
 80026ce:	3430      	adds	r4, #48	; 0x30
 80026d0:	4602      	mov	r2, r0
 80026d2:	460b      	mov	r3, r1
 80026d4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80026d8:	f807 4b01 	strb.w	r4, [r7], #1
 80026dc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80026e0:	f7fe fa04 	bl	8000aec <__aeabi_dcmplt>
 80026e4:	2800      	cmp	r0, #0
 80026e6:	d173      	bne.n	80027d0 <_dtoa_r+0x630>
 80026e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80026ec:	4911      	ldr	r1, [pc, #68]	; (8002734 <_dtoa_r+0x594>)
 80026ee:	2000      	movs	r0, #0
 80026f0:	f7fd fdd2 	bl	8000298 <__aeabi_dsub>
 80026f4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80026f8:	f7fe f9f8 	bl	8000aec <__aeabi_dcmplt>
 80026fc:	2800      	cmp	r0, #0
 80026fe:	f040 80b6 	bne.w	800286e <_dtoa_r+0x6ce>
 8002702:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002704:	429f      	cmp	r7, r3
 8002706:	f43f af7a 	beq.w	80025fe <_dtoa_r+0x45e>
 800270a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800270e:	4b0a      	ldr	r3, [pc, #40]	; (8002738 <_dtoa_r+0x598>)
 8002710:	2200      	movs	r2, #0
 8002712:	f7fd ff79 	bl	8000608 <__aeabi_dmul>
 8002716:	4b08      	ldr	r3, [pc, #32]	; (8002738 <_dtoa_r+0x598>)
 8002718:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800271c:	2200      	movs	r2, #0
 800271e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002722:	f7fd ff71 	bl	8000608 <__aeabi_dmul>
 8002726:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800272a:	e7c3      	b.n	80026b4 <_dtoa_r+0x514>
 800272c:	08003f58 	.word	0x08003f58
 8002730:	08003f30 	.word	0x08003f30
 8002734:	3ff00000 	.word	0x3ff00000
 8002738:	40240000 	.word	0x40240000
 800273c:	401c0000 	.word	0x401c0000
 8002740:	40140000 	.word	0x40140000
 8002744:	3fe00000 	.word	0x3fe00000
 8002748:	4630      	mov	r0, r6
 800274a:	4639      	mov	r1, r7
 800274c:	f7fd ff5c 	bl	8000608 <__aeabi_dmul>
 8002750:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8002754:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002756:	9c03      	ldr	r4, [sp, #12]
 8002758:	9314      	str	r3, [sp, #80]	; 0x50
 800275a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800275e:	f7fe fa03 	bl	8000b68 <__aeabi_d2iz>
 8002762:	9015      	str	r0, [sp, #84]	; 0x54
 8002764:	f7fd fee6 	bl	8000534 <__aeabi_i2d>
 8002768:	4602      	mov	r2, r0
 800276a:	460b      	mov	r3, r1
 800276c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002770:	f7fd fd92 	bl	8000298 <__aeabi_dsub>
 8002774:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002776:	3330      	adds	r3, #48	; 0x30
 8002778:	f804 3b01 	strb.w	r3, [r4], #1
 800277c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800277e:	429c      	cmp	r4, r3
 8002780:	4606      	mov	r6, r0
 8002782:	460f      	mov	r7, r1
 8002784:	f04f 0200 	mov.w	r2, #0
 8002788:	d124      	bne.n	80027d4 <_dtoa_r+0x634>
 800278a:	4bb0      	ldr	r3, [pc, #704]	; (8002a4c <_dtoa_r+0x8ac>)
 800278c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002790:	f7fd fd84 	bl	800029c <__adddf3>
 8002794:	4602      	mov	r2, r0
 8002796:	460b      	mov	r3, r1
 8002798:	4630      	mov	r0, r6
 800279a:	4639      	mov	r1, r7
 800279c:	f7fe f9c4 	bl	8000b28 <__aeabi_dcmpgt>
 80027a0:	2800      	cmp	r0, #0
 80027a2:	d163      	bne.n	800286c <_dtoa_r+0x6cc>
 80027a4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80027a8:	49a8      	ldr	r1, [pc, #672]	; (8002a4c <_dtoa_r+0x8ac>)
 80027aa:	2000      	movs	r0, #0
 80027ac:	f7fd fd74 	bl	8000298 <__aeabi_dsub>
 80027b0:	4602      	mov	r2, r0
 80027b2:	460b      	mov	r3, r1
 80027b4:	4630      	mov	r0, r6
 80027b6:	4639      	mov	r1, r7
 80027b8:	f7fe f998 	bl	8000aec <__aeabi_dcmplt>
 80027bc:	2800      	cmp	r0, #0
 80027be:	f43f af1e 	beq.w	80025fe <_dtoa_r+0x45e>
 80027c2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80027c4:	1e7b      	subs	r3, r7, #1
 80027c6:	9314      	str	r3, [sp, #80]	; 0x50
 80027c8:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 80027cc:	2b30      	cmp	r3, #48	; 0x30
 80027ce:	d0f8      	beq.n	80027c2 <_dtoa_r+0x622>
 80027d0:	46c3      	mov	fp, r8
 80027d2:	e03b      	b.n	800284c <_dtoa_r+0x6ac>
 80027d4:	4b9e      	ldr	r3, [pc, #632]	; (8002a50 <_dtoa_r+0x8b0>)
 80027d6:	f7fd ff17 	bl	8000608 <__aeabi_dmul>
 80027da:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80027de:	e7bc      	b.n	800275a <_dtoa_r+0x5ba>
 80027e0:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80027e4:	9f03      	ldr	r7, [sp, #12]
 80027e6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80027ea:	4640      	mov	r0, r8
 80027ec:	4649      	mov	r1, r9
 80027ee:	f7fe f835 	bl	800085c <__aeabi_ddiv>
 80027f2:	f7fe f9b9 	bl	8000b68 <__aeabi_d2iz>
 80027f6:	4604      	mov	r4, r0
 80027f8:	f7fd fe9c 	bl	8000534 <__aeabi_i2d>
 80027fc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8002800:	f7fd ff02 	bl	8000608 <__aeabi_dmul>
 8002804:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8002808:	4602      	mov	r2, r0
 800280a:	460b      	mov	r3, r1
 800280c:	4640      	mov	r0, r8
 800280e:	4649      	mov	r1, r9
 8002810:	f7fd fd42 	bl	8000298 <__aeabi_dsub>
 8002814:	f807 6b01 	strb.w	r6, [r7], #1
 8002818:	9e03      	ldr	r6, [sp, #12]
 800281a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800281e:	1bbe      	subs	r6, r7, r6
 8002820:	45b4      	cmp	ip, r6
 8002822:	4602      	mov	r2, r0
 8002824:	460b      	mov	r3, r1
 8002826:	d136      	bne.n	8002896 <_dtoa_r+0x6f6>
 8002828:	f7fd fd38 	bl	800029c <__adddf3>
 800282c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8002830:	4680      	mov	r8, r0
 8002832:	4689      	mov	r9, r1
 8002834:	f7fe f978 	bl	8000b28 <__aeabi_dcmpgt>
 8002838:	bb58      	cbnz	r0, 8002892 <_dtoa_r+0x6f2>
 800283a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800283e:	4640      	mov	r0, r8
 8002840:	4649      	mov	r1, r9
 8002842:	f7fe f949 	bl	8000ad8 <__aeabi_dcmpeq>
 8002846:	b108      	cbz	r0, 800284c <_dtoa_r+0x6ac>
 8002848:	07e3      	lsls	r3, r4, #31
 800284a:	d422      	bmi.n	8002892 <_dtoa_r+0x6f2>
 800284c:	4651      	mov	r1, sl
 800284e:	4628      	mov	r0, r5
 8002850:	f000 fbc4 	bl	8002fdc <_Bfree>
 8002854:	2300      	movs	r3, #0
 8002856:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002858:	703b      	strb	r3, [r7, #0]
 800285a:	f10b 0301 	add.w	r3, fp, #1
 800285e:	6013      	str	r3, [r2, #0]
 8002860:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002862:	2b00      	cmp	r3, #0
 8002864:	f43f ace9 	beq.w	800223a <_dtoa_r+0x9a>
 8002868:	601f      	str	r7, [r3, #0]
 800286a:	e4e6      	b.n	800223a <_dtoa_r+0x9a>
 800286c:	4627      	mov	r7, r4
 800286e:	463b      	mov	r3, r7
 8002870:	461f      	mov	r7, r3
 8002872:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002876:	2a39      	cmp	r2, #57	; 0x39
 8002878:	d107      	bne.n	800288a <_dtoa_r+0x6ea>
 800287a:	9a03      	ldr	r2, [sp, #12]
 800287c:	429a      	cmp	r2, r3
 800287e:	d1f7      	bne.n	8002870 <_dtoa_r+0x6d0>
 8002880:	9903      	ldr	r1, [sp, #12]
 8002882:	2230      	movs	r2, #48	; 0x30
 8002884:	f108 0801 	add.w	r8, r8, #1
 8002888:	700a      	strb	r2, [r1, #0]
 800288a:	781a      	ldrb	r2, [r3, #0]
 800288c:	3201      	adds	r2, #1
 800288e:	701a      	strb	r2, [r3, #0]
 8002890:	e79e      	b.n	80027d0 <_dtoa_r+0x630>
 8002892:	46d8      	mov	r8, fp
 8002894:	e7eb      	b.n	800286e <_dtoa_r+0x6ce>
 8002896:	4b6e      	ldr	r3, [pc, #440]	; (8002a50 <_dtoa_r+0x8b0>)
 8002898:	2200      	movs	r2, #0
 800289a:	f7fd feb5 	bl	8000608 <__aeabi_dmul>
 800289e:	2200      	movs	r2, #0
 80028a0:	2300      	movs	r3, #0
 80028a2:	4680      	mov	r8, r0
 80028a4:	4689      	mov	r9, r1
 80028a6:	f7fe f917 	bl	8000ad8 <__aeabi_dcmpeq>
 80028aa:	2800      	cmp	r0, #0
 80028ac:	d09b      	beq.n	80027e6 <_dtoa_r+0x646>
 80028ae:	e7cd      	b.n	800284c <_dtoa_r+0x6ac>
 80028b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80028b2:	2a00      	cmp	r2, #0
 80028b4:	f000 80c4 	beq.w	8002a40 <_dtoa_r+0x8a0>
 80028b8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80028ba:	2a01      	cmp	r2, #1
 80028bc:	f300 80a8 	bgt.w	8002a10 <_dtoa_r+0x870>
 80028c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80028c2:	2a00      	cmp	r2, #0
 80028c4:	f000 80a0 	beq.w	8002a08 <_dtoa_r+0x868>
 80028c8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80028cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80028ce:	464f      	mov	r7, r9
 80028d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80028d2:	2101      	movs	r1, #1
 80028d4:	441a      	add	r2, r3
 80028d6:	4628      	mov	r0, r5
 80028d8:	4499      	add	r9, r3
 80028da:	9209      	str	r2, [sp, #36]	; 0x24
 80028dc:	f000 fc34 	bl	8003148 <__i2b>
 80028e0:	4606      	mov	r6, r0
 80028e2:	b15f      	cbz	r7, 80028fc <_dtoa_r+0x75c>
 80028e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	dd08      	ble.n	80028fc <_dtoa_r+0x75c>
 80028ea:	42bb      	cmp	r3, r7
 80028ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80028ee:	bfa8      	it	ge
 80028f0:	463b      	movge	r3, r7
 80028f2:	eba9 0903 	sub.w	r9, r9, r3
 80028f6:	1aff      	subs	r7, r7, r3
 80028f8:	1ad3      	subs	r3, r2, r3
 80028fa:	9309      	str	r3, [sp, #36]	; 0x24
 80028fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028fe:	b1f3      	cbz	r3, 800293e <_dtoa_r+0x79e>
 8002900:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002902:	2b00      	cmp	r3, #0
 8002904:	f000 80a0 	beq.w	8002a48 <_dtoa_r+0x8a8>
 8002908:	2c00      	cmp	r4, #0
 800290a:	dd10      	ble.n	800292e <_dtoa_r+0x78e>
 800290c:	4631      	mov	r1, r6
 800290e:	4622      	mov	r2, r4
 8002910:	4628      	mov	r0, r5
 8002912:	f000 fcd9 	bl	80032c8 <__pow5mult>
 8002916:	4652      	mov	r2, sl
 8002918:	4601      	mov	r1, r0
 800291a:	4606      	mov	r6, r0
 800291c:	4628      	mov	r0, r5
 800291e:	f000 fc29 	bl	8003174 <__multiply>
 8002922:	4651      	mov	r1, sl
 8002924:	4680      	mov	r8, r0
 8002926:	4628      	mov	r0, r5
 8002928:	f000 fb58 	bl	8002fdc <_Bfree>
 800292c:	46c2      	mov	sl, r8
 800292e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002930:	1b1a      	subs	r2, r3, r4
 8002932:	d004      	beq.n	800293e <_dtoa_r+0x79e>
 8002934:	4651      	mov	r1, sl
 8002936:	4628      	mov	r0, r5
 8002938:	f000 fcc6 	bl	80032c8 <__pow5mult>
 800293c:	4682      	mov	sl, r0
 800293e:	2101      	movs	r1, #1
 8002940:	4628      	mov	r0, r5
 8002942:	f000 fc01 	bl	8003148 <__i2b>
 8002946:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002948:	2b00      	cmp	r3, #0
 800294a:	4604      	mov	r4, r0
 800294c:	f340 8082 	ble.w	8002a54 <_dtoa_r+0x8b4>
 8002950:	461a      	mov	r2, r3
 8002952:	4601      	mov	r1, r0
 8002954:	4628      	mov	r0, r5
 8002956:	f000 fcb7 	bl	80032c8 <__pow5mult>
 800295a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800295c:	2b01      	cmp	r3, #1
 800295e:	4604      	mov	r4, r0
 8002960:	dd7b      	ble.n	8002a5a <_dtoa_r+0x8ba>
 8002962:	f04f 0800 	mov.w	r8, #0
 8002966:	6923      	ldr	r3, [r4, #16]
 8002968:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800296c:	6918      	ldr	r0, [r3, #16]
 800296e:	f000 fb9d 	bl	80030ac <__hi0bits>
 8002972:	f1c0 0020 	rsb	r0, r0, #32
 8002976:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002978:	4418      	add	r0, r3
 800297a:	f010 001f 	ands.w	r0, r0, #31
 800297e:	f000 8092 	beq.w	8002aa6 <_dtoa_r+0x906>
 8002982:	f1c0 0320 	rsb	r3, r0, #32
 8002986:	2b04      	cmp	r3, #4
 8002988:	f340 8085 	ble.w	8002a96 <_dtoa_r+0x8f6>
 800298c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800298e:	f1c0 001c 	rsb	r0, r0, #28
 8002992:	4403      	add	r3, r0
 8002994:	4481      	add	r9, r0
 8002996:	4407      	add	r7, r0
 8002998:	9309      	str	r3, [sp, #36]	; 0x24
 800299a:	f1b9 0f00 	cmp.w	r9, #0
 800299e:	dd05      	ble.n	80029ac <_dtoa_r+0x80c>
 80029a0:	4651      	mov	r1, sl
 80029a2:	464a      	mov	r2, r9
 80029a4:	4628      	mov	r0, r5
 80029a6:	f000 fce9 	bl	800337c <__lshift>
 80029aa:	4682      	mov	sl, r0
 80029ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	dd05      	ble.n	80029be <_dtoa_r+0x81e>
 80029b2:	4621      	mov	r1, r4
 80029b4:	461a      	mov	r2, r3
 80029b6:	4628      	mov	r0, r5
 80029b8:	f000 fce0 	bl	800337c <__lshift>
 80029bc:	4604      	mov	r4, r0
 80029be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d072      	beq.n	8002aaa <_dtoa_r+0x90a>
 80029c4:	4621      	mov	r1, r4
 80029c6:	4650      	mov	r0, sl
 80029c8:	f000 fd44 	bl	8003454 <__mcmp>
 80029cc:	2800      	cmp	r0, #0
 80029ce:	da6c      	bge.n	8002aaa <_dtoa_r+0x90a>
 80029d0:	2300      	movs	r3, #0
 80029d2:	4651      	mov	r1, sl
 80029d4:	220a      	movs	r2, #10
 80029d6:	4628      	mov	r0, r5
 80029d8:	f000 fb22 	bl	8003020 <__multadd>
 80029dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80029de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80029e2:	4682      	mov	sl, r0
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	f000 81ad 	beq.w	8002d44 <_dtoa_r+0xba4>
 80029ea:	2300      	movs	r3, #0
 80029ec:	4631      	mov	r1, r6
 80029ee:	220a      	movs	r2, #10
 80029f0:	4628      	mov	r0, r5
 80029f2:	f000 fb15 	bl	8003020 <__multadd>
 80029f6:	9b06      	ldr	r3, [sp, #24]
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	4606      	mov	r6, r0
 80029fc:	f300 8093 	bgt.w	8002b26 <_dtoa_r+0x986>
 8002a00:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002a02:	2b02      	cmp	r3, #2
 8002a04:	dc59      	bgt.n	8002aba <_dtoa_r+0x91a>
 8002a06:	e08e      	b.n	8002b26 <_dtoa_r+0x986>
 8002a08:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002a0a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002a0e:	e75d      	b.n	80028cc <_dtoa_r+0x72c>
 8002a10:	9b08      	ldr	r3, [sp, #32]
 8002a12:	1e5c      	subs	r4, r3, #1
 8002a14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002a16:	42a3      	cmp	r3, r4
 8002a18:	bfbf      	itttt	lt
 8002a1a:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8002a1c:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 8002a1e:	940a      	strlt	r4, [sp, #40]	; 0x28
 8002a20:	1ae3      	sublt	r3, r4, r3
 8002a22:	bfb4      	ite	lt
 8002a24:	18d2      	addlt	r2, r2, r3
 8002a26:	1b1c      	subge	r4, r3, r4
 8002a28:	9b08      	ldr	r3, [sp, #32]
 8002a2a:	bfbc      	itt	lt
 8002a2c:	920e      	strlt	r2, [sp, #56]	; 0x38
 8002a2e:	2400      	movlt	r4, #0
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	bfb5      	itete	lt
 8002a34:	eba9 0703 	sublt.w	r7, r9, r3
 8002a38:	9b08      	ldrge	r3, [sp, #32]
 8002a3a:	2300      	movlt	r3, #0
 8002a3c:	464f      	movge	r7, r9
 8002a3e:	e747      	b.n	80028d0 <_dtoa_r+0x730>
 8002a40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8002a42:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8002a44:	464f      	mov	r7, r9
 8002a46:	e74c      	b.n	80028e2 <_dtoa_r+0x742>
 8002a48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002a4a:	e773      	b.n	8002934 <_dtoa_r+0x794>
 8002a4c:	3fe00000 	.word	0x3fe00000
 8002a50:	40240000 	.word	0x40240000
 8002a54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002a56:	2b01      	cmp	r3, #1
 8002a58:	dc18      	bgt.n	8002a8c <_dtoa_r+0x8ec>
 8002a5a:	9b04      	ldr	r3, [sp, #16]
 8002a5c:	b9b3      	cbnz	r3, 8002a8c <_dtoa_r+0x8ec>
 8002a5e:	9b05      	ldr	r3, [sp, #20]
 8002a60:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a64:	b993      	cbnz	r3, 8002a8c <_dtoa_r+0x8ec>
 8002a66:	9b05      	ldr	r3, [sp, #20]
 8002a68:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002a6c:	0d1b      	lsrs	r3, r3, #20
 8002a6e:	051b      	lsls	r3, r3, #20
 8002a70:	b17b      	cbz	r3, 8002a92 <_dtoa_r+0x8f2>
 8002a72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a74:	3301      	adds	r3, #1
 8002a76:	f109 0901 	add.w	r9, r9, #1
 8002a7a:	9309      	str	r3, [sp, #36]	; 0x24
 8002a7c:	f04f 0801 	mov.w	r8, #1
 8002a80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002a82:	2b00      	cmp	r3, #0
 8002a84:	f47f af6f 	bne.w	8002966 <_dtoa_r+0x7c6>
 8002a88:	2001      	movs	r0, #1
 8002a8a:	e774      	b.n	8002976 <_dtoa_r+0x7d6>
 8002a8c:	f04f 0800 	mov.w	r8, #0
 8002a90:	e7f6      	b.n	8002a80 <_dtoa_r+0x8e0>
 8002a92:	4698      	mov	r8, r3
 8002a94:	e7f4      	b.n	8002a80 <_dtoa_r+0x8e0>
 8002a96:	d080      	beq.n	800299a <_dtoa_r+0x7fa>
 8002a98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002a9a:	331c      	adds	r3, #28
 8002a9c:	441a      	add	r2, r3
 8002a9e:	4499      	add	r9, r3
 8002aa0:	441f      	add	r7, r3
 8002aa2:	9209      	str	r2, [sp, #36]	; 0x24
 8002aa4:	e779      	b.n	800299a <_dtoa_r+0x7fa>
 8002aa6:	4603      	mov	r3, r0
 8002aa8:	e7f6      	b.n	8002a98 <_dtoa_r+0x8f8>
 8002aaa:	9b08      	ldr	r3, [sp, #32]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	dc34      	bgt.n	8002b1a <_dtoa_r+0x97a>
 8002ab0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002ab2:	2b02      	cmp	r3, #2
 8002ab4:	dd31      	ble.n	8002b1a <_dtoa_r+0x97a>
 8002ab6:	9b08      	ldr	r3, [sp, #32]
 8002ab8:	9306      	str	r3, [sp, #24]
 8002aba:	9b06      	ldr	r3, [sp, #24]
 8002abc:	b963      	cbnz	r3, 8002ad8 <_dtoa_r+0x938>
 8002abe:	4621      	mov	r1, r4
 8002ac0:	2205      	movs	r2, #5
 8002ac2:	4628      	mov	r0, r5
 8002ac4:	f000 faac 	bl	8003020 <__multadd>
 8002ac8:	4601      	mov	r1, r0
 8002aca:	4604      	mov	r4, r0
 8002acc:	4650      	mov	r0, sl
 8002ace:	f000 fcc1 	bl	8003454 <__mcmp>
 8002ad2:	2800      	cmp	r0, #0
 8002ad4:	f73f adbf 	bgt.w	8002656 <_dtoa_r+0x4b6>
 8002ad8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002ada:	9f03      	ldr	r7, [sp, #12]
 8002adc:	ea6f 0b03 	mvn.w	fp, r3
 8002ae0:	f04f 0800 	mov.w	r8, #0
 8002ae4:	4621      	mov	r1, r4
 8002ae6:	4628      	mov	r0, r5
 8002ae8:	f000 fa78 	bl	8002fdc <_Bfree>
 8002aec:	2e00      	cmp	r6, #0
 8002aee:	f43f aead 	beq.w	800284c <_dtoa_r+0x6ac>
 8002af2:	f1b8 0f00 	cmp.w	r8, #0
 8002af6:	d005      	beq.n	8002b04 <_dtoa_r+0x964>
 8002af8:	45b0      	cmp	r8, r6
 8002afa:	d003      	beq.n	8002b04 <_dtoa_r+0x964>
 8002afc:	4641      	mov	r1, r8
 8002afe:	4628      	mov	r0, r5
 8002b00:	f000 fa6c 	bl	8002fdc <_Bfree>
 8002b04:	4631      	mov	r1, r6
 8002b06:	4628      	mov	r0, r5
 8002b08:	f000 fa68 	bl	8002fdc <_Bfree>
 8002b0c:	e69e      	b.n	800284c <_dtoa_r+0x6ac>
 8002b0e:	2400      	movs	r4, #0
 8002b10:	4626      	mov	r6, r4
 8002b12:	e7e1      	b.n	8002ad8 <_dtoa_r+0x938>
 8002b14:	46c3      	mov	fp, r8
 8002b16:	4626      	mov	r6, r4
 8002b18:	e59d      	b.n	8002656 <_dtoa_r+0x4b6>
 8002b1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002b1c:	2b00      	cmp	r3, #0
 8002b1e:	f000 80c8 	beq.w	8002cb2 <_dtoa_r+0xb12>
 8002b22:	9b08      	ldr	r3, [sp, #32]
 8002b24:	9306      	str	r3, [sp, #24]
 8002b26:	2f00      	cmp	r7, #0
 8002b28:	dd05      	ble.n	8002b36 <_dtoa_r+0x996>
 8002b2a:	4631      	mov	r1, r6
 8002b2c:	463a      	mov	r2, r7
 8002b2e:	4628      	mov	r0, r5
 8002b30:	f000 fc24 	bl	800337c <__lshift>
 8002b34:	4606      	mov	r6, r0
 8002b36:	f1b8 0f00 	cmp.w	r8, #0
 8002b3a:	d05b      	beq.n	8002bf4 <_dtoa_r+0xa54>
 8002b3c:	6871      	ldr	r1, [r6, #4]
 8002b3e:	4628      	mov	r0, r5
 8002b40:	f000 fa0c 	bl	8002f5c <_Balloc>
 8002b44:	4607      	mov	r7, r0
 8002b46:	b928      	cbnz	r0, 8002b54 <_dtoa_r+0x9b4>
 8002b48:	4b82      	ldr	r3, [pc, #520]	; (8002d54 <_dtoa_r+0xbb4>)
 8002b4a:	4602      	mov	r2, r0
 8002b4c:	f240 21ef 	movw	r1, #751	; 0x2ef
 8002b50:	f7ff bb3a 	b.w	80021c8 <_dtoa_r+0x28>
 8002b54:	6932      	ldr	r2, [r6, #16]
 8002b56:	3202      	adds	r2, #2
 8002b58:	0092      	lsls	r2, r2, #2
 8002b5a:	f106 010c 	add.w	r1, r6, #12
 8002b5e:	300c      	adds	r0, #12
 8002b60:	f000 fe2c 	bl	80037bc <memcpy>
 8002b64:	2201      	movs	r2, #1
 8002b66:	4639      	mov	r1, r7
 8002b68:	4628      	mov	r0, r5
 8002b6a:	f000 fc07 	bl	800337c <__lshift>
 8002b6e:	9b03      	ldr	r3, [sp, #12]
 8002b70:	9a03      	ldr	r2, [sp, #12]
 8002b72:	3301      	adds	r3, #1
 8002b74:	9308      	str	r3, [sp, #32]
 8002b76:	9b06      	ldr	r3, [sp, #24]
 8002b78:	4413      	add	r3, r2
 8002b7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b7c:	9b04      	ldr	r3, [sp, #16]
 8002b7e:	f003 0301 	and.w	r3, r3, #1
 8002b82:	46b0      	mov	r8, r6
 8002b84:	930a      	str	r3, [sp, #40]	; 0x28
 8002b86:	4606      	mov	r6, r0
 8002b88:	9b08      	ldr	r3, [sp, #32]
 8002b8a:	4621      	mov	r1, r4
 8002b8c:	3b01      	subs	r3, #1
 8002b8e:	4650      	mov	r0, sl
 8002b90:	9304      	str	r3, [sp, #16]
 8002b92:	f7ff fa80 	bl	8002096 <quorem>
 8002b96:	4641      	mov	r1, r8
 8002b98:	9006      	str	r0, [sp, #24]
 8002b9a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002b9e:	4650      	mov	r0, sl
 8002ba0:	f000 fc58 	bl	8003454 <__mcmp>
 8002ba4:	4632      	mov	r2, r6
 8002ba6:	9009      	str	r0, [sp, #36]	; 0x24
 8002ba8:	4621      	mov	r1, r4
 8002baa:	4628      	mov	r0, r5
 8002bac:	f000 fc6e 	bl	800348c <__mdiff>
 8002bb0:	68c2      	ldr	r2, [r0, #12]
 8002bb2:	4607      	mov	r7, r0
 8002bb4:	bb02      	cbnz	r2, 8002bf8 <_dtoa_r+0xa58>
 8002bb6:	4601      	mov	r1, r0
 8002bb8:	4650      	mov	r0, sl
 8002bba:	f000 fc4b 	bl	8003454 <__mcmp>
 8002bbe:	4602      	mov	r2, r0
 8002bc0:	4639      	mov	r1, r7
 8002bc2:	4628      	mov	r0, r5
 8002bc4:	920c      	str	r2, [sp, #48]	; 0x30
 8002bc6:	f000 fa09 	bl	8002fdc <_Bfree>
 8002bca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002bcc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002bce:	9f08      	ldr	r7, [sp, #32]
 8002bd0:	ea43 0102 	orr.w	r1, r3, r2
 8002bd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002bd6:	4319      	orrs	r1, r3
 8002bd8:	d110      	bne.n	8002bfc <_dtoa_r+0xa5c>
 8002bda:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002bde:	d029      	beq.n	8002c34 <_dtoa_r+0xa94>
 8002be0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	dd02      	ble.n	8002bec <_dtoa_r+0xa4c>
 8002be6:	9b06      	ldr	r3, [sp, #24]
 8002be8:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002bec:	9b04      	ldr	r3, [sp, #16]
 8002bee:	f883 9000 	strb.w	r9, [r3]
 8002bf2:	e777      	b.n	8002ae4 <_dtoa_r+0x944>
 8002bf4:	4630      	mov	r0, r6
 8002bf6:	e7ba      	b.n	8002b6e <_dtoa_r+0x9ce>
 8002bf8:	2201      	movs	r2, #1
 8002bfa:	e7e1      	b.n	8002bc0 <_dtoa_r+0xa20>
 8002bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	db04      	blt.n	8002c0c <_dtoa_r+0xa6c>
 8002c02:	9922      	ldr	r1, [sp, #136]	; 0x88
 8002c04:	430b      	orrs	r3, r1
 8002c06:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002c08:	430b      	orrs	r3, r1
 8002c0a:	d120      	bne.n	8002c4e <_dtoa_r+0xaae>
 8002c0c:	2a00      	cmp	r2, #0
 8002c0e:	dded      	ble.n	8002bec <_dtoa_r+0xa4c>
 8002c10:	4651      	mov	r1, sl
 8002c12:	2201      	movs	r2, #1
 8002c14:	4628      	mov	r0, r5
 8002c16:	f000 fbb1 	bl	800337c <__lshift>
 8002c1a:	4621      	mov	r1, r4
 8002c1c:	4682      	mov	sl, r0
 8002c1e:	f000 fc19 	bl	8003454 <__mcmp>
 8002c22:	2800      	cmp	r0, #0
 8002c24:	dc03      	bgt.n	8002c2e <_dtoa_r+0xa8e>
 8002c26:	d1e1      	bne.n	8002bec <_dtoa_r+0xa4c>
 8002c28:	f019 0f01 	tst.w	r9, #1
 8002c2c:	d0de      	beq.n	8002bec <_dtoa_r+0xa4c>
 8002c2e:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002c32:	d1d8      	bne.n	8002be6 <_dtoa_r+0xa46>
 8002c34:	9a04      	ldr	r2, [sp, #16]
 8002c36:	2339      	movs	r3, #57	; 0x39
 8002c38:	7013      	strb	r3, [r2, #0]
 8002c3a:	463b      	mov	r3, r7
 8002c3c:	461f      	mov	r7, r3
 8002c3e:	3b01      	subs	r3, #1
 8002c40:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8002c44:	2a39      	cmp	r2, #57	; 0x39
 8002c46:	d06c      	beq.n	8002d22 <_dtoa_r+0xb82>
 8002c48:	3201      	adds	r2, #1
 8002c4a:	701a      	strb	r2, [r3, #0]
 8002c4c:	e74a      	b.n	8002ae4 <_dtoa_r+0x944>
 8002c4e:	2a00      	cmp	r2, #0
 8002c50:	dd07      	ble.n	8002c62 <_dtoa_r+0xac2>
 8002c52:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002c56:	d0ed      	beq.n	8002c34 <_dtoa_r+0xa94>
 8002c58:	9a04      	ldr	r2, [sp, #16]
 8002c5a:	f109 0301 	add.w	r3, r9, #1
 8002c5e:	7013      	strb	r3, [r2, #0]
 8002c60:	e740      	b.n	8002ae4 <_dtoa_r+0x944>
 8002c62:	9b08      	ldr	r3, [sp, #32]
 8002c64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002c66:	f803 9c01 	strb.w	r9, [r3, #-1]
 8002c6a:	4293      	cmp	r3, r2
 8002c6c:	d043      	beq.n	8002cf6 <_dtoa_r+0xb56>
 8002c6e:	4651      	mov	r1, sl
 8002c70:	2300      	movs	r3, #0
 8002c72:	220a      	movs	r2, #10
 8002c74:	4628      	mov	r0, r5
 8002c76:	f000 f9d3 	bl	8003020 <__multadd>
 8002c7a:	45b0      	cmp	r8, r6
 8002c7c:	4682      	mov	sl, r0
 8002c7e:	f04f 0300 	mov.w	r3, #0
 8002c82:	f04f 020a 	mov.w	r2, #10
 8002c86:	4641      	mov	r1, r8
 8002c88:	4628      	mov	r0, r5
 8002c8a:	d107      	bne.n	8002c9c <_dtoa_r+0xafc>
 8002c8c:	f000 f9c8 	bl	8003020 <__multadd>
 8002c90:	4680      	mov	r8, r0
 8002c92:	4606      	mov	r6, r0
 8002c94:	9b08      	ldr	r3, [sp, #32]
 8002c96:	3301      	adds	r3, #1
 8002c98:	9308      	str	r3, [sp, #32]
 8002c9a:	e775      	b.n	8002b88 <_dtoa_r+0x9e8>
 8002c9c:	f000 f9c0 	bl	8003020 <__multadd>
 8002ca0:	4631      	mov	r1, r6
 8002ca2:	4680      	mov	r8, r0
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	220a      	movs	r2, #10
 8002ca8:	4628      	mov	r0, r5
 8002caa:	f000 f9b9 	bl	8003020 <__multadd>
 8002cae:	4606      	mov	r6, r0
 8002cb0:	e7f0      	b.n	8002c94 <_dtoa_r+0xaf4>
 8002cb2:	9b08      	ldr	r3, [sp, #32]
 8002cb4:	9306      	str	r3, [sp, #24]
 8002cb6:	9f03      	ldr	r7, [sp, #12]
 8002cb8:	4621      	mov	r1, r4
 8002cba:	4650      	mov	r0, sl
 8002cbc:	f7ff f9eb 	bl	8002096 <quorem>
 8002cc0:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002cc4:	9b03      	ldr	r3, [sp, #12]
 8002cc6:	f807 9b01 	strb.w	r9, [r7], #1
 8002cca:	1afa      	subs	r2, r7, r3
 8002ccc:	9b06      	ldr	r3, [sp, #24]
 8002cce:	4293      	cmp	r3, r2
 8002cd0:	dd07      	ble.n	8002ce2 <_dtoa_r+0xb42>
 8002cd2:	4651      	mov	r1, sl
 8002cd4:	2300      	movs	r3, #0
 8002cd6:	220a      	movs	r2, #10
 8002cd8:	4628      	mov	r0, r5
 8002cda:	f000 f9a1 	bl	8003020 <__multadd>
 8002cde:	4682      	mov	sl, r0
 8002ce0:	e7ea      	b.n	8002cb8 <_dtoa_r+0xb18>
 8002ce2:	9b06      	ldr	r3, [sp, #24]
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	bfc8      	it	gt
 8002ce8:	461f      	movgt	r7, r3
 8002cea:	9b03      	ldr	r3, [sp, #12]
 8002cec:	bfd8      	it	le
 8002cee:	2701      	movle	r7, #1
 8002cf0:	441f      	add	r7, r3
 8002cf2:	f04f 0800 	mov.w	r8, #0
 8002cf6:	4651      	mov	r1, sl
 8002cf8:	2201      	movs	r2, #1
 8002cfa:	4628      	mov	r0, r5
 8002cfc:	f000 fb3e 	bl	800337c <__lshift>
 8002d00:	4621      	mov	r1, r4
 8002d02:	4682      	mov	sl, r0
 8002d04:	f000 fba6 	bl	8003454 <__mcmp>
 8002d08:	2800      	cmp	r0, #0
 8002d0a:	dc96      	bgt.n	8002c3a <_dtoa_r+0xa9a>
 8002d0c:	d102      	bne.n	8002d14 <_dtoa_r+0xb74>
 8002d0e:	f019 0f01 	tst.w	r9, #1
 8002d12:	d192      	bne.n	8002c3a <_dtoa_r+0xa9a>
 8002d14:	463b      	mov	r3, r7
 8002d16:	461f      	mov	r7, r3
 8002d18:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d1c:	2a30      	cmp	r2, #48	; 0x30
 8002d1e:	d0fa      	beq.n	8002d16 <_dtoa_r+0xb76>
 8002d20:	e6e0      	b.n	8002ae4 <_dtoa_r+0x944>
 8002d22:	9a03      	ldr	r2, [sp, #12]
 8002d24:	429a      	cmp	r2, r3
 8002d26:	d189      	bne.n	8002c3c <_dtoa_r+0xa9c>
 8002d28:	f10b 0b01 	add.w	fp, fp, #1
 8002d2c:	2331      	movs	r3, #49	; 0x31
 8002d2e:	e796      	b.n	8002c5e <_dtoa_r+0xabe>
 8002d30:	4b09      	ldr	r3, [pc, #36]	; (8002d58 <_dtoa_r+0xbb8>)
 8002d32:	f7ff baa1 	b.w	8002278 <_dtoa_r+0xd8>
 8002d36:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	f47f aa79 	bne.w	8002230 <_dtoa_r+0x90>
 8002d3e:	4b07      	ldr	r3, [pc, #28]	; (8002d5c <_dtoa_r+0xbbc>)
 8002d40:	f7ff ba9a 	b.w	8002278 <_dtoa_r+0xd8>
 8002d44:	9b06      	ldr	r3, [sp, #24]
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	dcb5      	bgt.n	8002cb6 <_dtoa_r+0xb16>
 8002d4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002d4c:	2b02      	cmp	r3, #2
 8002d4e:	f73f aeb4 	bgt.w	8002aba <_dtoa_r+0x91a>
 8002d52:	e7b0      	b.n	8002cb6 <_dtoa_r+0xb16>
 8002d54:	08003ec0 	.word	0x08003ec0
 8002d58:	08003e20 	.word	0x08003e20
 8002d5c:	08003e44 	.word	0x08003e44

08002d60 <_free_r>:
 8002d60:	b538      	push	{r3, r4, r5, lr}
 8002d62:	4605      	mov	r5, r0
 8002d64:	2900      	cmp	r1, #0
 8002d66:	d041      	beq.n	8002dec <_free_r+0x8c>
 8002d68:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002d6c:	1f0c      	subs	r4, r1, #4
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	bfb8      	it	lt
 8002d72:	18e4      	addlt	r4, r4, r3
 8002d74:	f000 f8e6 	bl	8002f44 <__malloc_lock>
 8002d78:	4a1d      	ldr	r2, [pc, #116]	; (8002df0 <_free_r+0x90>)
 8002d7a:	6813      	ldr	r3, [r2, #0]
 8002d7c:	b933      	cbnz	r3, 8002d8c <_free_r+0x2c>
 8002d7e:	6063      	str	r3, [r4, #4]
 8002d80:	6014      	str	r4, [r2, #0]
 8002d82:	4628      	mov	r0, r5
 8002d84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002d88:	f000 b8e2 	b.w	8002f50 <__malloc_unlock>
 8002d8c:	42a3      	cmp	r3, r4
 8002d8e:	d908      	bls.n	8002da2 <_free_r+0x42>
 8002d90:	6820      	ldr	r0, [r4, #0]
 8002d92:	1821      	adds	r1, r4, r0
 8002d94:	428b      	cmp	r3, r1
 8002d96:	bf01      	itttt	eq
 8002d98:	6819      	ldreq	r1, [r3, #0]
 8002d9a:	685b      	ldreq	r3, [r3, #4]
 8002d9c:	1809      	addeq	r1, r1, r0
 8002d9e:	6021      	streq	r1, [r4, #0]
 8002da0:	e7ed      	b.n	8002d7e <_free_r+0x1e>
 8002da2:	461a      	mov	r2, r3
 8002da4:	685b      	ldr	r3, [r3, #4]
 8002da6:	b10b      	cbz	r3, 8002dac <_free_r+0x4c>
 8002da8:	42a3      	cmp	r3, r4
 8002daa:	d9fa      	bls.n	8002da2 <_free_r+0x42>
 8002dac:	6811      	ldr	r1, [r2, #0]
 8002dae:	1850      	adds	r0, r2, r1
 8002db0:	42a0      	cmp	r0, r4
 8002db2:	d10b      	bne.n	8002dcc <_free_r+0x6c>
 8002db4:	6820      	ldr	r0, [r4, #0]
 8002db6:	4401      	add	r1, r0
 8002db8:	1850      	adds	r0, r2, r1
 8002dba:	4283      	cmp	r3, r0
 8002dbc:	6011      	str	r1, [r2, #0]
 8002dbe:	d1e0      	bne.n	8002d82 <_free_r+0x22>
 8002dc0:	6818      	ldr	r0, [r3, #0]
 8002dc2:	685b      	ldr	r3, [r3, #4]
 8002dc4:	6053      	str	r3, [r2, #4]
 8002dc6:	4408      	add	r0, r1
 8002dc8:	6010      	str	r0, [r2, #0]
 8002dca:	e7da      	b.n	8002d82 <_free_r+0x22>
 8002dcc:	d902      	bls.n	8002dd4 <_free_r+0x74>
 8002dce:	230c      	movs	r3, #12
 8002dd0:	602b      	str	r3, [r5, #0]
 8002dd2:	e7d6      	b.n	8002d82 <_free_r+0x22>
 8002dd4:	6820      	ldr	r0, [r4, #0]
 8002dd6:	1821      	adds	r1, r4, r0
 8002dd8:	428b      	cmp	r3, r1
 8002dda:	bf04      	itt	eq
 8002ddc:	6819      	ldreq	r1, [r3, #0]
 8002dde:	685b      	ldreq	r3, [r3, #4]
 8002de0:	6063      	str	r3, [r4, #4]
 8002de2:	bf04      	itt	eq
 8002de4:	1809      	addeq	r1, r1, r0
 8002de6:	6021      	streq	r1, [r4, #0]
 8002de8:	6054      	str	r4, [r2, #4]
 8002dea:	e7ca      	b.n	8002d82 <_free_r+0x22>
 8002dec:	bd38      	pop	{r3, r4, r5, pc}
 8002dee:	bf00      	nop
 8002df0:	2000032c 	.word	0x2000032c

08002df4 <malloc>:
 8002df4:	4b02      	ldr	r3, [pc, #8]	; (8002e00 <malloc+0xc>)
 8002df6:	4601      	mov	r1, r0
 8002df8:	6818      	ldr	r0, [r3, #0]
 8002dfa:	f000 b823 	b.w	8002e44 <_malloc_r>
 8002dfe:	bf00      	nop
 8002e00:	20000058 	.word	0x20000058

08002e04 <sbrk_aligned>:
 8002e04:	b570      	push	{r4, r5, r6, lr}
 8002e06:	4e0e      	ldr	r6, [pc, #56]	; (8002e40 <sbrk_aligned+0x3c>)
 8002e08:	460c      	mov	r4, r1
 8002e0a:	6831      	ldr	r1, [r6, #0]
 8002e0c:	4605      	mov	r5, r0
 8002e0e:	b911      	cbnz	r1, 8002e16 <sbrk_aligned+0x12>
 8002e10:	f000 fcc4 	bl	800379c <_sbrk_r>
 8002e14:	6030      	str	r0, [r6, #0]
 8002e16:	4621      	mov	r1, r4
 8002e18:	4628      	mov	r0, r5
 8002e1a:	f000 fcbf 	bl	800379c <_sbrk_r>
 8002e1e:	1c43      	adds	r3, r0, #1
 8002e20:	d00a      	beq.n	8002e38 <sbrk_aligned+0x34>
 8002e22:	1cc4      	adds	r4, r0, #3
 8002e24:	f024 0403 	bic.w	r4, r4, #3
 8002e28:	42a0      	cmp	r0, r4
 8002e2a:	d007      	beq.n	8002e3c <sbrk_aligned+0x38>
 8002e2c:	1a21      	subs	r1, r4, r0
 8002e2e:	4628      	mov	r0, r5
 8002e30:	f000 fcb4 	bl	800379c <_sbrk_r>
 8002e34:	3001      	adds	r0, #1
 8002e36:	d101      	bne.n	8002e3c <sbrk_aligned+0x38>
 8002e38:	f04f 34ff 	mov.w	r4, #4294967295
 8002e3c:	4620      	mov	r0, r4
 8002e3e:	bd70      	pop	{r4, r5, r6, pc}
 8002e40:	20000330 	.word	0x20000330

08002e44 <_malloc_r>:
 8002e44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002e48:	1ccd      	adds	r5, r1, #3
 8002e4a:	f025 0503 	bic.w	r5, r5, #3
 8002e4e:	3508      	adds	r5, #8
 8002e50:	2d0c      	cmp	r5, #12
 8002e52:	bf38      	it	cc
 8002e54:	250c      	movcc	r5, #12
 8002e56:	2d00      	cmp	r5, #0
 8002e58:	4607      	mov	r7, r0
 8002e5a:	db01      	blt.n	8002e60 <_malloc_r+0x1c>
 8002e5c:	42a9      	cmp	r1, r5
 8002e5e:	d905      	bls.n	8002e6c <_malloc_r+0x28>
 8002e60:	230c      	movs	r3, #12
 8002e62:	603b      	str	r3, [r7, #0]
 8002e64:	2600      	movs	r6, #0
 8002e66:	4630      	mov	r0, r6
 8002e68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002e6c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8002f40 <_malloc_r+0xfc>
 8002e70:	f000 f868 	bl	8002f44 <__malloc_lock>
 8002e74:	f8d8 3000 	ldr.w	r3, [r8]
 8002e78:	461c      	mov	r4, r3
 8002e7a:	bb5c      	cbnz	r4, 8002ed4 <_malloc_r+0x90>
 8002e7c:	4629      	mov	r1, r5
 8002e7e:	4638      	mov	r0, r7
 8002e80:	f7ff ffc0 	bl	8002e04 <sbrk_aligned>
 8002e84:	1c43      	adds	r3, r0, #1
 8002e86:	4604      	mov	r4, r0
 8002e88:	d155      	bne.n	8002f36 <_malloc_r+0xf2>
 8002e8a:	f8d8 4000 	ldr.w	r4, [r8]
 8002e8e:	4626      	mov	r6, r4
 8002e90:	2e00      	cmp	r6, #0
 8002e92:	d145      	bne.n	8002f20 <_malloc_r+0xdc>
 8002e94:	2c00      	cmp	r4, #0
 8002e96:	d048      	beq.n	8002f2a <_malloc_r+0xe6>
 8002e98:	6823      	ldr	r3, [r4, #0]
 8002e9a:	4631      	mov	r1, r6
 8002e9c:	4638      	mov	r0, r7
 8002e9e:	eb04 0903 	add.w	r9, r4, r3
 8002ea2:	f000 fc7b 	bl	800379c <_sbrk_r>
 8002ea6:	4581      	cmp	r9, r0
 8002ea8:	d13f      	bne.n	8002f2a <_malloc_r+0xe6>
 8002eaa:	6821      	ldr	r1, [r4, #0]
 8002eac:	1a6d      	subs	r5, r5, r1
 8002eae:	4629      	mov	r1, r5
 8002eb0:	4638      	mov	r0, r7
 8002eb2:	f7ff ffa7 	bl	8002e04 <sbrk_aligned>
 8002eb6:	3001      	adds	r0, #1
 8002eb8:	d037      	beq.n	8002f2a <_malloc_r+0xe6>
 8002eba:	6823      	ldr	r3, [r4, #0]
 8002ebc:	442b      	add	r3, r5
 8002ebe:	6023      	str	r3, [r4, #0]
 8002ec0:	f8d8 3000 	ldr.w	r3, [r8]
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d038      	beq.n	8002f3a <_malloc_r+0xf6>
 8002ec8:	685a      	ldr	r2, [r3, #4]
 8002eca:	42a2      	cmp	r2, r4
 8002ecc:	d12b      	bne.n	8002f26 <_malloc_r+0xe2>
 8002ece:	2200      	movs	r2, #0
 8002ed0:	605a      	str	r2, [r3, #4]
 8002ed2:	e00f      	b.n	8002ef4 <_malloc_r+0xb0>
 8002ed4:	6822      	ldr	r2, [r4, #0]
 8002ed6:	1b52      	subs	r2, r2, r5
 8002ed8:	d41f      	bmi.n	8002f1a <_malloc_r+0xd6>
 8002eda:	2a0b      	cmp	r2, #11
 8002edc:	d917      	bls.n	8002f0e <_malloc_r+0xca>
 8002ede:	1961      	adds	r1, r4, r5
 8002ee0:	42a3      	cmp	r3, r4
 8002ee2:	6025      	str	r5, [r4, #0]
 8002ee4:	bf18      	it	ne
 8002ee6:	6059      	strne	r1, [r3, #4]
 8002ee8:	6863      	ldr	r3, [r4, #4]
 8002eea:	bf08      	it	eq
 8002eec:	f8c8 1000 	streq.w	r1, [r8]
 8002ef0:	5162      	str	r2, [r4, r5]
 8002ef2:	604b      	str	r3, [r1, #4]
 8002ef4:	4638      	mov	r0, r7
 8002ef6:	f104 060b 	add.w	r6, r4, #11
 8002efa:	f000 f829 	bl	8002f50 <__malloc_unlock>
 8002efe:	f026 0607 	bic.w	r6, r6, #7
 8002f02:	1d23      	adds	r3, r4, #4
 8002f04:	1af2      	subs	r2, r6, r3
 8002f06:	d0ae      	beq.n	8002e66 <_malloc_r+0x22>
 8002f08:	1b9b      	subs	r3, r3, r6
 8002f0a:	50a3      	str	r3, [r4, r2]
 8002f0c:	e7ab      	b.n	8002e66 <_malloc_r+0x22>
 8002f0e:	42a3      	cmp	r3, r4
 8002f10:	6862      	ldr	r2, [r4, #4]
 8002f12:	d1dd      	bne.n	8002ed0 <_malloc_r+0x8c>
 8002f14:	f8c8 2000 	str.w	r2, [r8]
 8002f18:	e7ec      	b.n	8002ef4 <_malloc_r+0xb0>
 8002f1a:	4623      	mov	r3, r4
 8002f1c:	6864      	ldr	r4, [r4, #4]
 8002f1e:	e7ac      	b.n	8002e7a <_malloc_r+0x36>
 8002f20:	4634      	mov	r4, r6
 8002f22:	6876      	ldr	r6, [r6, #4]
 8002f24:	e7b4      	b.n	8002e90 <_malloc_r+0x4c>
 8002f26:	4613      	mov	r3, r2
 8002f28:	e7cc      	b.n	8002ec4 <_malloc_r+0x80>
 8002f2a:	230c      	movs	r3, #12
 8002f2c:	603b      	str	r3, [r7, #0]
 8002f2e:	4638      	mov	r0, r7
 8002f30:	f000 f80e 	bl	8002f50 <__malloc_unlock>
 8002f34:	e797      	b.n	8002e66 <_malloc_r+0x22>
 8002f36:	6025      	str	r5, [r4, #0]
 8002f38:	e7dc      	b.n	8002ef4 <_malloc_r+0xb0>
 8002f3a:	605b      	str	r3, [r3, #4]
 8002f3c:	deff      	udf	#255	; 0xff
 8002f3e:	bf00      	nop
 8002f40:	2000032c 	.word	0x2000032c

08002f44 <__malloc_lock>:
 8002f44:	4801      	ldr	r0, [pc, #4]	; (8002f4c <__malloc_lock+0x8>)
 8002f46:	f7ff b8a4 	b.w	8002092 <__retarget_lock_acquire_recursive>
 8002f4a:	bf00      	nop
 8002f4c:	20000328 	.word	0x20000328

08002f50 <__malloc_unlock>:
 8002f50:	4801      	ldr	r0, [pc, #4]	; (8002f58 <__malloc_unlock+0x8>)
 8002f52:	f7ff b89f 	b.w	8002094 <__retarget_lock_release_recursive>
 8002f56:	bf00      	nop
 8002f58:	20000328 	.word	0x20000328

08002f5c <_Balloc>:
 8002f5c:	b570      	push	{r4, r5, r6, lr}
 8002f5e:	69c6      	ldr	r6, [r0, #28]
 8002f60:	4604      	mov	r4, r0
 8002f62:	460d      	mov	r5, r1
 8002f64:	b976      	cbnz	r6, 8002f84 <_Balloc+0x28>
 8002f66:	2010      	movs	r0, #16
 8002f68:	f7ff ff44 	bl	8002df4 <malloc>
 8002f6c:	4602      	mov	r2, r0
 8002f6e:	61e0      	str	r0, [r4, #28]
 8002f70:	b920      	cbnz	r0, 8002f7c <_Balloc+0x20>
 8002f72:	4b18      	ldr	r3, [pc, #96]	; (8002fd4 <_Balloc+0x78>)
 8002f74:	4818      	ldr	r0, [pc, #96]	; (8002fd8 <_Balloc+0x7c>)
 8002f76:	216b      	movs	r1, #107	; 0x6b
 8002f78:	f000 fc2e 	bl	80037d8 <__assert_func>
 8002f7c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002f80:	6006      	str	r6, [r0, #0]
 8002f82:	60c6      	str	r6, [r0, #12]
 8002f84:	69e6      	ldr	r6, [r4, #28]
 8002f86:	68f3      	ldr	r3, [r6, #12]
 8002f88:	b183      	cbz	r3, 8002fac <_Balloc+0x50>
 8002f8a:	69e3      	ldr	r3, [r4, #28]
 8002f8c:	68db      	ldr	r3, [r3, #12]
 8002f8e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002f92:	b9b8      	cbnz	r0, 8002fc4 <_Balloc+0x68>
 8002f94:	2101      	movs	r1, #1
 8002f96:	fa01 f605 	lsl.w	r6, r1, r5
 8002f9a:	1d72      	adds	r2, r6, #5
 8002f9c:	0092      	lsls	r2, r2, #2
 8002f9e:	4620      	mov	r0, r4
 8002fa0:	f000 fc38 	bl	8003814 <_calloc_r>
 8002fa4:	b160      	cbz	r0, 8002fc0 <_Balloc+0x64>
 8002fa6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8002faa:	e00e      	b.n	8002fca <_Balloc+0x6e>
 8002fac:	2221      	movs	r2, #33	; 0x21
 8002fae:	2104      	movs	r1, #4
 8002fb0:	4620      	mov	r0, r4
 8002fb2:	f000 fc2f 	bl	8003814 <_calloc_r>
 8002fb6:	69e3      	ldr	r3, [r4, #28]
 8002fb8:	60f0      	str	r0, [r6, #12]
 8002fba:	68db      	ldr	r3, [r3, #12]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	d1e4      	bne.n	8002f8a <_Balloc+0x2e>
 8002fc0:	2000      	movs	r0, #0
 8002fc2:	bd70      	pop	{r4, r5, r6, pc}
 8002fc4:	6802      	ldr	r2, [r0, #0]
 8002fc6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002fca:	2300      	movs	r3, #0
 8002fcc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002fd0:	e7f7      	b.n	8002fc2 <_Balloc+0x66>
 8002fd2:	bf00      	nop
 8002fd4:	08003e51 	.word	0x08003e51
 8002fd8:	08003ed1 	.word	0x08003ed1

08002fdc <_Bfree>:
 8002fdc:	b570      	push	{r4, r5, r6, lr}
 8002fde:	69c6      	ldr	r6, [r0, #28]
 8002fe0:	4605      	mov	r5, r0
 8002fe2:	460c      	mov	r4, r1
 8002fe4:	b976      	cbnz	r6, 8003004 <_Bfree+0x28>
 8002fe6:	2010      	movs	r0, #16
 8002fe8:	f7ff ff04 	bl	8002df4 <malloc>
 8002fec:	4602      	mov	r2, r0
 8002fee:	61e8      	str	r0, [r5, #28]
 8002ff0:	b920      	cbnz	r0, 8002ffc <_Bfree+0x20>
 8002ff2:	4b09      	ldr	r3, [pc, #36]	; (8003018 <_Bfree+0x3c>)
 8002ff4:	4809      	ldr	r0, [pc, #36]	; (800301c <_Bfree+0x40>)
 8002ff6:	218f      	movs	r1, #143	; 0x8f
 8002ff8:	f000 fbee 	bl	80037d8 <__assert_func>
 8002ffc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003000:	6006      	str	r6, [r0, #0]
 8003002:	60c6      	str	r6, [r0, #12]
 8003004:	b13c      	cbz	r4, 8003016 <_Bfree+0x3a>
 8003006:	69eb      	ldr	r3, [r5, #28]
 8003008:	6862      	ldr	r2, [r4, #4]
 800300a:	68db      	ldr	r3, [r3, #12]
 800300c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003010:	6021      	str	r1, [r4, #0]
 8003012:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003016:	bd70      	pop	{r4, r5, r6, pc}
 8003018:	08003e51 	.word	0x08003e51
 800301c:	08003ed1 	.word	0x08003ed1

08003020 <__multadd>:
 8003020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003024:	690d      	ldr	r5, [r1, #16]
 8003026:	4607      	mov	r7, r0
 8003028:	460c      	mov	r4, r1
 800302a:	461e      	mov	r6, r3
 800302c:	f101 0c14 	add.w	ip, r1, #20
 8003030:	2000      	movs	r0, #0
 8003032:	f8dc 3000 	ldr.w	r3, [ip]
 8003036:	b299      	uxth	r1, r3
 8003038:	fb02 6101 	mla	r1, r2, r1, r6
 800303c:	0c1e      	lsrs	r6, r3, #16
 800303e:	0c0b      	lsrs	r3, r1, #16
 8003040:	fb02 3306 	mla	r3, r2, r6, r3
 8003044:	b289      	uxth	r1, r1
 8003046:	3001      	adds	r0, #1
 8003048:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800304c:	4285      	cmp	r5, r0
 800304e:	f84c 1b04 	str.w	r1, [ip], #4
 8003052:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003056:	dcec      	bgt.n	8003032 <__multadd+0x12>
 8003058:	b30e      	cbz	r6, 800309e <__multadd+0x7e>
 800305a:	68a3      	ldr	r3, [r4, #8]
 800305c:	42ab      	cmp	r3, r5
 800305e:	dc19      	bgt.n	8003094 <__multadd+0x74>
 8003060:	6861      	ldr	r1, [r4, #4]
 8003062:	4638      	mov	r0, r7
 8003064:	3101      	adds	r1, #1
 8003066:	f7ff ff79 	bl	8002f5c <_Balloc>
 800306a:	4680      	mov	r8, r0
 800306c:	b928      	cbnz	r0, 800307a <__multadd+0x5a>
 800306e:	4602      	mov	r2, r0
 8003070:	4b0c      	ldr	r3, [pc, #48]	; (80030a4 <__multadd+0x84>)
 8003072:	480d      	ldr	r0, [pc, #52]	; (80030a8 <__multadd+0x88>)
 8003074:	21ba      	movs	r1, #186	; 0xba
 8003076:	f000 fbaf 	bl	80037d8 <__assert_func>
 800307a:	6922      	ldr	r2, [r4, #16]
 800307c:	3202      	adds	r2, #2
 800307e:	f104 010c 	add.w	r1, r4, #12
 8003082:	0092      	lsls	r2, r2, #2
 8003084:	300c      	adds	r0, #12
 8003086:	f000 fb99 	bl	80037bc <memcpy>
 800308a:	4621      	mov	r1, r4
 800308c:	4638      	mov	r0, r7
 800308e:	f7ff ffa5 	bl	8002fdc <_Bfree>
 8003092:	4644      	mov	r4, r8
 8003094:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003098:	3501      	adds	r5, #1
 800309a:	615e      	str	r6, [r3, #20]
 800309c:	6125      	str	r5, [r4, #16]
 800309e:	4620      	mov	r0, r4
 80030a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80030a4:	08003ec0 	.word	0x08003ec0
 80030a8:	08003ed1 	.word	0x08003ed1

080030ac <__hi0bits>:
 80030ac:	0c02      	lsrs	r2, r0, #16
 80030ae:	0412      	lsls	r2, r2, #16
 80030b0:	4603      	mov	r3, r0
 80030b2:	b9ca      	cbnz	r2, 80030e8 <__hi0bits+0x3c>
 80030b4:	0403      	lsls	r3, r0, #16
 80030b6:	2010      	movs	r0, #16
 80030b8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80030bc:	bf04      	itt	eq
 80030be:	021b      	lsleq	r3, r3, #8
 80030c0:	3008      	addeq	r0, #8
 80030c2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80030c6:	bf04      	itt	eq
 80030c8:	011b      	lsleq	r3, r3, #4
 80030ca:	3004      	addeq	r0, #4
 80030cc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80030d0:	bf04      	itt	eq
 80030d2:	009b      	lsleq	r3, r3, #2
 80030d4:	3002      	addeq	r0, #2
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	db05      	blt.n	80030e6 <__hi0bits+0x3a>
 80030da:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80030de:	f100 0001 	add.w	r0, r0, #1
 80030e2:	bf08      	it	eq
 80030e4:	2020      	moveq	r0, #32
 80030e6:	4770      	bx	lr
 80030e8:	2000      	movs	r0, #0
 80030ea:	e7e5      	b.n	80030b8 <__hi0bits+0xc>

080030ec <__lo0bits>:
 80030ec:	6803      	ldr	r3, [r0, #0]
 80030ee:	4602      	mov	r2, r0
 80030f0:	f013 0007 	ands.w	r0, r3, #7
 80030f4:	d00b      	beq.n	800310e <__lo0bits+0x22>
 80030f6:	07d9      	lsls	r1, r3, #31
 80030f8:	d421      	bmi.n	800313e <__lo0bits+0x52>
 80030fa:	0798      	lsls	r0, r3, #30
 80030fc:	bf49      	itett	mi
 80030fe:	085b      	lsrmi	r3, r3, #1
 8003100:	089b      	lsrpl	r3, r3, #2
 8003102:	2001      	movmi	r0, #1
 8003104:	6013      	strmi	r3, [r2, #0]
 8003106:	bf5c      	itt	pl
 8003108:	6013      	strpl	r3, [r2, #0]
 800310a:	2002      	movpl	r0, #2
 800310c:	4770      	bx	lr
 800310e:	b299      	uxth	r1, r3
 8003110:	b909      	cbnz	r1, 8003116 <__lo0bits+0x2a>
 8003112:	0c1b      	lsrs	r3, r3, #16
 8003114:	2010      	movs	r0, #16
 8003116:	b2d9      	uxtb	r1, r3
 8003118:	b909      	cbnz	r1, 800311e <__lo0bits+0x32>
 800311a:	3008      	adds	r0, #8
 800311c:	0a1b      	lsrs	r3, r3, #8
 800311e:	0719      	lsls	r1, r3, #28
 8003120:	bf04      	itt	eq
 8003122:	091b      	lsreq	r3, r3, #4
 8003124:	3004      	addeq	r0, #4
 8003126:	0799      	lsls	r1, r3, #30
 8003128:	bf04      	itt	eq
 800312a:	089b      	lsreq	r3, r3, #2
 800312c:	3002      	addeq	r0, #2
 800312e:	07d9      	lsls	r1, r3, #31
 8003130:	d403      	bmi.n	800313a <__lo0bits+0x4e>
 8003132:	085b      	lsrs	r3, r3, #1
 8003134:	f100 0001 	add.w	r0, r0, #1
 8003138:	d003      	beq.n	8003142 <__lo0bits+0x56>
 800313a:	6013      	str	r3, [r2, #0]
 800313c:	4770      	bx	lr
 800313e:	2000      	movs	r0, #0
 8003140:	4770      	bx	lr
 8003142:	2020      	movs	r0, #32
 8003144:	4770      	bx	lr
	...

08003148 <__i2b>:
 8003148:	b510      	push	{r4, lr}
 800314a:	460c      	mov	r4, r1
 800314c:	2101      	movs	r1, #1
 800314e:	f7ff ff05 	bl	8002f5c <_Balloc>
 8003152:	4602      	mov	r2, r0
 8003154:	b928      	cbnz	r0, 8003162 <__i2b+0x1a>
 8003156:	4b05      	ldr	r3, [pc, #20]	; (800316c <__i2b+0x24>)
 8003158:	4805      	ldr	r0, [pc, #20]	; (8003170 <__i2b+0x28>)
 800315a:	f240 1145 	movw	r1, #325	; 0x145
 800315e:	f000 fb3b 	bl	80037d8 <__assert_func>
 8003162:	2301      	movs	r3, #1
 8003164:	6144      	str	r4, [r0, #20]
 8003166:	6103      	str	r3, [r0, #16]
 8003168:	bd10      	pop	{r4, pc}
 800316a:	bf00      	nop
 800316c:	08003ec0 	.word	0x08003ec0
 8003170:	08003ed1 	.word	0x08003ed1

08003174 <__multiply>:
 8003174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003178:	4691      	mov	r9, r2
 800317a:	690a      	ldr	r2, [r1, #16]
 800317c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003180:	429a      	cmp	r2, r3
 8003182:	bfb8      	it	lt
 8003184:	460b      	movlt	r3, r1
 8003186:	460c      	mov	r4, r1
 8003188:	bfbc      	itt	lt
 800318a:	464c      	movlt	r4, r9
 800318c:	4699      	movlt	r9, r3
 800318e:	6927      	ldr	r7, [r4, #16]
 8003190:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003194:	68a3      	ldr	r3, [r4, #8]
 8003196:	6861      	ldr	r1, [r4, #4]
 8003198:	eb07 060a 	add.w	r6, r7, sl
 800319c:	42b3      	cmp	r3, r6
 800319e:	b085      	sub	sp, #20
 80031a0:	bfb8      	it	lt
 80031a2:	3101      	addlt	r1, #1
 80031a4:	f7ff feda 	bl	8002f5c <_Balloc>
 80031a8:	b930      	cbnz	r0, 80031b8 <__multiply+0x44>
 80031aa:	4602      	mov	r2, r0
 80031ac:	4b44      	ldr	r3, [pc, #272]	; (80032c0 <__multiply+0x14c>)
 80031ae:	4845      	ldr	r0, [pc, #276]	; (80032c4 <__multiply+0x150>)
 80031b0:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80031b4:	f000 fb10 	bl	80037d8 <__assert_func>
 80031b8:	f100 0514 	add.w	r5, r0, #20
 80031bc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80031c0:	462b      	mov	r3, r5
 80031c2:	2200      	movs	r2, #0
 80031c4:	4543      	cmp	r3, r8
 80031c6:	d321      	bcc.n	800320c <__multiply+0x98>
 80031c8:	f104 0314 	add.w	r3, r4, #20
 80031cc:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80031d0:	f109 0314 	add.w	r3, r9, #20
 80031d4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80031d8:	9202      	str	r2, [sp, #8]
 80031da:	1b3a      	subs	r2, r7, r4
 80031dc:	3a15      	subs	r2, #21
 80031de:	f022 0203 	bic.w	r2, r2, #3
 80031e2:	3204      	adds	r2, #4
 80031e4:	f104 0115 	add.w	r1, r4, #21
 80031e8:	428f      	cmp	r7, r1
 80031ea:	bf38      	it	cc
 80031ec:	2204      	movcc	r2, #4
 80031ee:	9201      	str	r2, [sp, #4]
 80031f0:	9a02      	ldr	r2, [sp, #8]
 80031f2:	9303      	str	r3, [sp, #12]
 80031f4:	429a      	cmp	r2, r3
 80031f6:	d80c      	bhi.n	8003212 <__multiply+0x9e>
 80031f8:	2e00      	cmp	r6, #0
 80031fa:	dd03      	ble.n	8003204 <__multiply+0x90>
 80031fc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003200:	2b00      	cmp	r3, #0
 8003202:	d05a      	beq.n	80032ba <__multiply+0x146>
 8003204:	6106      	str	r6, [r0, #16]
 8003206:	b005      	add	sp, #20
 8003208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800320c:	f843 2b04 	str.w	r2, [r3], #4
 8003210:	e7d8      	b.n	80031c4 <__multiply+0x50>
 8003212:	f8b3 a000 	ldrh.w	sl, [r3]
 8003216:	f1ba 0f00 	cmp.w	sl, #0
 800321a:	d023      	beq.n	8003264 <__multiply+0xf0>
 800321c:	f104 0e14 	add.w	lr, r4, #20
 8003220:	46a9      	mov	r9, r5
 8003222:	f04f 0c00 	mov.w	ip, #0
 8003226:	f85e 2b04 	ldr.w	r2, [lr], #4
 800322a:	f8d9 1000 	ldr.w	r1, [r9]
 800322e:	fa1f fb82 	uxth.w	fp, r2
 8003232:	b289      	uxth	r1, r1
 8003234:	fb0a 110b 	mla	r1, sl, fp, r1
 8003238:	4461      	add	r1, ip
 800323a:	f8d9 c000 	ldr.w	ip, [r9]
 800323e:	0c12      	lsrs	r2, r2, #16
 8003240:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003244:	fb0a c202 	mla	r2, sl, r2, ip
 8003248:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800324c:	b289      	uxth	r1, r1
 800324e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003252:	4577      	cmp	r7, lr
 8003254:	f849 1b04 	str.w	r1, [r9], #4
 8003258:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800325c:	d8e3      	bhi.n	8003226 <__multiply+0xb2>
 800325e:	9a01      	ldr	r2, [sp, #4]
 8003260:	f845 c002 	str.w	ip, [r5, r2]
 8003264:	9a03      	ldr	r2, [sp, #12]
 8003266:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800326a:	3304      	adds	r3, #4
 800326c:	f1b9 0f00 	cmp.w	r9, #0
 8003270:	d021      	beq.n	80032b6 <__multiply+0x142>
 8003272:	6829      	ldr	r1, [r5, #0]
 8003274:	f104 0c14 	add.w	ip, r4, #20
 8003278:	46ae      	mov	lr, r5
 800327a:	f04f 0a00 	mov.w	sl, #0
 800327e:	f8bc b000 	ldrh.w	fp, [ip]
 8003282:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003286:	fb09 220b 	mla	r2, r9, fp, r2
 800328a:	4452      	add	r2, sl
 800328c:	b289      	uxth	r1, r1
 800328e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003292:	f84e 1b04 	str.w	r1, [lr], #4
 8003296:	f85c 1b04 	ldr.w	r1, [ip], #4
 800329a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800329e:	f8be 1000 	ldrh.w	r1, [lr]
 80032a2:	fb09 110a 	mla	r1, r9, sl, r1
 80032a6:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80032aa:	4567      	cmp	r7, ip
 80032ac:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80032b0:	d8e5      	bhi.n	800327e <__multiply+0x10a>
 80032b2:	9a01      	ldr	r2, [sp, #4]
 80032b4:	50a9      	str	r1, [r5, r2]
 80032b6:	3504      	adds	r5, #4
 80032b8:	e79a      	b.n	80031f0 <__multiply+0x7c>
 80032ba:	3e01      	subs	r6, #1
 80032bc:	e79c      	b.n	80031f8 <__multiply+0x84>
 80032be:	bf00      	nop
 80032c0:	08003ec0 	.word	0x08003ec0
 80032c4:	08003ed1 	.word	0x08003ed1

080032c8 <__pow5mult>:
 80032c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80032cc:	4615      	mov	r5, r2
 80032ce:	f012 0203 	ands.w	r2, r2, #3
 80032d2:	4606      	mov	r6, r0
 80032d4:	460f      	mov	r7, r1
 80032d6:	d007      	beq.n	80032e8 <__pow5mult+0x20>
 80032d8:	4c25      	ldr	r4, [pc, #148]	; (8003370 <__pow5mult+0xa8>)
 80032da:	3a01      	subs	r2, #1
 80032dc:	2300      	movs	r3, #0
 80032de:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80032e2:	f7ff fe9d 	bl	8003020 <__multadd>
 80032e6:	4607      	mov	r7, r0
 80032e8:	10ad      	asrs	r5, r5, #2
 80032ea:	d03d      	beq.n	8003368 <__pow5mult+0xa0>
 80032ec:	69f4      	ldr	r4, [r6, #28]
 80032ee:	b97c      	cbnz	r4, 8003310 <__pow5mult+0x48>
 80032f0:	2010      	movs	r0, #16
 80032f2:	f7ff fd7f 	bl	8002df4 <malloc>
 80032f6:	4602      	mov	r2, r0
 80032f8:	61f0      	str	r0, [r6, #28]
 80032fa:	b928      	cbnz	r0, 8003308 <__pow5mult+0x40>
 80032fc:	4b1d      	ldr	r3, [pc, #116]	; (8003374 <__pow5mult+0xac>)
 80032fe:	481e      	ldr	r0, [pc, #120]	; (8003378 <__pow5mult+0xb0>)
 8003300:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003304:	f000 fa68 	bl	80037d8 <__assert_func>
 8003308:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800330c:	6004      	str	r4, [r0, #0]
 800330e:	60c4      	str	r4, [r0, #12]
 8003310:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003314:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003318:	b94c      	cbnz	r4, 800332e <__pow5mult+0x66>
 800331a:	f240 2171 	movw	r1, #625	; 0x271
 800331e:	4630      	mov	r0, r6
 8003320:	f7ff ff12 	bl	8003148 <__i2b>
 8003324:	2300      	movs	r3, #0
 8003326:	f8c8 0008 	str.w	r0, [r8, #8]
 800332a:	4604      	mov	r4, r0
 800332c:	6003      	str	r3, [r0, #0]
 800332e:	f04f 0900 	mov.w	r9, #0
 8003332:	07eb      	lsls	r3, r5, #31
 8003334:	d50a      	bpl.n	800334c <__pow5mult+0x84>
 8003336:	4639      	mov	r1, r7
 8003338:	4622      	mov	r2, r4
 800333a:	4630      	mov	r0, r6
 800333c:	f7ff ff1a 	bl	8003174 <__multiply>
 8003340:	4639      	mov	r1, r7
 8003342:	4680      	mov	r8, r0
 8003344:	4630      	mov	r0, r6
 8003346:	f7ff fe49 	bl	8002fdc <_Bfree>
 800334a:	4647      	mov	r7, r8
 800334c:	106d      	asrs	r5, r5, #1
 800334e:	d00b      	beq.n	8003368 <__pow5mult+0xa0>
 8003350:	6820      	ldr	r0, [r4, #0]
 8003352:	b938      	cbnz	r0, 8003364 <__pow5mult+0x9c>
 8003354:	4622      	mov	r2, r4
 8003356:	4621      	mov	r1, r4
 8003358:	4630      	mov	r0, r6
 800335a:	f7ff ff0b 	bl	8003174 <__multiply>
 800335e:	6020      	str	r0, [r4, #0]
 8003360:	f8c0 9000 	str.w	r9, [r0]
 8003364:	4604      	mov	r4, r0
 8003366:	e7e4      	b.n	8003332 <__pow5mult+0x6a>
 8003368:	4638      	mov	r0, r7
 800336a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800336e:	bf00      	nop
 8003370:	08004020 	.word	0x08004020
 8003374:	08003e51 	.word	0x08003e51
 8003378:	08003ed1 	.word	0x08003ed1

0800337c <__lshift>:
 800337c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003380:	460c      	mov	r4, r1
 8003382:	6849      	ldr	r1, [r1, #4]
 8003384:	6923      	ldr	r3, [r4, #16]
 8003386:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800338a:	68a3      	ldr	r3, [r4, #8]
 800338c:	4607      	mov	r7, r0
 800338e:	4691      	mov	r9, r2
 8003390:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003394:	f108 0601 	add.w	r6, r8, #1
 8003398:	42b3      	cmp	r3, r6
 800339a:	db0b      	blt.n	80033b4 <__lshift+0x38>
 800339c:	4638      	mov	r0, r7
 800339e:	f7ff fddd 	bl	8002f5c <_Balloc>
 80033a2:	4605      	mov	r5, r0
 80033a4:	b948      	cbnz	r0, 80033ba <__lshift+0x3e>
 80033a6:	4602      	mov	r2, r0
 80033a8:	4b28      	ldr	r3, [pc, #160]	; (800344c <__lshift+0xd0>)
 80033aa:	4829      	ldr	r0, [pc, #164]	; (8003450 <__lshift+0xd4>)
 80033ac:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80033b0:	f000 fa12 	bl	80037d8 <__assert_func>
 80033b4:	3101      	adds	r1, #1
 80033b6:	005b      	lsls	r3, r3, #1
 80033b8:	e7ee      	b.n	8003398 <__lshift+0x1c>
 80033ba:	2300      	movs	r3, #0
 80033bc:	f100 0114 	add.w	r1, r0, #20
 80033c0:	f100 0210 	add.w	r2, r0, #16
 80033c4:	4618      	mov	r0, r3
 80033c6:	4553      	cmp	r3, sl
 80033c8:	db33      	blt.n	8003432 <__lshift+0xb6>
 80033ca:	6920      	ldr	r0, [r4, #16]
 80033cc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80033d0:	f104 0314 	add.w	r3, r4, #20
 80033d4:	f019 091f 	ands.w	r9, r9, #31
 80033d8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80033dc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80033e0:	d02b      	beq.n	800343a <__lshift+0xbe>
 80033e2:	f1c9 0e20 	rsb	lr, r9, #32
 80033e6:	468a      	mov	sl, r1
 80033e8:	2200      	movs	r2, #0
 80033ea:	6818      	ldr	r0, [r3, #0]
 80033ec:	fa00 f009 	lsl.w	r0, r0, r9
 80033f0:	4310      	orrs	r0, r2
 80033f2:	f84a 0b04 	str.w	r0, [sl], #4
 80033f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80033fa:	459c      	cmp	ip, r3
 80033fc:	fa22 f20e 	lsr.w	r2, r2, lr
 8003400:	d8f3      	bhi.n	80033ea <__lshift+0x6e>
 8003402:	ebac 0304 	sub.w	r3, ip, r4
 8003406:	3b15      	subs	r3, #21
 8003408:	f023 0303 	bic.w	r3, r3, #3
 800340c:	3304      	adds	r3, #4
 800340e:	f104 0015 	add.w	r0, r4, #21
 8003412:	4584      	cmp	ip, r0
 8003414:	bf38      	it	cc
 8003416:	2304      	movcc	r3, #4
 8003418:	50ca      	str	r2, [r1, r3]
 800341a:	b10a      	cbz	r2, 8003420 <__lshift+0xa4>
 800341c:	f108 0602 	add.w	r6, r8, #2
 8003420:	3e01      	subs	r6, #1
 8003422:	4638      	mov	r0, r7
 8003424:	612e      	str	r6, [r5, #16]
 8003426:	4621      	mov	r1, r4
 8003428:	f7ff fdd8 	bl	8002fdc <_Bfree>
 800342c:	4628      	mov	r0, r5
 800342e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003432:	f842 0f04 	str.w	r0, [r2, #4]!
 8003436:	3301      	adds	r3, #1
 8003438:	e7c5      	b.n	80033c6 <__lshift+0x4a>
 800343a:	3904      	subs	r1, #4
 800343c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003440:	f841 2f04 	str.w	r2, [r1, #4]!
 8003444:	459c      	cmp	ip, r3
 8003446:	d8f9      	bhi.n	800343c <__lshift+0xc0>
 8003448:	e7ea      	b.n	8003420 <__lshift+0xa4>
 800344a:	bf00      	nop
 800344c:	08003ec0 	.word	0x08003ec0
 8003450:	08003ed1 	.word	0x08003ed1

08003454 <__mcmp>:
 8003454:	690a      	ldr	r2, [r1, #16]
 8003456:	4603      	mov	r3, r0
 8003458:	6900      	ldr	r0, [r0, #16]
 800345a:	1a80      	subs	r0, r0, r2
 800345c:	b530      	push	{r4, r5, lr}
 800345e:	d10d      	bne.n	800347c <__mcmp+0x28>
 8003460:	3314      	adds	r3, #20
 8003462:	3114      	adds	r1, #20
 8003464:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003468:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800346c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003470:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003474:	4295      	cmp	r5, r2
 8003476:	d002      	beq.n	800347e <__mcmp+0x2a>
 8003478:	d304      	bcc.n	8003484 <__mcmp+0x30>
 800347a:	2001      	movs	r0, #1
 800347c:	bd30      	pop	{r4, r5, pc}
 800347e:	42a3      	cmp	r3, r4
 8003480:	d3f4      	bcc.n	800346c <__mcmp+0x18>
 8003482:	e7fb      	b.n	800347c <__mcmp+0x28>
 8003484:	f04f 30ff 	mov.w	r0, #4294967295
 8003488:	e7f8      	b.n	800347c <__mcmp+0x28>
	...

0800348c <__mdiff>:
 800348c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003490:	460d      	mov	r5, r1
 8003492:	4607      	mov	r7, r0
 8003494:	4611      	mov	r1, r2
 8003496:	4628      	mov	r0, r5
 8003498:	4614      	mov	r4, r2
 800349a:	f7ff ffdb 	bl	8003454 <__mcmp>
 800349e:	1e06      	subs	r6, r0, #0
 80034a0:	d111      	bne.n	80034c6 <__mdiff+0x3a>
 80034a2:	4631      	mov	r1, r6
 80034a4:	4638      	mov	r0, r7
 80034a6:	f7ff fd59 	bl	8002f5c <_Balloc>
 80034aa:	4602      	mov	r2, r0
 80034ac:	b928      	cbnz	r0, 80034ba <__mdiff+0x2e>
 80034ae:	4b39      	ldr	r3, [pc, #228]	; (8003594 <__mdiff+0x108>)
 80034b0:	f240 2137 	movw	r1, #567	; 0x237
 80034b4:	4838      	ldr	r0, [pc, #224]	; (8003598 <__mdiff+0x10c>)
 80034b6:	f000 f98f 	bl	80037d8 <__assert_func>
 80034ba:	2301      	movs	r3, #1
 80034bc:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80034c0:	4610      	mov	r0, r2
 80034c2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034c6:	bfa4      	itt	ge
 80034c8:	4623      	movge	r3, r4
 80034ca:	462c      	movge	r4, r5
 80034cc:	4638      	mov	r0, r7
 80034ce:	6861      	ldr	r1, [r4, #4]
 80034d0:	bfa6      	itte	ge
 80034d2:	461d      	movge	r5, r3
 80034d4:	2600      	movge	r6, #0
 80034d6:	2601      	movlt	r6, #1
 80034d8:	f7ff fd40 	bl	8002f5c <_Balloc>
 80034dc:	4602      	mov	r2, r0
 80034de:	b918      	cbnz	r0, 80034e8 <__mdiff+0x5c>
 80034e0:	4b2c      	ldr	r3, [pc, #176]	; (8003594 <__mdiff+0x108>)
 80034e2:	f240 2145 	movw	r1, #581	; 0x245
 80034e6:	e7e5      	b.n	80034b4 <__mdiff+0x28>
 80034e8:	6927      	ldr	r7, [r4, #16]
 80034ea:	60c6      	str	r6, [r0, #12]
 80034ec:	692e      	ldr	r6, [r5, #16]
 80034ee:	f104 0014 	add.w	r0, r4, #20
 80034f2:	f105 0914 	add.w	r9, r5, #20
 80034f6:	f102 0e14 	add.w	lr, r2, #20
 80034fa:	eb00 0c87 	add.w	ip, r0, r7, lsl #2
 80034fe:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003502:	3410      	adds	r4, #16
 8003504:	46f2      	mov	sl, lr
 8003506:	2100      	movs	r1, #0
 8003508:	f859 3b04 	ldr.w	r3, [r9], #4
 800350c:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8003510:	fa11 f88b 	uxtah	r8, r1, fp
 8003514:	b299      	uxth	r1, r3
 8003516:	0c1b      	lsrs	r3, r3, #16
 8003518:	eba8 0801 	sub.w	r8, r8, r1
 800351c:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003520:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003524:	fa1f f888 	uxth.w	r8, r8
 8003528:	1419      	asrs	r1, r3, #16
 800352a:	454e      	cmp	r6, r9
 800352c:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003530:	f84a 3b04 	str.w	r3, [sl], #4
 8003534:	d8e8      	bhi.n	8003508 <__mdiff+0x7c>
 8003536:	1b73      	subs	r3, r6, r5
 8003538:	3b15      	subs	r3, #21
 800353a:	f023 0303 	bic.w	r3, r3, #3
 800353e:	3304      	adds	r3, #4
 8003540:	3515      	adds	r5, #21
 8003542:	42ae      	cmp	r6, r5
 8003544:	bf38      	it	cc
 8003546:	2304      	movcc	r3, #4
 8003548:	4418      	add	r0, r3
 800354a:	4473      	add	r3, lr
 800354c:	469e      	mov	lr, r3
 800354e:	4606      	mov	r6, r0
 8003550:	4566      	cmp	r6, ip
 8003552:	d30e      	bcc.n	8003572 <__mdiff+0xe6>
 8003554:	f10c 0103 	add.w	r1, ip, #3
 8003558:	1a09      	subs	r1, r1, r0
 800355a:	f021 0103 	bic.w	r1, r1, #3
 800355e:	3803      	subs	r0, #3
 8003560:	4584      	cmp	ip, r0
 8003562:	bf38      	it	cc
 8003564:	2100      	movcc	r1, #0
 8003566:	440b      	add	r3, r1
 8003568:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800356c:	b179      	cbz	r1, 800358e <__mdiff+0x102>
 800356e:	6117      	str	r7, [r2, #16]
 8003570:	e7a6      	b.n	80034c0 <__mdiff+0x34>
 8003572:	f856 8b04 	ldr.w	r8, [r6], #4
 8003576:	fa11 f488 	uxtah	r4, r1, r8
 800357a:	1425      	asrs	r5, r4, #16
 800357c:	eb05 4518 	add.w	r5, r5, r8, lsr #16
 8003580:	b2a4      	uxth	r4, r4
 8003582:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8003586:	f84e 4b04 	str.w	r4, [lr], #4
 800358a:	1429      	asrs	r1, r5, #16
 800358c:	e7e0      	b.n	8003550 <__mdiff+0xc4>
 800358e:	3f01      	subs	r7, #1
 8003590:	e7ea      	b.n	8003568 <__mdiff+0xdc>
 8003592:	bf00      	nop
 8003594:	08003ec0 	.word	0x08003ec0
 8003598:	08003ed1 	.word	0x08003ed1

0800359c <__d2b>:
 800359c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800359e:	2101      	movs	r1, #1
 80035a0:	9e08      	ldr	r6, [sp, #32]
 80035a2:	4617      	mov	r7, r2
 80035a4:	461c      	mov	r4, r3
 80035a6:	f7ff fcd9 	bl	8002f5c <_Balloc>
 80035aa:	4605      	mov	r5, r0
 80035ac:	b930      	cbnz	r0, 80035bc <__d2b+0x20>
 80035ae:	4602      	mov	r2, r0
 80035b0:	4b23      	ldr	r3, [pc, #140]	; (8003640 <__d2b+0xa4>)
 80035b2:	4824      	ldr	r0, [pc, #144]	; (8003644 <__d2b+0xa8>)
 80035b4:	f240 310f 	movw	r1, #783	; 0x30f
 80035b8:	f000 f90e 	bl	80037d8 <__assert_func>
 80035bc:	f3c4 0313 	ubfx	r3, r4, #0, #20
 80035c0:	f3c4 540a 	ubfx	r4, r4, #20, #11
 80035c4:	bb24      	cbnz	r4, 8003610 <__d2b+0x74>
 80035c6:	2f00      	cmp	r7, #0
 80035c8:	9301      	str	r3, [sp, #4]
 80035ca:	d026      	beq.n	800361a <__d2b+0x7e>
 80035cc:	4668      	mov	r0, sp
 80035ce:	9700      	str	r7, [sp, #0]
 80035d0:	f7ff fd8c 	bl	80030ec <__lo0bits>
 80035d4:	e9dd 1200 	ldrd	r1, r2, [sp]
 80035d8:	b1e8      	cbz	r0, 8003616 <__d2b+0x7a>
 80035da:	f1c0 0320 	rsb	r3, r0, #32
 80035de:	fa02 f303 	lsl.w	r3, r2, r3
 80035e2:	430b      	orrs	r3, r1
 80035e4:	40c2      	lsrs	r2, r0
 80035e6:	616b      	str	r3, [r5, #20]
 80035e8:	9201      	str	r2, [sp, #4]
 80035ea:	9b01      	ldr	r3, [sp, #4]
 80035ec:	61ab      	str	r3, [r5, #24]
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	bf14      	ite	ne
 80035f2:	2102      	movne	r1, #2
 80035f4:	2101      	moveq	r1, #1
 80035f6:	6129      	str	r1, [r5, #16]
 80035f8:	b1bc      	cbz	r4, 800362a <__d2b+0x8e>
 80035fa:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80035fe:	4404      	add	r4, r0
 8003600:	6034      	str	r4, [r6, #0]
 8003602:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003606:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003608:	6018      	str	r0, [r3, #0]
 800360a:	4628      	mov	r0, r5
 800360c:	b003      	add	sp, #12
 800360e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003610:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003614:	e7d7      	b.n	80035c6 <__d2b+0x2a>
 8003616:	6169      	str	r1, [r5, #20]
 8003618:	e7e7      	b.n	80035ea <__d2b+0x4e>
 800361a:	a801      	add	r0, sp, #4
 800361c:	f7ff fd66 	bl	80030ec <__lo0bits>
 8003620:	9b01      	ldr	r3, [sp, #4]
 8003622:	616b      	str	r3, [r5, #20]
 8003624:	3020      	adds	r0, #32
 8003626:	2101      	movs	r1, #1
 8003628:	e7e5      	b.n	80035f6 <__d2b+0x5a>
 800362a:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 800362e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003632:	6030      	str	r0, [r6, #0]
 8003634:	6918      	ldr	r0, [r3, #16]
 8003636:	f7ff fd39 	bl	80030ac <__hi0bits>
 800363a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800363e:	e7e2      	b.n	8003606 <__d2b+0x6a>
 8003640:	08003ec0 	.word	0x08003ec0
 8003644:	08003ed1 	.word	0x08003ed1

08003648 <__sflush_r>:
 8003648:	898a      	ldrh	r2, [r1, #12]
 800364a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800364c:	4605      	mov	r5, r0
 800364e:	0710      	lsls	r0, r2, #28
 8003650:	460c      	mov	r4, r1
 8003652:	d457      	bmi.n	8003704 <__sflush_r+0xbc>
 8003654:	684b      	ldr	r3, [r1, #4]
 8003656:	2b00      	cmp	r3, #0
 8003658:	dc04      	bgt.n	8003664 <__sflush_r+0x1c>
 800365a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800365c:	2b00      	cmp	r3, #0
 800365e:	dc01      	bgt.n	8003664 <__sflush_r+0x1c>
 8003660:	2000      	movs	r0, #0
 8003662:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003664:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003666:	2e00      	cmp	r6, #0
 8003668:	d0fa      	beq.n	8003660 <__sflush_r+0x18>
 800366a:	2300      	movs	r3, #0
 800366c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003670:	682f      	ldr	r7, [r5, #0]
 8003672:	6a21      	ldr	r1, [r4, #32]
 8003674:	602b      	str	r3, [r5, #0]
 8003676:	d032      	beq.n	80036de <__sflush_r+0x96>
 8003678:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800367a:	89a3      	ldrh	r3, [r4, #12]
 800367c:	075a      	lsls	r2, r3, #29
 800367e:	d505      	bpl.n	800368c <__sflush_r+0x44>
 8003680:	6863      	ldr	r3, [r4, #4]
 8003682:	1ac0      	subs	r0, r0, r3
 8003684:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003686:	b10b      	cbz	r3, 800368c <__sflush_r+0x44>
 8003688:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800368a:	1ac0      	subs	r0, r0, r3
 800368c:	2300      	movs	r3, #0
 800368e:	4602      	mov	r2, r0
 8003690:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003692:	6a21      	ldr	r1, [r4, #32]
 8003694:	4628      	mov	r0, r5
 8003696:	47b0      	blx	r6
 8003698:	1c43      	adds	r3, r0, #1
 800369a:	89a3      	ldrh	r3, [r4, #12]
 800369c:	d106      	bne.n	80036ac <__sflush_r+0x64>
 800369e:	6829      	ldr	r1, [r5, #0]
 80036a0:	291d      	cmp	r1, #29
 80036a2:	d82b      	bhi.n	80036fc <__sflush_r+0xb4>
 80036a4:	4a28      	ldr	r2, [pc, #160]	; (8003748 <__sflush_r+0x100>)
 80036a6:	410a      	asrs	r2, r1
 80036a8:	07d6      	lsls	r6, r2, #31
 80036aa:	d427      	bmi.n	80036fc <__sflush_r+0xb4>
 80036ac:	2200      	movs	r2, #0
 80036ae:	6062      	str	r2, [r4, #4]
 80036b0:	04d9      	lsls	r1, r3, #19
 80036b2:	6922      	ldr	r2, [r4, #16]
 80036b4:	6022      	str	r2, [r4, #0]
 80036b6:	d504      	bpl.n	80036c2 <__sflush_r+0x7a>
 80036b8:	1c42      	adds	r2, r0, #1
 80036ba:	d101      	bne.n	80036c0 <__sflush_r+0x78>
 80036bc:	682b      	ldr	r3, [r5, #0]
 80036be:	b903      	cbnz	r3, 80036c2 <__sflush_r+0x7a>
 80036c0:	6560      	str	r0, [r4, #84]	; 0x54
 80036c2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80036c4:	602f      	str	r7, [r5, #0]
 80036c6:	2900      	cmp	r1, #0
 80036c8:	d0ca      	beq.n	8003660 <__sflush_r+0x18>
 80036ca:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80036ce:	4299      	cmp	r1, r3
 80036d0:	d002      	beq.n	80036d8 <__sflush_r+0x90>
 80036d2:	4628      	mov	r0, r5
 80036d4:	f7ff fb44 	bl	8002d60 <_free_r>
 80036d8:	2000      	movs	r0, #0
 80036da:	6360      	str	r0, [r4, #52]	; 0x34
 80036dc:	e7c1      	b.n	8003662 <__sflush_r+0x1a>
 80036de:	2301      	movs	r3, #1
 80036e0:	4628      	mov	r0, r5
 80036e2:	47b0      	blx	r6
 80036e4:	1c41      	adds	r1, r0, #1
 80036e6:	d1c8      	bne.n	800367a <__sflush_r+0x32>
 80036e8:	682b      	ldr	r3, [r5, #0]
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d0c5      	beq.n	800367a <__sflush_r+0x32>
 80036ee:	2b1d      	cmp	r3, #29
 80036f0:	d001      	beq.n	80036f6 <__sflush_r+0xae>
 80036f2:	2b16      	cmp	r3, #22
 80036f4:	d101      	bne.n	80036fa <__sflush_r+0xb2>
 80036f6:	602f      	str	r7, [r5, #0]
 80036f8:	e7b2      	b.n	8003660 <__sflush_r+0x18>
 80036fa:	89a3      	ldrh	r3, [r4, #12]
 80036fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003700:	81a3      	strh	r3, [r4, #12]
 8003702:	e7ae      	b.n	8003662 <__sflush_r+0x1a>
 8003704:	690f      	ldr	r7, [r1, #16]
 8003706:	2f00      	cmp	r7, #0
 8003708:	d0aa      	beq.n	8003660 <__sflush_r+0x18>
 800370a:	0793      	lsls	r3, r2, #30
 800370c:	680e      	ldr	r6, [r1, #0]
 800370e:	bf08      	it	eq
 8003710:	694b      	ldreq	r3, [r1, #20]
 8003712:	600f      	str	r7, [r1, #0]
 8003714:	bf18      	it	ne
 8003716:	2300      	movne	r3, #0
 8003718:	1bf6      	subs	r6, r6, r7
 800371a:	608b      	str	r3, [r1, #8]
 800371c:	2e00      	cmp	r6, #0
 800371e:	dd9f      	ble.n	8003660 <__sflush_r+0x18>
 8003720:	6a21      	ldr	r1, [r4, #32]
 8003722:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8003726:	4633      	mov	r3, r6
 8003728:	463a      	mov	r2, r7
 800372a:	4628      	mov	r0, r5
 800372c:	47e0      	blx	ip
 800372e:	2800      	cmp	r0, #0
 8003730:	dc06      	bgt.n	8003740 <__sflush_r+0xf8>
 8003732:	89a3      	ldrh	r3, [r4, #12]
 8003734:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003738:	81a3      	strh	r3, [r4, #12]
 800373a:	f04f 30ff 	mov.w	r0, #4294967295
 800373e:	e790      	b.n	8003662 <__sflush_r+0x1a>
 8003740:	4407      	add	r7, r0
 8003742:	1a36      	subs	r6, r6, r0
 8003744:	e7ea      	b.n	800371c <__sflush_r+0xd4>
 8003746:	bf00      	nop
 8003748:	dfbffffe 	.word	0xdfbffffe

0800374c <_fflush_r>:
 800374c:	b538      	push	{r3, r4, r5, lr}
 800374e:	690b      	ldr	r3, [r1, #16]
 8003750:	4605      	mov	r5, r0
 8003752:	460c      	mov	r4, r1
 8003754:	b913      	cbnz	r3, 800375c <_fflush_r+0x10>
 8003756:	2500      	movs	r5, #0
 8003758:	4628      	mov	r0, r5
 800375a:	bd38      	pop	{r3, r4, r5, pc}
 800375c:	b118      	cbz	r0, 8003766 <_fflush_r+0x1a>
 800375e:	6a03      	ldr	r3, [r0, #32]
 8003760:	b90b      	cbnz	r3, 8003766 <_fflush_r+0x1a>
 8003762:	f7fe fb9f 	bl	8001ea4 <__sinit>
 8003766:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800376a:	2b00      	cmp	r3, #0
 800376c:	d0f3      	beq.n	8003756 <_fflush_r+0xa>
 800376e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003770:	07d0      	lsls	r0, r2, #31
 8003772:	d404      	bmi.n	800377e <_fflush_r+0x32>
 8003774:	0599      	lsls	r1, r3, #22
 8003776:	d402      	bmi.n	800377e <_fflush_r+0x32>
 8003778:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800377a:	f7fe fc8a 	bl	8002092 <__retarget_lock_acquire_recursive>
 800377e:	4628      	mov	r0, r5
 8003780:	4621      	mov	r1, r4
 8003782:	f7ff ff61 	bl	8003648 <__sflush_r>
 8003786:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003788:	07da      	lsls	r2, r3, #31
 800378a:	4605      	mov	r5, r0
 800378c:	d4e4      	bmi.n	8003758 <_fflush_r+0xc>
 800378e:	89a3      	ldrh	r3, [r4, #12]
 8003790:	059b      	lsls	r3, r3, #22
 8003792:	d4e1      	bmi.n	8003758 <_fflush_r+0xc>
 8003794:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003796:	f7fe fc7d 	bl	8002094 <__retarget_lock_release_recursive>
 800379a:	e7dd      	b.n	8003758 <_fflush_r+0xc>

0800379c <_sbrk_r>:
 800379c:	b538      	push	{r3, r4, r5, lr}
 800379e:	4d06      	ldr	r5, [pc, #24]	; (80037b8 <_sbrk_r+0x1c>)
 80037a0:	2300      	movs	r3, #0
 80037a2:	4604      	mov	r4, r0
 80037a4:	4608      	mov	r0, r1
 80037a6:	602b      	str	r3, [r5, #0]
 80037a8:	f7fd fd4e 	bl	8001248 <_sbrk>
 80037ac:	1c43      	adds	r3, r0, #1
 80037ae:	d102      	bne.n	80037b6 <_sbrk_r+0x1a>
 80037b0:	682b      	ldr	r3, [r5, #0]
 80037b2:	b103      	cbz	r3, 80037b6 <_sbrk_r+0x1a>
 80037b4:	6023      	str	r3, [r4, #0]
 80037b6:	bd38      	pop	{r3, r4, r5, pc}
 80037b8:	20000324 	.word	0x20000324

080037bc <memcpy>:
 80037bc:	440a      	add	r2, r1
 80037be:	4291      	cmp	r1, r2
 80037c0:	f100 33ff 	add.w	r3, r0, #4294967295
 80037c4:	d100      	bne.n	80037c8 <memcpy+0xc>
 80037c6:	4770      	bx	lr
 80037c8:	b510      	push	{r4, lr}
 80037ca:	f811 4b01 	ldrb.w	r4, [r1], #1
 80037ce:	f803 4f01 	strb.w	r4, [r3, #1]!
 80037d2:	4291      	cmp	r1, r2
 80037d4:	d1f9      	bne.n	80037ca <memcpy+0xe>
 80037d6:	bd10      	pop	{r4, pc}

080037d8 <__assert_func>:
 80037d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80037da:	4614      	mov	r4, r2
 80037dc:	461a      	mov	r2, r3
 80037de:	4b09      	ldr	r3, [pc, #36]	; (8003804 <__assert_func+0x2c>)
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	4605      	mov	r5, r0
 80037e4:	68d8      	ldr	r0, [r3, #12]
 80037e6:	b14c      	cbz	r4, 80037fc <__assert_func+0x24>
 80037e8:	4b07      	ldr	r3, [pc, #28]	; (8003808 <__assert_func+0x30>)
 80037ea:	9100      	str	r1, [sp, #0]
 80037ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80037f0:	4906      	ldr	r1, [pc, #24]	; (800380c <__assert_func+0x34>)
 80037f2:	462b      	mov	r3, r5
 80037f4:	f000 f842 	bl	800387c <fiprintf>
 80037f8:	f000 f852 	bl	80038a0 <abort>
 80037fc:	4b04      	ldr	r3, [pc, #16]	; (8003810 <__assert_func+0x38>)
 80037fe:	461c      	mov	r4, r3
 8003800:	e7f3      	b.n	80037ea <__assert_func+0x12>
 8003802:	bf00      	nop
 8003804:	20000058 	.word	0x20000058
 8003808:	08004036 	.word	0x08004036
 800380c:	08004043 	.word	0x08004043
 8003810:	08004071 	.word	0x08004071

08003814 <_calloc_r>:
 8003814:	b570      	push	{r4, r5, r6, lr}
 8003816:	fba1 5402 	umull	r5, r4, r1, r2
 800381a:	b934      	cbnz	r4, 800382a <_calloc_r+0x16>
 800381c:	4629      	mov	r1, r5
 800381e:	f7ff fb11 	bl	8002e44 <_malloc_r>
 8003822:	4606      	mov	r6, r0
 8003824:	b928      	cbnz	r0, 8003832 <_calloc_r+0x1e>
 8003826:	4630      	mov	r0, r6
 8003828:	bd70      	pop	{r4, r5, r6, pc}
 800382a:	220c      	movs	r2, #12
 800382c:	6002      	str	r2, [r0, #0]
 800382e:	2600      	movs	r6, #0
 8003830:	e7f9      	b.n	8003826 <_calloc_r+0x12>
 8003832:	462a      	mov	r2, r5
 8003834:	4621      	mov	r1, r4
 8003836:	f7fe fbae 	bl	8001f96 <memset>
 800383a:	e7f4      	b.n	8003826 <_calloc_r+0x12>

0800383c <__ascii_mbtowc>:
 800383c:	b082      	sub	sp, #8
 800383e:	b901      	cbnz	r1, 8003842 <__ascii_mbtowc+0x6>
 8003840:	a901      	add	r1, sp, #4
 8003842:	b142      	cbz	r2, 8003856 <__ascii_mbtowc+0x1a>
 8003844:	b14b      	cbz	r3, 800385a <__ascii_mbtowc+0x1e>
 8003846:	7813      	ldrb	r3, [r2, #0]
 8003848:	600b      	str	r3, [r1, #0]
 800384a:	7812      	ldrb	r2, [r2, #0]
 800384c:	1e10      	subs	r0, r2, #0
 800384e:	bf18      	it	ne
 8003850:	2001      	movne	r0, #1
 8003852:	b002      	add	sp, #8
 8003854:	4770      	bx	lr
 8003856:	4610      	mov	r0, r2
 8003858:	e7fb      	b.n	8003852 <__ascii_mbtowc+0x16>
 800385a:	f06f 0001 	mvn.w	r0, #1
 800385e:	e7f8      	b.n	8003852 <__ascii_mbtowc+0x16>

08003860 <__ascii_wctomb>:
 8003860:	4603      	mov	r3, r0
 8003862:	4608      	mov	r0, r1
 8003864:	b141      	cbz	r1, 8003878 <__ascii_wctomb+0x18>
 8003866:	2aff      	cmp	r2, #255	; 0xff
 8003868:	d904      	bls.n	8003874 <__ascii_wctomb+0x14>
 800386a:	228a      	movs	r2, #138	; 0x8a
 800386c:	601a      	str	r2, [r3, #0]
 800386e:	f04f 30ff 	mov.w	r0, #4294967295
 8003872:	4770      	bx	lr
 8003874:	700a      	strb	r2, [r1, #0]
 8003876:	2001      	movs	r0, #1
 8003878:	4770      	bx	lr
	...

0800387c <fiprintf>:
 800387c:	b40e      	push	{r1, r2, r3}
 800387e:	b503      	push	{r0, r1, lr}
 8003880:	4601      	mov	r1, r0
 8003882:	ab03      	add	r3, sp, #12
 8003884:	4805      	ldr	r0, [pc, #20]	; (800389c <fiprintf+0x20>)
 8003886:	f853 2b04 	ldr.w	r2, [r3], #4
 800388a:	6800      	ldr	r0, [r0, #0]
 800388c:	9301      	str	r3, [sp, #4]
 800388e:	f000 f835 	bl	80038fc <_vfiprintf_r>
 8003892:	b002      	add	sp, #8
 8003894:	f85d eb04 	ldr.w	lr, [sp], #4
 8003898:	b003      	add	sp, #12
 800389a:	4770      	bx	lr
 800389c:	20000058 	.word	0x20000058

080038a0 <abort>:
 80038a0:	b508      	push	{r3, lr}
 80038a2:	2006      	movs	r0, #6
 80038a4:	f000 fa02 	bl	8003cac <raise>
 80038a8:	2001      	movs	r0, #1
 80038aa:	f7fd fc5a 	bl	8001162 <_exit>

080038ae <__sfputc_r>:
 80038ae:	6893      	ldr	r3, [r2, #8]
 80038b0:	3b01      	subs	r3, #1
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	b410      	push	{r4}
 80038b6:	6093      	str	r3, [r2, #8]
 80038b8:	da07      	bge.n	80038ca <__sfputc_r+0x1c>
 80038ba:	6994      	ldr	r4, [r2, #24]
 80038bc:	42a3      	cmp	r3, r4
 80038be:	db01      	blt.n	80038c4 <__sfputc_r+0x16>
 80038c0:	290a      	cmp	r1, #10
 80038c2:	d102      	bne.n	80038ca <__sfputc_r+0x1c>
 80038c4:	bc10      	pop	{r4}
 80038c6:	f000 b933 	b.w	8003b30 <__swbuf_r>
 80038ca:	6813      	ldr	r3, [r2, #0]
 80038cc:	1c58      	adds	r0, r3, #1
 80038ce:	6010      	str	r0, [r2, #0]
 80038d0:	7019      	strb	r1, [r3, #0]
 80038d2:	4608      	mov	r0, r1
 80038d4:	bc10      	pop	{r4}
 80038d6:	4770      	bx	lr

080038d8 <__sfputs_r>:
 80038d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038da:	4606      	mov	r6, r0
 80038dc:	460f      	mov	r7, r1
 80038de:	4614      	mov	r4, r2
 80038e0:	18d5      	adds	r5, r2, r3
 80038e2:	42ac      	cmp	r4, r5
 80038e4:	d101      	bne.n	80038ea <__sfputs_r+0x12>
 80038e6:	2000      	movs	r0, #0
 80038e8:	e007      	b.n	80038fa <__sfputs_r+0x22>
 80038ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038ee:	463a      	mov	r2, r7
 80038f0:	4630      	mov	r0, r6
 80038f2:	f7ff ffdc 	bl	80038ae <__sfputc_r>
 80038f6:	1c43      	adds	r3, r0, #1
 80038f8:	d1f3      	bne.n	80038e2 <__sfputs_r+0xa>
 80038fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080038fc <_vfiprintf_r>:
 80038fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003900:	460d      	mov	r5, r1
 8003902:	b09d      	sub	sp, #116	; 0x74
 8003904:	4614      	mov	r4, r2
 8003906:	4698      	mov	r8, r3
 8003908:	4606      	mov	r6, r0
 800390a:	b118      	cbz	r0, 8003914 <_vfiprintf_r+0x18>
 800390c:	6a03      	ldr	r3, [r0, #32]
 800390e:	b90b      	cbnz	r3, 8003914 <_vfiprintf_r+0x18>
 8003910:	f7fe fac8 	bl	8001ea4 <__sinit>
 8003914:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003916:	07d9      	lsls	r1, r3, #31
 8003918:	d405      	bmi.n	8003926 <_vfiprintf_r+0x2a>
 800391a:	89ab      	ldrh	r3, [r5, #12]
 800391c:	059a      	lsls	r2, r3, #22
 800391e:	d402      	bmi.n	8003926 <_vfiprintf_r+0x2a>
 8003920:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003922:	f7fe fbb6 	bl	8002092 <__retarget_lock_acquire_recursive>
 8003926:	89ab      	ldrh	r3, [r5, #12]
 8003928:	071b      	lsls	r3, r3, #28
 800392a:	d501      	bpl.n	8003930 <_vfiprintf_r+0x34>
 800392c:	692b      	ldr	r3, [r5, #16]
 800392e:	b99b      	cbnz	r3, 8003958 <_vfiprintf_r+0x5c>
 8003930:	4629      	mov	r1, r5
 8003932:	4630      	mov	r0, r6
 8003934:	f000 f93a 	bl	8003bac <__swsetup_r>
 8003938:	b170      	cbz	r0, 8003958 <_vfiprintf_r+0x5c>
 800393a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800393c:	07dc      	lsls	r4, r3, #31
 800393e:	d504      	bpl.n	800394a <_vfiprintf_r+0x4e>
 8003940:	f04f 30ff 	mov.w	r0, #4294967295
 8003944:	b01d      	add	sp, #116	; 0x74
 8003946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800394a:	89ab      	ldrh	r3, [r5, #12]
 800394c:	0598      	lsls	r0, r3, #22
 800394e:	d4f7      	bmi.n	8003940 <_vfiprintf_r+0x44>
 8003950:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003952:	f7fe fb9f 	bl	8002094 <__retarget_lock_release_recursive>
 8003956:	e7f3      	b.n	8003940 <_vfiprintf_r+0x44>
 8003958:	2300      	movs	r3, #0
 800395a:	9309      	str	r3, [sp, #36]	; 0x24
 800395c:	2320      	movs	r3, #32
 800395e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003962:	f8cd 800c 	str.w	r8, [sp, #12]
 8003966:	2330      	movs	r3, #48	; 0x30
 8003968:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8003b1c <_vfiprintf_r+0x220>
 800396c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003970:	f04f 0901 	mov.w	r9, #1
 8003974:	4623      	mov	r3, r4
 8003976:	469a      	mov	sl, r3
 8003978:	f813 2b01 	ldrb.w	r2, [r3], #1
 800397c:	b10a      	cbz	r2, 8003982 <_vfiprintf_r+0x86>
 800397e:	2a25      	cmp	r2, #37	; 0x25
 8003980:	d1f9      	bne.n	8003976 <_vfiprintf_r+0x7a>
 8003982:	ebba 0b04 	subs.w	fp, sl, r4
 8003986:	d00b      	beq.n	80039a0 <_vfiprintf_r+0xa4>
 8003988:	465b      	mov	r3, fp
 800398a:	4622      	mov	r2, r4
 800398c:	4629      	mov	r1, r5
 800398e:	4630      	mov	r0, r6
 8003990:	f7ff ffa2 	bl	80038d8 <__sfputs_r>
 8003994:	3001      	adds	r0, #1
 8003996:	f000 80a9 	beq.w	8003aec <_vfiprintf_r+0x1f0>
 800399a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800399c:	445a      	add	r2, fp
 800399e:	9209      	str	r2, [sp, #36]	; 0x24
 80039a0:	f89a 3000 	ldrb.w	r3, [sl]
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	f000 80a1 	beq.w	8003aec <_vfiprintf_r+0x1f0>
 80039aa:	2300      	movs	r3, #0
 80039ac:	f04f 32ff 	mov.w	r2, #4294967295
 80039b0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80039b4:	f10a 0a01 	add.w	sl, sl, #1
 80039b8:	9304      	str	r3, [sp, #16]
 80039ba:	9307      	str	r3, [sp, #28]
 80039bc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80039c0:	931a      	str	r3, [sp, #104]	; 0x68
 80039c2:	4654      	mov	r4, sl
 80039c4:	2205      	movs	r2, #5
 80039c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80039ca:	4854      	ldr	r0, [pc, #336]	; (8003b1c <_vfiprintf_r+0x220>)
 80039cc:	f7fc fc08 	bl	80001e0 <memchr>
 80039d0:	9a04      	ldr	r2, [sp, #16]
 80039d2:	b9d8      	cbnz	r0, 8003a0c <_vfiprintf_r+0x110>
 80039d4:	06d1      	lsls	r1, r2, #27
 80039d6:	bf44      	itt	mi
 80039d8:	2320      	movmi	r3, #32
 80039da:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80039de:	0713      	lsls	r3, r2, #28
 80039e0:	bf44      	itt	mi
 80039e2:	232b      	movmi	r3, #43	; 0x2b
 80039e4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80039e8:	f89a 3000 	ldrb.w	r3, [sl]
 80039ec:	2b2a      	cmp	r3, #42	; 0x2a
 80039ee:	d015      	beq.n	8003a1c <_vfiprintf_r+0x120>
 80039f0:	9a07      	ldr	r2, [sp, #28]
 80039f2:	4654      	mov	r4, sl
 80039f4:	2000      	movs	r0, #0
 80039f6:	f04f 0c0a 	mov.w	ip, #10
 80039fa:	4621      	mov	r1, r4
 80039fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003a00:	3b30      	subs	r3, #48	; 0x30
 8003a02:	2b09      	cmp	r3, #9
 8003a04:	d94d      	bls.n	8003aa2 <_vfiprintf_r+0x1a6>
 8003a06:	b1b0      	cbz	r0, 8003a36 <_vfiprintf_r+0x13a>
 8003a08:	9207      	str	r2, [sp, #28]
 8003a0a:	e014      	b.n	8003a36 <_vfiprintf_r+0x13a>
 8003a0c:	eba0 0308 	sub.w	r3, r0, r8
 8003a10:	fa09 f303 	lsl.w	r3, r9, r3
 8003a14:	4313      	orrs	r3, r2
 8003a16:	9304      	str	r3, [sp, #16]
 8003a18:	46a2      	mov	sl, r4
 8003a1a:	e7d2      	b.n	80039c2 <_vfiprintf_r+0xc6>
 8003a1c:	9b03      	ldr	r3, [sp, #12]
 8003a1e:	1d19      	adds	r1, r3, #4
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	9103      	str	r1, [sp, #12]
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	bfbb      	ittet	lt
 8003a28:	425b      	neglt	r3, r3
 8003a2a:	f042 0202 	orrlt.w	r2, r2, #2
 8003a2e:	9307      	strge	r3, [sp, #28]
 8003a30:	9307      	strlt	r3, [sp, #28]
 8003a32:	bfb8      	it	lt
 8003a34:	9204      	strlt	r2, [sp, #16]
 8003a36:	7823      	ldrb	r3, [r4, #0]
 8003a38:	2b2e      	cmp	r3, #46	; 0x2e
 8003a3a:	d10c      	bne.n	8003a56 <_vfiprintf_r+0x15a>
 8003a3c:	7863      	ldrb	r3, [r4, #1]
 8003a3e:	2b2a      	cmp	r3, #42	; 0x2a
 8003a40:	d134      	bne.n	8003aac <_vfiprintf_r+0x1b0>
 8003a42:	9b03      	ldr	r3, [sp, #12]
 8003a44:	1d1a      	adds	r2, r3, #4
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	9203      	str	r2, [sp, #12]
 8003a4a:	2b00      	cmp	r3, #0
 8003a4c:	bfb8      	it	lt
 8003a4e:	f04f 33ff 	movlt.w	r3, #4294967295
 8003a52:	3402      	adds	r4, #2
 8003a54:	9305      	str	r3, [sp, #20]
 8003a56:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8003b20 <_vfiprintf_r+0x224>
 8003a5a:	7821      	ldrb	r1, [r4, #0]
 8003a5c:	2203      	movs	r2, #3
 8003a5e:	4650      	mov	r0, sl
 8003a60:	f7fc fbbe 	bl	80001e0 <memchr>
 8003a64:	b138      	cbz	r0, 8003a76 <_vfiprintf_r+0x17a>
 8003a66:	9b04      	ldr	r3, [sp, #16]
 8003a68:	eba0 000a 	sub.w	r0, r0, sl
 8003a6c:	2240      	movs	r2, #64	; 0x40
 8003a6e:	4082      	lsls	r2, r0
 8003a70:	4313      	orrs	r3, r2
 8003a72:	3401      	adds	r4, #1
 8003a74:	9304      	str	r3, [sp, #16]
 8003a76:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003a7a:	482a      	ldr	r0, [pc, #168]	; (8003b24 <_vfiprintf_r+0x228>)
 8003a7c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003a80:	2206      	movs	r2, #6
 8003a82:	f7fc fbad 	bl	80001e0 <memchr>
 8003a86:	2800      	cmp	r0, #0
 8003a88:	d03f      	beq.n	8003b0a <_vfiprintf_r+0x20e>
 8003a8a:	4b27      	ldr	r3, [pc, #156]	; (8003b28 <_vfiprintf_r+0x22c>)
 8003a8c:	bb1b      	cbnz	r3, 8003ad6 <_vfiprintf_r+0x1da>
 8003a8e:	9b03      	ldr	r3, [sp, #12]
 8003a90:	3307      	adds	r3, #7
 8003a92:	f023 0307 	bic.w	r3, r3, #7
 8003a96:	3308      	adds	r3, #8
 8003a98:	9303      	str	r3, [sp, #12]
 8003a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a9c:	443b      	add	r3, r7
 8003a9e:	9309      	str	r3, [sp, #36]	; 0x24
 8003aa0:	e768      	b.n	8003974 <_vfiprintf_r+0x78>
 8003aa2:	fb0c 3202 	mla	r2, ip, r2, r3
 8003aa6:	460c      	mov	r4, r1
 8003aa8:	2001      	movs	r0, #1
 8003aaa:	e7a6      	b.n	80039fa <_vfiprintf_r+0xfe>
 8003aac:	2300      	movs	r3, #0
 8003aae:	3401      	adds	r4, #1
 8003ab0:	9305      	str	r3, [sp, #20]
 8003ab2:	4619      	mov	r1, r3
 8003ab4:	f04f 0c0a 	mov.w	ip, #10
 8003ab8:	4620      	mov	r0, r4
 8003aba:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003abe:	3a30      	subs	r2, #48	; 0x30
 8003ac0:	2a09      	cmp	r2, #9
 8003ac2:	d903      	bls.n	8003acc <_vfiprintf_r+0x1d0>
 8003ac4:	2b00      	cmp	r3, #0
 8003ac6:	d0c6      	beq.n	8003a56 <_vfiprintf_r+0x15a>
 8003ac8:	9105      	str	r1, [sp, #20]
 8003aca:	e7c4      	b.n	8003a56 <_vfiprintf_r+0x15a>
 8003acc:	fb0c 2101 	mla	r1, ip, r1, r2
 8003ad0:	4604      	mov	r4, r0
 8003ad2:	2301      	movs	r3, #1
 8003ad4:	e7f0      	b.n	8003ab8 <_vfiprintf_r+0x1bc>
 8003ad6:	ab03      	add	r3, sp, #12
 8003ad8:	9300      	str	r3, [sp, #0]
 8003ada:	462a      	mov	r2, r5
 8003adc:	4b13      	ldr	r3, [pc, #76]	; (8003b2c <_vfiprintf_r+0x230>)
 8003ade:	a904      	add	r1, sp, #16
 8003ae0:	4630      	mov	r0, r6
 8003ae2:	f7fd fd97 	bl	8001614 <_printf_float>
 8003ae6:	4607      	mov	r7, r0
 8003ae8:	1c78      	adds	r0, r7, #1
 8003aea:	d1d6      	bne.n	8003a9a <_vfiprintf_r+0x19e>
 8003aec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003aee:	07d9      	lsls	r1, r3, #31
 8003af0:	d405      	bmi.n	8003afe <_vfiprintf_r+0x202>
 8003af2:	89ab      	ldrh	r3, [r5, #12]
 8003af4:	059a      	lsls	r2, r3, #22
 8003af6:	d402      	bmi.n	8003afe <_vfiprintf_r+0x202>
 8003af8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003afa:	f7fe facb 	bl	8002094 <__retarget_lock_release_recursive>
 8003afe:	89ab      	ldrh	r3, [r5, #12]
 8003b00:	065b      	lsls	r3, r3, #25
 8003b02:	f53f af1d 	bmi.w	8003940 <_vfiprintf_r+0x44>
 8003b06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003b08:	e71c      	b.n	8003944 <_vfiprintf_r+0x48>
 8003b0a:	ab03      	add	r3, sp, #12
 8003b0c:	9300      	str	r3, [sp, #0]
 8003b0e:	462a      	mov	r2, r5
 8003b10:	4b06      	ldr	r3, [pc, #24]	; (8003b2c <_vfiprintf_r+0x230>)
 8003b12:	a904      	add	r1, sp, #16
 8003b14:	4630      	mov	r0, r6
 8003b16:	f7fe f817 	bl	8001b48 <_printf_i>
 8003b1a:	e7e4      	b.n	8003ae6 <_vfiprintf_r+0x1ea>
 8003b1c:	08004173 	.word	0x08004173
 8003b20:	08004179 	.word	0x08004179
 8003b24:	0800417d 	.word	0x0800417d
 8003b28:	08001615 	.word	0x08001615
 8003b2c:	080038d9 	.word	0x080038d9

08003b30 <__swbuf_r>:
 8003b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b32:	460e      	mov	r6, r1
 8003b34:	4614      	mov	r4, r2
 8003b36:	4605      	mov	r5, r0
 8003b38:	b118      	cbz	r0, 8003b42 <__swbuf_r+0x12>
 8003b3a:	6a03      	ldr	r3, [r0, #32]
 8003b3c:	b90b      	cbnz	r3, 8003b42 <__swbuf_r+0x12>
 8003b3e:	f7fe f9b1 	bl	8001ea4 <__sinit>
 8003b42:	69a3      	ldr	r3, [r4, #24]
 8003b44:	60a3      	str	r3, [r4, #8]
 8003b46:	89a3      	ldrh	r3, [r4, #12]
 8003b48:	071a      	lsls	r2, r3, #28
 8003b4a:	d525      	bpl.n	8003b98 <__swbuf_r+0x68>
 8003b4c:	6923      	ldr	r3, [r4, #16]
 8003b4e:	b31b      	cbz	r3, 8003b98 <__swbuf_r+0x68>
 8003b50:	6823      	ldr	r3, [r4, #0]
 8003b52:	6922      	ldr	r2, [r4, #16]
 8003b54:	1a98      	subs	r0, r3, r2
 8003b56:	6963      	ldr	r3, [r4, #20]
 8003b58:	b2f6      	uxtb	r6, r6
 8003b5a:	4283      	cmp	r3, r0
 8003b5c:	4637      	mov	r7, r6
 8003b5e:	dc04      	bgt.n	8003b6a <__swbuf_r+0x3a>
 8003b60:	4621      	mov	r1, r4
 8003b62:	4628      	mov	r0, r5
 8003b64:	f7ff fdf2 	bl	800374c <_fflush_r>
 8003b68:	b9e0      	cbnz	r0, 8003ba4 <__swbuf_r+0x74>
 8003b6a:	68a3      	ldr	r3, [r4, #8]
 8003b6c:	3b01      	subs	r3, #1
 8003b6e:	60a3      	str	r3, [r4, #8]
 8003b70:	6823      	ldr	r3, [r4, #0]
 8003b72:	1c5a      	adds	r2, r3, #1
 8003b74:	6022      	str	r2, [r4, #0]
 8003b76:	701e      	strb	r6, [r3, #0]
 8003b78:	6962      	ldr	r2, [r4, #20]
 8003b7a:	1c43      	adds	r3, r0, #1
 8003b7c:	429a      	cmp	r2, r3
 8003b7e:	d004      	beq.n	8003b8a <__swbuf_r+0x5a>
 8003b80:	89a3      	ldrh	r3, [r4, #12]
 8003b82:	07db      	lsls	r3, r3, #31
 8003b84:	d506      	bpl.n	8003b94 <__swbuf_r+0x64>
 8003b86:	2e0a      	cmp	r6, #10
 8003b88:	d104      	bne.n	8003b94 <__swbuf_r+0x64>
 8003b8a:	4621      	mov	r1, r4
 8003b8c:	4628      	mov	r0, r5
 8003b8e:	f7ff fddd 	bl	800374c <_fflush_r>
 8003b92:	b938      	cbnz	r0, 8003ba4 <__swbuf_r+0x74>
 8003b94:	4638      	mov	r0, r7
 8003b96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b98:	4621      	mov	r1, r4
 8003b9a:	4628      	mov	r0, r5
 8003b9c:	f000 f806 	bl	8003bac <__swsetup_r>
 8003ba0:	2800      	cmp	r0, #0
 8003ba2:	d0d5      	beq.n	8003b50 <__swbuf_r+0x20>
 8003ba4:	f04f 37ff 	mov.w	r7, #4294967295
 8003ba8:	e7f4      	b.n	8003b94 <__swbuf_r+0x64>
	...

08003bac <__swsetup_r>:
 8003bac:	b538      	push	{r3, r4, r5, lr}
 8003bae:	4b2a      	ldr	r3, [pc, #168]	; (8003c58 <__swsetup_r+0xac>)
 8003bb0:	4605      	mov	r5, r0
 8003bb2:	6818      	ldr	r0, [r3, #0]
 8003bb4:	460c      	mov	r4, r1
 8003bb6:	b118      	cbz	r0, 8003bc0 <__swsetup_r+0x14>
 8003bb8:	6a03      	ldr	r3, [r0, #32]
 8003bba:	b90b      	cbnz	r3, 8003bc0 <__swsetup_r+0x14>
 8003bbc:	f7fe f972 	bl	8001ea4 <__sinit>
 8003bc0:	89a3      	ldrh	r3, [r4, #12]
 8003bc2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003bc6:	0718      	lsls	r0, r3, #28
 8003bc8:	d422      	bmi.n	8003c10 <__swsetup_r+0x64>
 8003bca:	06d9      	lsls	r1, r3, #27
 8003bcc:	d407      	bmi.n	8003bde <__swsetup_r+0x32>
 8003bce:	2309      	movs	r3, #9
 8003bd0:	602b      	str	r3, [r5, #0]
 8003bd2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003bd6:	81a3      	strh	r3, [r4, #12]
 8003bd8:	f04f 30ff 	mov.w	r0, #4294967295
 8003bdc:	e034      	b.n	8003c48 <__swsetup_r+0x9c>
 8003bde:	0758      	lsls	r0, r3, #29
 8003be0:	d512      	bpl.n	8003c08 <__swsetup_r+0x5c>
 8003be2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003be4:	b141      	cbz	r1, 8003bf8 <__swsetup_r+0x4c>
 8003be6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003bea:	4299      	cmp	r1, r3
 8003bec:	d002      	beq.n	8003bf4 <__swsetup_r+0x48>
 8003bee:	4628      	mov	r0, r5
 8003bf0:	f7ff f8b6 	bl	8002d60 <_free_r>
 8003bf4:	2300      	movs	r3, #0
 8003bf6:	6363      	str	r3, [r4, #52]	; 0x34
 8003bf8:	89a3      	ldrh	r3, [r4, #12]
 8003bfa:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003bfe:	81a3      	strh	r3, [r4, #12]
 8003c00:	2300      	movs	r3, #0
 8003c02:	6063      	str	r3, [r4, #4]
 8003c04:	6923      	ldr	r3, [r4, #16]
 8003c06:	6023      	str	r3, [r4, #0]
 8003c08:	89a3      	ldrh	r3, [r4, #12]
 8003c0a:	f043 0308 	orr.w	r3, r3, #8
 8003c0e:	81a3      	strh	r3, [r4, #12]
 8003c10:	6923      	ldr	r3, [r4, #16]
 8003c12:	b94b      	cbnz	r3, 8003c28 <__swsetup_r+0x7c>
 8003c14:	89a3      	ldrh	r3, [r4, #12]
 8003c16:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003c1a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003c1e:	d003      	beq.n	8003c28 <__swsetup_r+0x7c>
 8003c20:	4621      	mov	r1, r4
 8003c22:	4628      	mov	r0, r5
 8003c24:	f000 f884 	bl	8003d30 <__smakebuf_r>
 8003c28:	89a0      	ldrh	r0, [r4, #12]
 8003c2a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003c2e:	f010 0301 	ands.w	r3, r0, #1
 8003c32:	d00a      	beq.n	8003c4a <__swsetup_r+0x9e>
 8003c34:	2300      	movs	r3, #0
 8003c36:	60a3      	str	r3, [r4, #8]
 8003c38:	6963      	ldr	r3, [r4, #20]
 8003c3a:	425b      	negs	r3, r3
 8003c3c:	61a3      	str	r3, [r4, #24]
 8003c3e:	6923      	ldr	r3, [r4, #16]
 8003c40:	b943      	cbnz	r3, 8003c54 <__swsetup_r+0xa8>
 8003c42:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003c46:	d1c4      	bne.n	8003bd2 <__swsetup_r+0x26>
 8003c48:	bd38      	pop	{r3, r4, r5, pc}
 8003c4a:	0781      	lsls	r1, r0, #30
 8003c4c:	bf58      	it	pl
 8003c4e:	6963      	ldrpl	r3, [r4, #20]
 8003c50:	60a3      	str	r3, [r4, #8]
 8003c52:	e7f4      	b.n	8003c3e <__swsetup_r+0x92>
 8003c54:	2000      	movs	r0, #0
 8003c56:	e7f7      	b.n	8003c48 <__swsetup_r+0x9c>
 8003c58:	20000058 	.word	0x20000058

08003c5c <_raise_r>:
 8003c5c:	291f      	cmp	r1, #31
 8003c5e:	b538      	push	{r3, r4, r5, lr}
 8003c60:	4604      	mov	r4, r0
 8003c62:	460d      	mov	r5, r1
 8003c64:	d904      	bls.n	8003c70 <_raise_r+0x14>
 8003c66:	2316      	movs	r3, #22
 8003c68:	6003      	str	r3, [r0, #0]
 8003c6a:	f04f 30ff 	mov.w	r0, #4294967295
 8003c6e:	bd38      	pop	{r3, r4, r5, pc}
 8003c70:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003c72:	b112      	cbz	r2, 8003c7a <_raise_r+0x1e>
 8003c74:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003c78:	b94b      	cbnz	r3, 8003c8e <_raise_r+0x32>
 8003c7a:	4620      	mov	r0, r4
 8003c7c:	f000 f830 	bl	8003ce0 <_getpid_r>
 8003c80:	462a      	mov	r2, r5
 8003c82:	4601      	mov	r1, r0
 8003c84:	4620      	mov	r0, r4
 8003c86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003c8a:	f000 b817 	b.w	8003cbc <_kill_r>
 8003c8e:	2b01      	cmp	r3, #1
 8003c90:	d00a      	beq.n	8003ca8 <_raise_r+0x4c>
 8003c92:	1c59      	adds	r1, r3, #1
 8003c94:	d103      	bne.n	8003c9e <_raise_r+0x42>
 8003c96:	2316      	movs	r3, #22
 8003c98:	6003      	str	r3, [r0, #0]
 8003c9a:	2001      	movs	r0, #1
 8003c9c:	e7e7      	b.n	8003c6e <_raise_r+0x12>
 8003c9e:	2400      	movs	r4, #0
 8003ca0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8003ca4:	4628      	mov	r0, r5
 8003ca6:	4798      	blx	r3
 8003ca8:	2000      	movs	r0, #0
 8003caa:	e7e0      	b.n	8003c6e <_raise_r+0x12>

08003cac <raise>:
 8003cac:	4b02      	ldr	r3, [pc, #8]	; (8003cb8 <raise+0xc>)
 8003cae:	4601      	mov	r1, r0
 8003cb0:	6818      	ldr	r0, [r3, #0]
 8003cb2:	f7ff bfd3 	b.w	8003c5c <_raise_r>
 8003cb6:	bf00      	nop
 8003cb8:	20000058 	.word	0x20000058

08003cbc <_kill_r>:
 8003cbc:	b538      	push	{r3, r4, r5, lr}
 8003cbe:	4d07      	ldr	r5, [pc, #28]	; (8003cdc <_kill_r+0x20>)
 8003cc0:	2300      	movs	r3, #0
 8003cc2:	4604      	mov	r4, r0
 8003cc4:	4608      	mov	r0, r1
 8003cc6:	4611      	mov	r1, r2
 8003cc8:	602b      	str	r3, [r5, #0]
 8003cca:	f7fd fa3a 	bl	8001142 <_kill>
 8003cce:	1c43      	adds	r3, r0, #1
 8003cd0:	d102      	bne.n	8003cd8 <_kill_r+0x1c>
 8003cd2:	682b      	ldr	r3, [r5, #0]
 8003cd4:	b103      	cbz	r3, 8003cd8 <_kill_r+0x1c>
 8003cd6:	6023      	str	r3, [r4, #0]
 8003cd8:	bd38      	pop	{r3, r4, r5, pc}
 8003cda:	bf00      	nop
 8003cdc:	20000324 	.word	0x20000324

08003ce0 <_getpid_r>:
 8003ce0:	f7fd ba28 	b.w	8001134 <_getpid>

08003ce4 <__swhatbuf_r>:
 8003ce4:	b570      	push	{r4, r5, r6, lr}
 8003ce6:	460c      	mov	r4, r1
 8003ce8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003cec:	2900      	cmp	r1, #0
 8003cee:	b096      	sub	sp, #88	; 0x58
 8003cf0:	4615      	mov	r5, r2
 8003cf2:	461e      	mov	r6, r3
 8003cf4:	da0d      	bge.n	8003d12 <__swhatbuf_r+0x2e>
 8003cf6:	89a3      	ldrh	r3, [r4, #12]
 8003cf8:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003cfc:	f04f 0100 	mov.w	r1, #0
 8003d00:	bf0c      	ite	eq
 8003d02:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8003d06:	2340      	movne	r3, #64	; 0x40
 8003d08:	2000      	movs	r0, #0
 8003d0a:	6031      	str	r1, [r6, #0]
 8003d0c:	602b      	str	r3, [r5, #0]
 8003d0e:	b016      	add	sp, #88	; 0x58
 8003d10:	bd70      	pop	{r4, r5, r6, pc}
 8003d12:	466a      	mov	r2, sp
 8003d14:	f000 f848 	bl	8003da8 <_fstat_r>
 8003d18:	2800      	cmp	r0, #0
 8003d1a:	dbec      	blt.n	8003cf6 <__swhatbuf_r+0x12>
 8003d1c:	9901      	ldr	r1, [sp, #4]
 8003d1e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8003d22:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8003d26:	4259      	negs	r1, r3
 8003d28:	4159      	adcs	r1, r3
 8003d2a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003d2e:	e7eb      	b.n	8003d08 <__swhatbuf_r+0x24>

08003d30 <__smakebuf_r>:
 8003d30:	898b      	ldrh	r3, [r1, #12]
 8003d32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003d34:	079d      	lsls	r5, r3, #30
 8003d36:	4606      	mov	r6, r0
 8003d38:	460c      	mov	r4, r1
 8003d3a:	d507      	bpl.n	8003d4c <__smakebuf_r+0x1c>
 8003d3c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003d40:	6023      	str	r3, [r4, #0]
 8003d42:	6123      	str	r3, [r4, #16]
 8003d44:	2301      	movs	r3, #1
 8003d46:	6163      	str	r3, [r4, #20]
 8003d48:	b002      	add	sp, #8
 8003d4a:	bd70      	pop	{r4, r5, r6, pc}
 8003d4c:	ab01      	add	r3, sp, #4
 8003d4e:	466a      	mov	r2, sp
 8003d50:	f7ff ffc8 	bl	8003ce4 <__swhatbuf_r>
 8003d54:	9900      	ldr	r1, [sp, #0]
 8003d56:	4605      	mov	r5, r0
 8003d58:	4630      	mov	r0, r6
 8003d5a:	f7ff f873 	bl	8002e44 <_malloc_r>
 8003d5e:	b948      	cbnz	r0, 8003d74 <__smakebuf_r+0x44>
 8003d60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d64:	059a      	lsls	r2, r3, #22
 8003d66:	d4ef      	bmi.n	8003d48 <__smakebuf_r+0x18>
 8003d68:	f023 0303 	bic.w	r3, r3, #3
 8003d6c:	f043 0302 	orr.w	r3, r3, #2
 8003d70:	81a3      	strh	r3, [r4, #12]
 8003d72:	e7e3      	b.n	8003d3c <__smakebuf_r+0xc>
 8003d74:	89a3      	ldrh	r3, [r4, #12]
 8003d76:	6020      	str	r0, [r4, #0]
 8003d78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003d7c:	81a3      	strh	r3, [r4, #12]
 8003d7e:	9b00      	ldr	r3, [sp, #0]
 8003d80:	6163      	str	r3, [r4, #20]
 8003d82:	9b01      	ldr	r3, [sp, #4]
 8003d84:	6120      	str	r0, [r4, #16]
 8003d86:	b15b      	cbz	r3, 8003da0 <__smakebuf_r+0x70>
 8003d88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003d8c:	4630      	mov	r0, r6
 8003d8e:	f000 f81d 	bl	8003dcc <_isatty_r>
 8003d92:	b128      	cbz	r0, 8003da0 <__smakebuf_r+0x70>
 8003d94:	89a3      	ldrh	r3, [r4, #12]
 8003d96:	f023 0303 	bic.w	r3, r3, #3
 8003d9a:	f043 0301 	orr.w	r3, r3, #1
 8003d9e:	81a3      	strh	r3, [r4, #12]
 8003da0:	89a3      	ldrh	r3, [r4, #12]
 8003da2:	431d      	orrs	r5, r3
 8003da4:	81a5      	strh	r5, [r4, #12]
 8003da6:	e7cf      	b.n	8003d48 <__smakebuf_r+0x18>

08003da8 <_fstat_r>:
 8003da8:	b538      	push	{r3, r4, r5, lr}
 8003daa:	4d07      	ldr	r5, [pc, #28]	; (8003dc8 <_fstat_r+0x20>)
 8003dac:	2300      	movs	r3, #0
 8003dae:	4604      	mov	r4, r0
 8003db0:	4608      	mov	r0, r1
 8003db2:	4611      	mov	r1, r2
 8003db4:	602b      	str	r3, [r5, #0]
 8003db6:	f7fd fa22 	bl	80011fe <_fstat>
 8003dba:	1c43      	adds	r3, r0, #1
 8003dbc:	d102      	bne.n	8003dc4 <_fstat_r+0x1c>
 8003dbe:	682b      	ldr	r3, [r5, #0]
 8003dc0:	b103      	cbz	r3, 8003dc4 <_fstat_r+0x1c>
 8003dc2:	6023      	str	r3, [r4, #0]
 8003dc4:	bd38      	pop	{r3, r4, r5, pc}
 8003dc6:	bf00      	nop
 8003dc8:	20000324 	.word	0x20000324

08003dcc <_isatty_r>:
 8003dcc:	b538      	push	{r3, r4, r5, lr}
 8003dce:	4d06      	ldr	r5, [pc, #24]	; (8003de8 <_isatty_r+0x1c>)
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	4604      	mov	r4, r0
 8003dd4:	4608      	mov	r0, r1
 8003dd6:	602b      	str	r3, [r5, #0]
 8003dd8:	f7fd fa20 	bl	800121c <_isatty>
 8003ddc:	1c43      	adds	r3, r0, #1
 8003dde:	d102      	bne.n	8003de6 <_isatty_r+0x1a>
 8003de0:	682b      	ldr	r3, [r5, #0]
 8003de2:	b103      	cbz	r3, 8003de6 <_isatty_r+0x1a>
 8003de4:	6023      	str	r3, [r4, #0]
 8003de6:	bd38      	pop	{r3, r4, r5, pc}
 8003de8:	20000324 	.word	0x20000324

08003dec <_init>:
 8003dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dee:	bf00      	nop
 8003df0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003df2:	bc08      	pop	{r3}
 8003df4:	469e      	mov	lr, r3
 8003df6:	4770      	bx	lr

08003df8 <_fini>:
 8003df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dfa:	bf00      	nop
 8003dfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003dfe:	bc08      	pop	{r3}
 8003e00:	469e      	mov	lr, r3
 8003e02:	4770      	bx	lr
